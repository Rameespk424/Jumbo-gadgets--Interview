%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: digital-logo-2018-63.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Rixwan
%%CreationDate: 9/16/2018
%%BoundingBox: 0 0 800 800
%%HiResBoundingBox: 0 0 800 800
%%CropBox: 0 0 800 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-09-16T15:47:59+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-09-16T15:47:59+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-09-16T15:47:59+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEB9AH0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAB9AAAAAEA&#xA;AQH0AAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A885nuO7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVW1tpLq6htoqerO6xpXYcnIUV+/IzmIxJPINm&#xA;HEckxAc5ED5tXEEkE8kElPUiZkehqKqaHfGMhIAjqjLjMJGJ5xNfJTyTB2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpj5cFfMOljxu4B/yVXKNV/d&#xA;T/qn7nM7O/xjH/Xj94a1+UyazeVVV4TSIOChahXIqadSe5x0wrHH3Be0MnFnlsPqI29/3pfl7hux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVPvJGl&#xA;3WoeZLM24Ui0lhuZuRp+7SZA1PE/EMwu0M0YYZX/ABAj40XY9l4JZM8a/hIkfcJBR1DTbq91rWjb&#xA;gH6o9xcTVNP3aS8WI/4LJYssYY4X/FQ+NMM2CWTLk4f4eKR91oUaJqXGVnhMYhgW6YPsTExAVh41&#xA;5Zb+YhtvzNfFgNFlIJquGPFv3IHLnEdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVeg/lCtdUn/0b/dR/0z49/wB/b/uv5NvteO+aLtw+gb9eXwlv3u/7&#xA;B/vDt05/GO3c7y9Bcy635njtbIS3RS9EMzAsrv68dISrfuyK7mvj4Y6qQGPEZSoen7jv3tmiEjlz&#xA;CMblU6Pf6ht3I7zBBJHbXqS2npTJosXqT0IBYMgMXEfAOB328cp00gTGjY8U7fPfv3c7VWIzBjR8&#xA;Ab/Ebd2zzDOjeOdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVeyfk6lfLEv8AzHv+q1zk+3T++H9T/i3quwz+6P8AW/4lH/l4lf0z/wBtW+/5k5R2ofo/&#xA;4XD/AHzm9kH6/wDhk/8Aeonz/HTy3qB/5dZP+JJlfZh/fR/rD9LldqH9xP8Aqn9DwPO3fPnYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXtP5LrXyvL/2&#xA;0JP1Wmcf2/Ks4/qD/fvUdi/3R/rf8Smn5d28ifpoSIUJ1W+ZQwIqrCAgivYjKO1JA8Ff6nD/AHzm&#xA;dlWOO/58v96iPzDjp5Z1E/8ALrJ/xOPIdln99H+sP0uT2mf3Ev6p/Q+es7p4J2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV65+XF1cWf5Z61e27cLi1k&#xA;u5oXoDR44bZlNDt1Gcl2vAT12OJ5SER8zN6Ds6ZjppyHMcX3Reg+VZprrSdMuZm5TT2UUkrUAqz2&#xA;9uzGg26nNHrKjknEchMj/ZSd3o5mUIk8zEfdFL/zHSnlbUz/AMukv/E48y+yj++j/WH6WPaR/cy/&#xA;qn9D5yzvnhnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXrHkMf8AII/MZ/5j/wDqHts5HtU/644v8z/dTd5ov8Vn/nfdF6N5KSvl/Rv+2fb/APUNb5z/&#xA;AGhL99k/ry/3U3d6I/u4/wBUfdFCfmUtPKmqf8wcv/E48yex5fv4f1h+lHaJ/cy/qn9D5sz0V4l2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV6Lo8muW&#xA;v5Q3baelEur+5W8LBd7M28KyMvL/AIsULUb5zOpGGfacRM/TCNf1+KVfZu7TEZx0p4esjfuoPSdN&#xA;k1u20Dyh+j0ososY78sF2tWtYQ5HL/LCjbfOby+FLNn4zy4+H+txSr7Hc4pTjDHw/wBG/dQY9+Zm&#xA;t+Y5dDurPhbw3CtMLu3jkjd/0d+6KTEFiwLsQNv7c2nYunwjKJXIjajR+vex8HH7Rz5DjMdgd7/q&#xA;7bvEs7Z5p2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqlvBL&#xA;cXEVvEOUszrHGtQKsxoBU+5yM5iMTI8gkCzTNta/Jfz3o+mzahdW0TQwAF0ilDyfEQvwqOvXtmg0&#xA;3tRo82QY4k2e8UHMydn5YxshCaJY3WjWqz6l5VXWFvfjtzKZxJEImKMGSJvh5H+dd+22W6vLHPLh&#xA;x5/C4OdcNG9+Z/QUYomAuUOK/eyGx8t+c/Pt9Yw3mnDQ/LVhURwwwtBCiE8n9FHq0kr+O+a3LrtJ&#xA;2dCRhPxc8+pPET3cRHKIcqGHLqCARwwHw+XmnHnfzIbnz55e0Dy1FHdS6ROvwfai9eioEPE9IY0+&#xA;I1238Mw+ytHw6PLnzkxGSPxrv/zidnI1WovNCGPfhP2/sYB+ZurQ6n50v5IGDW9uUtYWHQiBQhI9&#xA;iwJHtnSdh6c4tLES+o+o/Hf7nXdoZRPMSOQ2+TFs2zhOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVVtJ2guoZ1HJonVwtStSpBpVaEfRkMkeKJHeEg0betj8+/N&#xA;t1dSQ2uhxu6kn0Fe8kkUA0+LjIOnQ7DONPsjpoxBlkPvqAH3O0HaWS9o/evP5y+f/wDqXfwvv+qm&#xA;Vf6F9F/q3/TP9TP+Ucv83/dLJvNv5zea4/qOmaXJptvIOMl1FHLF8P7XK5uGPEf6pBwx7N7J0R48&#xA;mQZJDoSD/sIj71Oo1OXaI4fx3lV1DyrY/lz5Mu7qTUYh5r1GP0YZ1UuwRyA8dsCVYfD9qYjboN8j&#xA;g7Rn2pq4xED+WgbI+4y/RBnLANNiJv8AeS/G363kN9fXd/dyXd5K09zMayyvuzGlKn7s7fFijjiI&#xA;xFRHR005mRs81DLGLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVROnTw2+oWs84YwxTRvKENHKqwLcTVd6dN8rzRMoEDmQUxNF7zB+bf5QWWqXOp6dZXVtfXZY3F&#xA;ytuwlk5tzbm4uhyq25zgcvs/2jkxjHOUZQjyHFsPcOB2kNXiibA3/HmlvmX/AJyBto3g/wAPQNdK&#xA;Q31j64J4uJ248OFw9a71rlmj9jyb8c8Pdw8J+dwZ5O06+n7b/WxjUvz686XUXp20VpZU+zMiPNID&#xA;4gzvKv8AwubPB7H6SBuRlPysAf7ED72mfamUjah+PNgGpapqOp3j3mo3Ml3dSfbmlYuxp0FT2HYZ&#xA;0uDT48MRDHERiOgcCc5SNyNlC5cwdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirJPI/wCXnmzztqElj5es/rLwKHuZmZY4olavEu7ED4qGg6nIykBzSBadefPyR8/+SdOT&#xA;U9YtYpNOLKj3drIJUjdvsiQUVlqdq0pXavTBHICkxIYz5U8o+YPNesxaPoVo13fSgsVBCqiKQGkd&#xA;moqqK9T+vJEgc0AWzPzZ/wA48/mb5Z0iXVruzhurG3T1Lp7OUStEgFWZkIRqL3Kg0+WQGQFJiWDe&#xA;XPL+o+Ydcs9E00K19fyCK3WRuCliCd2PTpkyaCAET5x8m695P12XRNcgEF9EqSfCeaOkgqrI42Yd&#xA;vmCO2MZAjZSKTLVfyv8AN2leSbHzlfW8cOjaiyLakuPVPqhjGxj6hWVOQPhTAJgmlp3kD8sPNXny&#xA;a9i8vxwu9gsb3HrSCKglLBaVBr9g4ymBzUC0780/84+/mf5b0mbVr3T457G2UvcvazJK0SKKl2QU&#xA;biO5ANO+RGQFJiXndvbz3NxFbwIZJ5nWOKNRVmdjRVA8STljFlPn/wDK/wA2+Q5bKPzBBHGL9Xa2&#xA;khkEqN6RUOKjoRzX78jGYPJJFJP5X8tap5m1600LS1Rr++ZkgWRuCkqhc1Y9NlOEmhagIvzH5F8x&#xA;+XfNA8s6tbiDVGeJIxyBjcT0COjjYqa0r41HUYBIEWpDfnjyLr/krWl0fXEjS9aFLgCFxIvByyj4&#xA;h3qhxjIHkpFIrzZ+Wnmfyvo2la1qKQyaXrK87G7tpRKjAoJF5EU4llao+R8MRIFSKa84flr5n8o6&#xA;dpd9rqQ241eP1bS2EgacKFViZIx9inMA174xkDyUimK5JDsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVe/wD5Q3E9l/zjz+YN7aSNBd+o6CeM8XC+hGKAjps7fflM/qDOPJ4xb+cPNNt5fl8u2+qX&#xA;EWhzuZJtPSQrE7NSvIDseIqOmW8Iu2NvZf8AnFZmht/PV3EeFzBpsZhlH2lNJm2PzQHKs3RlBV/5&#xA;xVvby6u/ONtczyT281gJZopWLq8hLKXYNWrEMQTjm6LB5t+R/wD5Nryx/wAxq/8AEWyeT6SiPN9M&#xA;/mZ+XGh/mjrFg1vIsd75a1NbHXVJ4u1k6LcOgI3qVdfTP+U2URlwthFpH/zknqul6n+TNvc6WVNj&#xA;HrAtYeAAT/RGuLZuFNuPKI8adsOIepE+TCv+cUIFuIPPFu8qwLNYQxtNIaIgYTgsx8FrU5PN0YwT&#xA;Xyjc+Rfym8neY/rPnWy8zXer2/o2mj6bIs0YkCyKPsPJTnz+JjxoB3NMErkRskUHnf8Azjd5S/xD&#xA;+aFhNKnKz0VTqU9RtyiIWAfP1mVvoOTymgxgN3rH5sWmt+evyh1vVdS0u6sNS8tatc3Gnpd28lvL&#xA;Jpwk2YLIqVUW8oJPjHlcNpM5bh4x/wA4/f8Ak4fLX/GaX/qHky3J9JYR5voT8wNB0n8y7m4fS41j&#xA;83eRdVjiliqOc1p6iyEV2qrLVkr0dWHfKInh9xZkW8g/5yz/APJpRf8AbMt/+TkuW4eTGfNlf/OO&#xA;95pPnryhcfl95jjNzHod1Bq2m8hX9ykwZ4t67cyVPishA6ZHLsbCY77PJPzl/MB/PHnq91WNj+jI&#xA;P9F0pD2t4ieL07GRiXPhWnbLIRoMZGywfJsXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq9L/&#xA;ACk/Nqy8n2Wr6Drul/pfyzri8b22RgsqngUYrWgYMpoRyBGxB8a5wvcMoypHec/zG/KY+TZfLXkf&#xA;yh9Wa6cSS6rqixy3MR25GFy9w4LBafbAAr8O+MYyuyVJHRI/yd/NOf8ALzzDNevafX9Mv4hb6haV&#xA;CsUDcldCQRyXfY7GtPcGcOILE0zlvzu/LHyvousQflv5XutO1XWo/Snu72QFYgQwrGPVuCQnMlVH&#xA;EV3PSmQ8MnmU8Q6PK/y88yWvlnzrpGv3cUk1tp04mliipzYAEUXkQK7+OWSFimILJ/MX51+ZB518&#xA;ya75RvZ9IsvMRiFxA6QvIVihEYryEgRh8VGQg79ciMYoApMm9V/NDSbz8kNI8gJa3A1PT7t7mW7b&#xA;h6DK008tF+LnWk46riIeq1vamvye/M/SPI9p5lh1C0uLltbtFtrc2/CiMqyCr82Xb94OmM4XSxNP&#xA;NssYvUfyv/NnSfInk7zHa2trcHzVrC+nZ6ggj9KBFjKxGrNz5K8jt9mnTK5wsjuZCVJr+Xv/ADkT&#xA;rFhPqdt57nvPMOi6haNb/Vx6bOrseJ+0UHFo2YN9GCWLuSJd7A/y481ad5S8/wCmeYZ4priw0+WR&#xA;/SQKJmRo3jXYkLX4xXfJyFimINFktl+c02lfnHfeetLhlXTdRnP1zT5CA8lq/EMjcSV5DjyU16gZ&#xA;Hg9NJ4t7S786/wAw9M8++cU1zTbae1t1tIrYxXHDnyjZ2J+BmFPj8cOONClkbRf5GfmfpH5e+Yb/&#xA;AFPU7W4u4ru0+rIltw5BvVR6nmyClEwZIcQWJp5tljF2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2Kst1nRPK2j6DpYuVvpdc1TT11GO5jlhFpH6ssiRwmBovUb4Y6s/qjc/ZyIJJSnH&#xA;lvyL5WvrXyzaX7Xx1bzVDdzW11BLClvaiCaa3jDwPFI83J7YlqSpQEUrgMjv5JAa/L38vrDzFoEl&#xA;++l6nq94dTh09bfTbiG3EUUsRczP6tvccuJFPtKPfGUqKgKHl7yZ5dvtT82qhu9csNBj9TTBYTRW&#xA;kl2hvorVXLyw3SqPTl57J2xMjsoDZ8jeXF843tj9anl0jTtLfVbuCKWF7pGjtRNJZmdVeH1EkPBn&#xA;CED+Wu2PEaWli+S/L175i8jxWTXdvpPm6SFZYJpYpbmANqD2MoWZYokf+65KTEKV3Bx4jR8lp3n/&#xA;AMlaVoOkWV7FaahpF7c3VxAumalNFcvLbwhf9KjeKC14JzbhxZNz0OxxjK1IU/OPkPT9E8q6Pqdr&#xA;cSzai3pxeYbeTjwt57u3S9tFj4gGjQOQ3Ik80bGMrKkKfmHSvJVt5M0nVtPsdSi1DV2uUjNxfwTQ&#xA;xG0kjViY0soWf1FkNBzXj/lYQTaCivNvlLy9omh2UsNjfS3d1pun3p1B9StBCst7bxzOv1IW3r8V&#xA;MhUfvfeuASJKSGBZNi7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWQ3PnK&#xA;a70S20y70yxuZ7O3NnaarIk31qO35s4jFJRAeJc8WMRYeOR4U2i9G/MbU9LsdPgTT7K5utHWePSN&#xA;SnWc3FqtwzO4QRzRwvR5HZfVjehJxMVtLdO826vpulxafZMsIg1CLVYLpQwmS4hQolGrx4/FX7PX&#xA;vhIW1SfzheySeYmjtLW2j8yqq3sMKyCOILdR3f7gF24fvIRs3IUqB2o8K2hvLnmK70HUGvLeKG5W&#xA;WGW1urS5VmhmgnQpJG/BkehB6qwI7HEi1BTGTz7qP6b0DVLaytLNPLTRPpOnQrMbdPSuWu6MZZZJ&#xA;n5zOxasld9qYOFbQdz5qvrrRodIuoYJ7a2vZL+2dw/qRmcATQowcUikKqzLStRUEb1NLaaa7+aXm&#xA;3XbTVrLVJkuLPVpUn+rMG9O1aKQun1VeX7sKpMdDX4DTrvgEAFtI73Xry70TTdHkSMW2ltcPbuoY&#xA;SMbplZ+ZJINPTFKAYaVNNY86xavYQQXmg6c17b2dtYRaqrX63AjtIkgibj9a+r8+EYr+6p7YBGlt&#xA;jOSQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;V8SF5EQCpYgAfM4qungkib4kKq26V7jFVLFVeeyuoFDyxlFJpU+PWhp0xV01jdwxiSSIqhoKntXc&#xA;V8MVcLK6MkcYjJeZQ8Y8VIrXFXQWVzPy9JOXE0bcDc9tziq1LW4kkeNIyXjBLr3AXrirUdvNIkjo&#xA;pZYhVyOwxVcLO5MgjCHmV5haipWla/diqySGWIIZF481DL7qehxVZirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdiqJ06n1+AncB1J+/Eqj/Maqr2wUUHp9tsASUpjfhIr9eJBp8j&#xA;hQi9Ra1kkeaKYu0rlvT4kBQfEnvgCoi+vLR4rpopC73TRn0+JHDh1qTt92KURb6zaxtbIwB9ONE9&#xA;ah+EcRzFKVO640qAt72KG3m+FZJGlV0RwxFBy32p44qr2WpQw+rPKS1xNKCyrtRBudyCKE9saVbb&#xA;XtvZteGFgwYr6KkGjLyqRuP5fHFVt3ewnUobi2akcYQDY7AbEfdiqH1CdZ7yWRTyQmkZpT4RsNvl&#xA;hQhsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVTGwgtQiXEjkMCdiUArXYj&#xA;4w34YEqWqXhubioIKIOKUrTx2rhCEIpAYEioBBI8RiqJNxBSX4eXP7J4qvYjt0od9uuKrmvIOTMs&#xA;QqYygBUUrzqD/wADtirUd1bqYj6deCkMKL1Kcfp+LffFXfWbZQAiGqyc+RA+ySRxpv2piq2S4je3&#xA;KAUkLlieI3B6bg/wxVDYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:CDE07CF09DB9E8119C88E1EBE681773C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:CDE07CF09DB9E8119C88E1EBE681773C</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:469BF1719AB9E8119C88E1EBE681773C</stRef:instanceID>
            <stRef:documentID>xmp.did:469BF1719AB9E8119C88E1EBE681773C</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6DE16EFF99B9E8119C88E1EBE681773C</stEvt:instanceID>
                  <stEvt:when>2018-09-16T15:21:20+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:469BF1719AB9E8119C88E1EBE681773C</stEvt:instanceID>
                  <stEvt:when>2018-09-16T15:22:47+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CDE07CF09DB9E8119C88E1EBE681773C</stEvt:instanceID>
                  <stEvt:when>2018-09-16T15:47:59+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
800 800 li
800 0 li
cp
clp
800 800 mo
0 800 li
0 0 li
800 0 li
800 800 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.923705 .822446 .500114 .616052 cmyk
f
245.204 479.617 mo
244.269 482.932 242.29 485.508 239.268 487.348 cv
236.245 489.188 232.589 490.107 228.302 490.107 cv
225.334 490.107 222.75 489.721 220.552 488.949 cv
218.353 488.178 216.512 487.109 215.028 485.748 cv
213.544 484.385 212.444 482.783 211.73 480.945 cv
211.015 479.105 210.658 477.119 210.658 474.984 cv
210.658 456.592 li
210.658 454.729 211.015 452.912 211.73 451.143 cv
212.444 449.369 213.53 447.803 214.987 446.441 cv
216.442 445.078 218.271 443.988 220.47 443.172 cv
222.667 442.354 225.279 441.945 228.302 441.945 cv
232.919 441.945 236.67 442.945 239.556 444.943 cv
242.442 446.941 244.351 449.438 245.287 452.436 cv
236.3 454.889 li
236.135 454.207 235.859 453.549 235.475 452.912 cv
235.09 452.277 234.568 451.699 233.909 451.176 cv
233.249 450.654 232.452 450.234 231.518 449.916 cv
230.582 449.598 229.51 449.438 228.302 449.438 cv
226.872 449.438 225.649 449.643 224.633 450.051 cv
223.616 450.461 222.778 450.994 222.119 451.652 cv
221.459 452.311 220.964 453.049 220.634 453.867 cv
220.305 454.684 220.14 455.502 220.14 456.318 cv
220.14 475.188 li
220.14 476.188 220.305 477.143 220.634 478.049 cv
220.964 478.959 221.472 479.752 222.16 480.434 cv
222.847 481.115 223.698 481.65 224.716 482.035 cv
225.732 482.42 226.928 482.613 228.302 482.613 cv
230.335 482.613 232.066 482.137 233.497 481.184 cv
234.925 480.229 235.832 478.912 236.217 477.232 cv
245.204 479.617 li
cp
0 0 0 0 cmyk
f
289.478 456.469 mo
289.478 455.877 289.354 455.184 289.107 454.389 cv
288.859 453.592 288.434 452.828 287.829 452.1 cv
287.224 451.373 286.414 450.748 285.397 450.225 cv
284.379 449.699 283.074 449.438 281.48 449.438 cv
279.886 449.438 278.554 449.678 277.481 450.156 cv
276.41 450.633 275.557 451.225 274.926 451.93 cv
274.293 452.637 273.84 453.398 273.565 454.217 cv
273.29 455.037 273.153 455.811 273.153 456.537 cv
273.236 474.695 li
273.236 476.971 273.867 478.883 275.132 480.43 cv
276.396 481.977 278.54 482.75 281.563 482.75 cv
283.707 482.75 285.562 482.148 287.128 480.941 cv
288.695 479.736 289.478 478.086 289.478 475.992 cv
289.478 456.469 li
cp
299.042 475.324 mo
299.042 477.596 298.616 479.641 297.764 481.455 cv
296.912 483.271 295.703 484.828 294.136 486.121 cv
292.57 487.416 290.715 488.404 288.571 489.086 cv
286.428 489.766 284.063 490.107 281.48 490.107 cv
278.348 490.107 275.654 489.688 273.401 488.848 cv
271.146 488.006 269.319 486.871 267.917 485.441 cv
266.516 484.01 265.486 482.354 264.826 480.469 cv
264.167 478.584 263.837 476.596 263.837 474.508 cv
263.837 456.592 li
263.837 454.912 264.152 453.209 264.785 451.482 cv
265.416 449.758 266.434 448.189 267.835 446.781 cv
269.237 445.375 271.051 444.217 273.277 443.309 cv
275.503 442.398 278.237 441.945 281.48 441.945 cv
284.503 441.945 287.114 442.377 289.313 443.24 cv
291.511 444.104 293.339 445.227 294.796 446.611 cv
296.252 447.998 297.324 449.564 298.012 451.313 cv
298.698 453.061 299.042 454.82 299.042 456.592 cv
299.042 475.324 li
cp
f
356.755 489.699 mo
356.755 461.973 li
356.425 461.973 li
352.221 470.828 li
346.779 481.184 li
340.101 481.184 li
334.494 470.488 li
330.372 461.904 li
330.042 461.973 li
330.042 489.699 li
320.643 489.699 li
320.643 442.285 li
329.63 442.285 li
337.71 457.816 li
343.316 469.262 li
343.646 469.262 li
349.17 457.748 li
357.085 442.285 li
366.154 442.285 li
366.154 489.699 li
356.755 489.699 li
cp
f
414.385 456.762 mo
414.385 454.412 413.698 452.615 412.324 451.371 cv
410.949 450.129 408.862 449.506 406.058 449.506 cv
398.226 449.506 li
398.226 464.152 li
406.141 464.152 li
408.944 464.152 411.019 463.486 412.365 462.152 cv
413.712 460.818 414.385 459.021 414.385 456.762 cv
cp
423.703 456.932 mo
423.703 458.975 423.344 460.883 422.63 462.654 cv
421.916 464.426 420.858 465.971 419.456 467.285 cv
418.055 468.604 416.282 469.637 414.139 470.385 cv
411.995 471.135 409.493 471.51 406.636 471.51 cv
398.226 471.51 li
398.226 489.699 li
388.827 489.699 li
388.827 442.285 li
406.141 442.285 li
408.834 442.285 411.253 442.582 413.396 443.172 cv
415.54 443.762 417.381 444.66 418.921 445.861 cv
420.459 447.066 421.641 448.586 422.466 450.426 cv
423.29 452.266 423.703 454.434 423.703 456.932 cv
cp
f
452.478 462.994 mo
449.511 472.531 li
461.218 472.531 li
458.332 463.063 li
458.221 462.654 458.044 461.973 457.796 461.02 cv
457.549 460.064 457.273 459.066 456.972 458.021 cv
456.669 456.979 456.38 455.99 456.106 455.059 cv
455.831 454.129 455.665 453.457 455.611 453.049 cv
455.199 453.049 li
452.478 462.994 li
cp
463.362 479.48 mo
447.448 479.48 li
447.338 479.889 447.119 480.57 446.789 481.523 cv
446.46 482.479 446.115 483.498 445.759 484.59 cv
445.4 485.68 445.071 486.701 444.771 487.654 cv
444.467 488.607 444.233 489.289 444.068 489.699 cv
434.257 489.699 li
450.829 442.285 li
459.898 442.285 li
476.553 489.699 li
466.576 489.699 li
463.362 479.48 li
cp
f
524.289 489.699 mo
510.769 469.33 li
504.75 459.588 li
504.502 459.656 li
504.502 489.699 li
495.021 489.699 li
495.021 442.285 li
503.677 442.285 li
516.375 461.633 li
523.136 472.26 li
523.465 472.191 li
523.465 442.285 li
532.865 442.285 li
532.865 489.699 li
524.289 489.699 li
cp
f
570.461 462.178 mo
571.065 460.635 571.697 459.111 572.356 457.613 cv
573.017 456.113 573.677 454.594 574.335 453.049 cv
579.365 442.285 li
589.342 442.285 li
574.83 470.352 li
574.83 489.699 li
565.596 489.699 li
565.596 470.352 li
551.084 442.217 li
561.309 442.217 li
562.134 444.08 562.97 445.92 563.823 447.734 cv
564.675 449.553 565.485 451.369 566.256 453.186 cv
566.859 454.639 567.479 456.139 568.11 457.682 cv
568.741 459.227 569.361 460.725 569.966 462.178 cv
570.461 462.178 li
cp
f
295.909 512.98 mo
294.629 513.879 li
294.4 514.074 293.989 513.996 293.806 513.762 cv
292.663 512.551 290.606 511.77 288.687 511.77 cv
285.441 511.77 283.384 513.605 283.384 516.105 cv
283.384 527.67 li
283.384 530.172 285.396 532.084 288.869 532.084 cv
290.789 532.084 292.663 531.266 293.806 530.209 cv
294.126 529.896 294.354 529.701 294.766 529.975 cv
296 530.873 li
296.229 531.029 296.274 531.225 296.091 531.422 cv
294.354 533.258 291.749 534.234 288.869 534.234 cv
283.887 534.234 280.459 531.773 280.459 527.748 cv
280.459 516.066 li
280.459 512.238 283.841 509.582 288.641 509.582 cv
291.429 509.582 294.035 510.246 296 512.277 cv
296.229 512.512 296.229 512.707 295.909 512.98 cv
cp
f
320.908 516.262 mo
320.908 513.801 318.897 511.809 315.378 511.809 cv
311.858 511.809 309.801 513.801 309.801 516.262 cv
309.801 527.475 li
309.801 530.014 311.584 532.084 315.332 532.084 cv
318.806 532.084 320.908 530.248 320.908 527.553 cv
320.908 516.262 li
cp
315.378 534.234 mo
310.213 534.234 306.876 531.656 306.876 527.553 cv
306.876 516.184 li
306.876 512.238 310.441 509.582 315.332 509.582 cv
320.223 509.582 323.834 512.082 323.834 516.184 cv
323.834 527.631 li
323.834 531.693 320.452 534.234 315.378 534.234 cv
cp
f
339.784 512.043 mo
339.51 512.043 339.373 512.16 339.373 512.355 cv
339.373 521.303 li
339.373 521.498 339.464 521.615 339.692 521.615 cv
346.412 521.615 li
346.777 521.615 347.052 521.498 347.189 521.42 cv
349.063 520.443 350.297 518.488 350.297 516.809 cv
350.297 514.621 349.246 512.043 344.629 512.043 cv
339.784 512.043 li
cp
348.926 523.217 mo
348.789 523.295 348.789 523.412 348.834 523.529 cv
348.926 523.646 350.891 527.318 354.228 533.336 cv
354.502 533.844 354.136 534 353.816 534 cv
352.034 534 li
351.303 534 351.12 533.805 350.937 533.373 cv
345.955 524.154 li
345.817 523.92 345.68 523.764 345.224 523.764 cv
339.738 523.764 li
339.464 523.764 339.373 523.881 339.373 524.076 cv
339.373 533.609 li
339.373 533.844 339.235 534 338.961 534 cv
336.95 534 li
336.676 534 336.493 533.883 336.493 533.648 cv
336.493 510.324 li
336.493 510.051 336.676 509.895 336.996 509.895 cv
345.132 509.895 li
350.571 509.895 353.268 512.551 353.268 516.535 cv
353.268 519.426 351.12 521.889 348.926 523.217 cv
cp
f
368.624 512.043 mo
368.349 512.043 368.212 512.121 368.212 512.316 cv
368.212 520.951 li
368.212 521.146 368.304 521.264 368.578 521.264 cv
374.018 521.264 li
377.217 521.264 379.183 519.426 379.183 516.652 cv
379.183 514.309 377.4 512.043 374.018 512.043 cv
368.624 512.043 li
cp
374.063 523.373 mo
368.624 523.373 li
368.349 523.373 368.258 523.49 368.258 523.725 cv
368.258 533.609 li
368.258 533.844 368.121 534 367.801 534 cv
365.835 534 li
365.561 534 365.333 533.883 365.333 533.648 cv
365.333 510.285 li
365.333 510.051 365.516 509.895 365.835 509.895 cv
374.018 509.895 li
379.045 509.895 382.062 512.785 382.062 516.691 cv
382.062 520.48 378.725 523.373 374.063 523.373 cv
cp
f
406.879 516.262 mo
406.879 513.801 404.867 511.809 401.349 511.809 cv
397.829 511.809 395.771 513.801 395.771 516.262 cv
395.771 527.475 li
395.771 530.014 397.554 532.084 401.303 532.084 cv
404.776 532.084 406.879 530.248 406.879 527.553 cv
406.879 516.262 li
cp
401.349 534.234 mo
396.183 534.234 392.846 531.656 392.846 527.553 cv
392.846 516.184 li
392.846 512.238 396.412 509.582 401.303 509.582 cv
406.193 509.582 409.804 512.082 409.804 516.184 cv
409.804 527.631 li
409.804 531.693 406.422 534.234 401.349 534.234 cv
cp
f
425.755 512.043 mo
425.479 512.043 425.343 512.16 425.343 512.355 cv
425.343 521.303 li
425.343 521.498 425.435 521.615 425.662 521.615 cv
432.382 521.615 li
432.748 521.615 433.022 521.498 433.159 521.42 cv
435.033 520.443 436.268 518.488 436.268 516.809 cv
436.268 514.621 435.216 512.043 430.6 512.043 cv
425.755 512.043 li
cp
434.896 523.217 mo
434.759 523.295 434.759 523.412 434.805 523.529 cv
434.896 523.646 436.861 527.318 440.198 533.336 cv
440.473 533.844 440.106 534 439.786 534 cv
438.004 534 li
437.272 534 437.09 533.805 436.907 533.373 cv
431.925 524.154 li
431.788 523.92 431.65 523.764 431.193 523.764 cv
425.709 523.764 li
425.435 523.764 425.343 523.881 425.343 524.076 cv
425.343 533.609 li
425.343 533.844 425.206 534 424.932 534 cv
422.92 534 li
422.646 534 422.463 533.883 422.463 533.648 cv
422.463 510.324 li
422.463 510.051 422.646 509.895 422.966 509.895 cv
431.103 509.895 li
436.542 509.895 439.238 512.551 439.238 516.535 cv
439.238 519.426 437.09 521.889 434.896 523.217 cv
cp
f
457.017 517.629 mo
454.41 525.834 li
454.365 526.068 454.41 526.107 454.594 526.107 cv
462.501 526.107 li
462.775 526.107 462.821 526.068 462.775 525.834 cv
460.17 517.668 li
458.707 512.629 li
458.661 512.473 458.524 512.473 458.479 512.629 cv
457.017 517.629 li
cp
465.747 534 mo
465.427 534 465.29 533.922 465.197 533.725 cv
463.461 528.373 li
463.415 528.256 463.37 528.217 463.232 528.217 cv
453.953 528.217 li
453.771 528.217 453.725 528.256 453.68 528.334 cv
453.405 529.428 452.308 532.631 451.988 533.725 cv
451.942 533.922 451.76 534 451.485 534 cv
449.611 534 li
449.246 534 449.063 533.922 449.154 533.529 cv
456.514 510.285 li
456.56 510.09 456.696 509.895 457.062 509.895 cv
460.124 509.895 li
460.444 509.895 460.581 509.971 460.673 510.246 cv
468.169 533.453 li
468.261 533.688 468.307 534 467.85 534 cv
465.747 534 li
cp
f
492.85 512.043 mo
486.313 512.043 li
486.084 512.043 485.947 512.082 485.947 512.316 cv
485.947 533.609 li
485.947 533.844 485.856 534 485.536 534 cv
483.479 534 li
483.205 534 483.022 533.883 483.022 533.648 cv
483.022 512.355 li
483.022 512.121 482.931 512.043 482.656 512.043 cv
476.257 512.043 li
475.983 512.043 475.846 512.004 475.846 511.691 cv
475.846 510.285 li
475.846 510.051 475.983 509.895 476.257 509.895 cv
492.85 509.895 li
493.124 509.895 493.261 510.051 493.261 510.246 cv
493.261 511.691 li
493.261 511.926 493.124 512.043 492.85 512.043 cv
cp
f
519.084 534 mo
504.274 534 li
504 534 503.771 533.844 503.771 533.609 cv
503.771 510.285 li
503.771 510.051 503.954 509.895 504.274 509.895 cv
518.718 509.895 li
518.992 509.895 519.175 510.051 519.175 510.285 cv
519.175 511.691 li
519.175 511.926 519.038 512.043 518.718 512.043 cv
507.062 512.043 li
506.834 512.043 506.696 512.082 506.696 512.316 cv
506.696 520.129 li
506.696 520.324 506.788 520.404 507.017 520.404 cv
516.936 520.404 li
517.255 520.404 517.393 520.521 517.393 520.795 cv
517.393 522.24 li
517.393 522.475 517.255 522.592 516.981 522.592 cv
507.062 522.592 li
506.834 522.592 506.696 522.67 506.696 522.904 cv
506.696 531.537 li
506.696 531.732 506.834 531.813 507.017 531.813 cv
519.084 531.813 li
519.358 531.813 519.541 531.928 519.541 532.164 cv
519.541 533.609 li
519.541 533.844 519.403 534 519.084 534 cv
cp
f
366.026 713.104 mo
365.565 714.734 364.591 716.004 363.103 716.909 cv
361.615 717.814 359.815 718.269 357.704 718.269 cv
356.243 718.269 354.97 718.077 353.888 717.698 cv
352.805 717.318 351.899 716.792 351.168 716.121 cv
350.438 715.45 349.896 714.662 349.544 713.757 cv
349.193 712.852 349.017 711.873 349.017 710.822 cv
349.017 701.767 li
349.017 700.85 349.193 699.955 349.544 699.084 cv
349.896 698.21 350.431 697.439 351.148 696.769 cv
351.864 696.098 352.765 695.562 353.848 695.159 cv
354.929 694.756 356.216 694.555 357.704 694.555 cv
359.977 694.555 361.824 695.047 363.245 696.031 cv
364.666 697.015 365.605 698.243 366.066 699.72 cv
361.642 700.928 li
361.561 700.592 361.425 700.269 361.236 699.955 cv
361.046 699.642 360.789 699.357 360.464 699.1 cv
360.14 698.843 359.747 698.637 359.287 698.479 cv
358.826 698.322 358.299 698.243 357.704 698.243 cv
357 698.243 356.398 698.345 355.898 698.546 cv
355.396 698.747 354.984 699.01 354.659 699.334 cv
354.334 699.659 354.091 700.021 353.928 700.425 cv
353.767 700.827 353.685 701.229 353.685 701.632 cv
353.685 710.922 li
353.685 711.414 353.767 711.885 353.928 712.331 cv
354.091 712.779 354.341 713.169 354.68 713.505 cv
355.018 713.84 355.437 714.104 355.938 714.294 cv
356.439 714.482 357.027 714.578 357.704 714.578 cv
358.705 714.578 359.557 714.344 360.262 713.874 cv
360.964 713.404 361.412 712.756 361.601 711.929 cv
366.026 713.104 li
cp
.767544 .661677 .442176 .299107 cmyk
f
387.824 701.706 mo
387.824 701.414 387.763 701.073 387.642 700.682 cv
387.52 700.289 387.31 699.913 387.012 699.555 cv
386.714 699.197 386.315 698.89 385.814 698.631 cv
385.314 698.373 384.671 698.243 383.886 698.243 cv
383.101 698.243 382.445 698.362 381.917 698.598 cv
381.39 698.833 380.971 699.124 380.66 699.472 cv
380.348 699.819 380.125 700.193 379.989 700.597 cv
379.854 701.001 379.787 701.382 379.787 701.739 cv
379.827 710.68 li
379.827 711.8 380.138 712.741 380.76 713.503 cv
381.383 714.265 382.438 714.646 383.927 714.646 cv
384.983 714.646 385.896 714.35 386.667 713.755 cv
387.438 713.162 387.824 712.349 387.824 711.318 cv
387.824 701.706 li
cp
392.533 710.989 mo
392.533 712.108 392.323 713.115 391.904 714.008 cv
391.484 714.902 390.889 715.669 390.118 716.305 cv
389.347 716.942 388.433 717.43 387.378 717.766 cv
386.322 718.1 385.158 718.269 383.886 718.269 cv
382.344 718.269 381.018 718.062 379.909 717.647 cv
378.798 717.233 377.899 716.675 377.209 715.971 cv
376.519 715.266 376.012 714.45 375.687 713.522 cv
375.362 712.595 375.199 711.615 375.199 710.587 cv
375.199 701.767 li
375.199 700.939 375.355 700.101 375.666 699.25 cv
375.977 698.401 376.478 697.63 377.168 696.937 cv
377.858 696.244 378.751 695.674 379.848 695.227 cv
380.943 694.778 382.29 694.555 383.886 694.555 cv
385.375 694.555 386.66 694.768 387.743 695.193 cv
388.826 695.618 389.725 696.17 390.442 696.853 cv
391.16 697.535 391.688 698.307 392.026 699.167 cv
392.364 700.028 392.533 700.895 392.533 701.767 cv
392.533 710.989 li
cp
f
420.948 718.066 mo
420.948 704.415 li
420.786 704.415 li
418.716 708.776 li
416.037 713.874 li
412.748 713.874 li
409.988 708.608 li
407.958 704.382 li
407.796 704.415 li
407.796 718.066 li
403.168 718.066 li
403.168 694.723 li
407.594 694.723 li
411.571 702.369 li
414.332 708.005 li
414.494 708.005 li
417.214 702.336 li
421.111 694.723 li
425.576 694.723 li
425.576 718.066 li
420.948 718.066 li
cp
f
449.323 701.85 mo
449.323 700.692 448.985 699.809 448.309 699.196 cv
447.631 698.585 446.604 698.277 445.223 698.277 cv
441.367 698.277 li
441.367 705.489 li
445.264 705.489 li
446.645 705.489 447.666 705.161 448.328 704.504 cv
448.991 703.848 449.323 702.962 449.323 701.85 cv
cp
453.91 701.934 mo
453.91 702.939 453.733 703.879 453.383 704.751 cv
453.031 705.624 452.51 706.384 451.819 707.031 cv
451.13 707.681 450.257 708.189 449.202 708.558 cv
448.146 708.927 446.914 709.111 445.507 709.111 cv
441.367 709.111 li
441.367 718.066 li
436.739 718.066 li
436.739 694.723 li
445.264 694.723 li
446.59 694.723 447.78 694.869 448.836 695.159 cv
449.892 695.449 450.798 695.892 451.556 696.483 cv
452.313 697.076 452.896 697.824 453.302 698.73 cv
453.707 699.637 453.91 700.704 453.91 701.934 cv
cp
f
468.078 704.919 mo
466.617 709.614 li
472.381 709.614 li
470.961 704.952 li
470.905 704.751 470.818 704.415 470.696 703.946 cv
470.575 703.476 470.438 702.984 470.291 702.47 cv
470.142 701.957 469.999 701.47 469.864 701.012 cv
469.729 700.554 469.647 700.224 469.621 700.021 cv
469.418 700.021 li
468.078 704.919 li
cp
473.437 713.036 mo
465.602 713.036 li
465.548 713.236 465.439 713.572 465.277 714.042 cv
465.115 714.513 464.945 715.014 464.77 715.552 cv
464.594 716.088 464.432 716.591 464.283 717.06 cv
464.134 717.529 464.019 717.865 463.938 718.066 cv
459.106 718.066 li
467.267 694.723 li
471.731 694.723 li
479.932 718.066 li
475.02 718.066 li
473.437 713.036 li
cp
f
503.435 718.066 mo
496.778 708.038 li
493.814 703.241 li
493.692 703.275 li
493.692 718.066 li
489.024 718.066 li
489.024 694.723 li
493.286 694.723 li
499.538 704.248 li
502.867 709.48 li
503.029 709.447 li
503.029 694.723 li
507.657 694.723 li
507.657 718.066 li
503.435 718.066 li
cp
f
526.168 704.517 mo
526.465 703.757 526.776 703.007 527.101 702.27 cv
527.427 701.53 527.751 700.782 528.075 700.021 cv
530.552 694.723 li
535.464 694.723 li
528.319 708.541 li
528.319 718.066 li
523.772 718.066 li
523.772 708.541 li
516.627 694.689 li
521.661 694.689 li
522.067 695.606 522.479 696.512 522.9 697.405 cv
523.318 698.301 523.718 699.194 524.098 700.089 cv
524.395 700.805 524.699 701.543 525.011 702.303 cv
525.321 703.063 525.627 703.801 525.924 704.517 cv
526.168 704.517 li
cp
f
356.624 729.53 mo
355.993 729.972 li
355.881 730.067 355.678 730.03 355.589 729.914 cv
355.026 729.318 354.013 728.934 353.067 728.934 cv
351.47 728.934 350.458 729.838 350.458 731.068 cv
350.458 736.762 li
350.458 737.994 351.447 738.936 353.157 738.936 cv
354.103 738.936 355.026 738.532 355.589 738.013 cv
355.746 737.858 355.858 737.762 356.061 737.896 cv
356.668 738.339 li
356.781 738.416 356.804 738.513 356.714 738.609 cv
355.858 739.514 354.576 739.994 353.157 739.994 cv
350.704 739.994 349.017 738.782 349.017 736.801 cv
349.017 731.049 li
349.017 729.164 350.683 727.856 353.045 727.856 cv
354.418 727.856 355.701 728.184 356.668 729.184 cv
356.781 729.299 356.781 729.396 356.624 729.53 cv
cp
f
368.932 731.146 mo
368.932 729.934 367.942 728.952 366.209 728.952 cv
364.477 728.952 363.463 729.934 363.463 731.146 cv
363.463 736.666 li
363.463 737.916 364.341 738.936 366.187 738.936 cv
367.897 738.936 368.932 738.031 368.932 736.704 cv
368.932 731.146 li
cp
366.209 739.994 mo
363.667 739.994 362.023 738.725 362.023 736.704 cv
362.023 731.106 li
362.023 729.164 363.779 727.856 366.187 727.856 cv
368.595 727.856 370.373 729.087 370.373 731.106 cv
370.373 736.743 li
370.373 738.743 368.708 739.994 366.209 739.994 cv
cp
f
378.225 729.068 mo
378.091 729.068 378.024 729.125 378.024 729.223 cv
378.024 733.627 li
378.024 733.723 378.068 733.781 378.181 733.781 cv
381.489 733.781 li
381.669 733.781 381.805 733.723 381.872 733.686 cv
382.794 733.204 383.402 732.241 383.402 731.414 cv
383.402 730.338 382.884 729.068 380.611 729.068 cv
378.225 729.068 li
cp
382.727 734.569 mo
382.659 734.608 382.659 734.666 382.682 734.724 cv
382.727 734.781 383.694 736.589 385.338 739.552 cv
385.472 739.802 385.292 739.879 385.135 739.879 cv
384.258 739.879 li
383.897 739.879 383.807 739.782 383.717 739.57 cv
381.264 735.031 li
381.196 734.916 381.128 734.839 380.904 734.839 cv
378.204 734.839 li
378.068 734.839 378.024 734.896 378.024 734.992 cv
378.024 739.687 li
378.024 739.802 377.956 739.879 377.821 739.879 cv
376.831 739.879 li
376.695 739.879 376.605 739.821 376.605 739.706 cv
376.605 728.222 li
376.605 728.087 376.695 728.01 376.854 728.01 cv
380.859 728.01 li
383.537 728.01 384.864 729.318 384.864 731.28 cv
384.864 732.703 383.807 733.915 382.727 734.569 cv
cp
f
392.425 729.068 mo
392.291 729.068 392.223 729.106 392.223 729.203 cv
392.223 733.454 li
392.223 733.55 392.268 733.607 392.403 733.607 cv
395.081 733.607 li
396.656 733.607 397.624 732.703 397.624 731.337 cv
397.624 730.184 396.746 729.068 395.081 729.068 cv
392.425 729.068 li
cp
395.103 734.646 mo
392.425 734.646 li
392.291 734.646 392.246 734.704 392.246 734.819 cv
392.246 739.687 li
392.246 739.802 392.178 739.879 392.02 739.879 cv
391.053 739.879 li
390.917 739.879 390.805 739.821 390.805 739.706 cv
390.805 728.202 li
390.805 728.087 390.895 728.01 391.053 728.01 cv
395.081 728.01 li
397.556 728.01 399.042 729.434 399.042 731.356 cv
399.042 733.223 397.399 734.646 395.103 734.646 cv
cp
f
411.26 731.146 mo
411.26 729.934 410.27 728.952 408.537 728.952 cv
406.805 728.952 405.791 729.934 405.791 731.146 cv
405.791 736.666 li
405.791 737.916 406.669 738.936 408.515 738.936 cv
410.226 738.936 411.26 738.031 411.26 736.704 cv
411.26 731.146 li
cp
408.537 739.994 mo
405.994 739.994 404.352 738.725 404.352 736.704 cv
404.352 731.106 li
404.352 729.164 406.106 727.856 408.515 727.856 cv
410.923 727.856 412.7 729.087 412.7 731.106 cv
412.7 736.743 li
412.7 738.743 411.035 739.994 408.537 739.994 cv
cp
f
420.554 729.068 mo
420.418 729.068 420.351 729.125 420.351 729.223 cv
420.351 733.627 li
420.351 733.723 420.396 733.781 420.508 733.781 cv
423.817 733.781 li
423.998 733.781 424.133 733.723 424.2 733.686 cv
425.122 733.204 425.729 732.241 425.729 731.414 cv
425.729 730.338 425.212 729.068 422.939 729.068 cv
420.554 729.068 li
cp
425.055 734.569 mo
424.987 734.608 424.987 734.666 425.01 734.724 cv
425.055 734.781 426.022 736.589 427.665 739.552 cv
427.801 739.802 427.62 739.879 427.462 739.879 cv
426.585 739.879 li
426.226 739.879 426.135 739.782 426.045 739.57 cv
423.592 735.031 li
423.524 734.916 423.457 734.839 423.231 734.839 cv
420.531 734.839 li
420.396 734.839 420.351 734.896 420.351 734.992 cv
420.351 739.687 li
420.351 739.802 420.284 739.879 420.148 739.879 cv
419.158 739.879 li
419.023 739.879 418.934 739.821 418.934 739.706 cv
418.934 728.222 li
418.934 728.087 419.023 728.01 419.181 728.01 cv
423.187 728.01 li
425.865 728.01 427.192 729.318 427.192 731.28 cv
427.192 732.703 426.135 733.915 425.055 734.569 cv
cp
f
435.946 731.818 mo
434.662 735.858 li
434.641 735.974 434.662 735.992 434.753 735.992 cv
438.646 735.992 li
438.781 735.992 438.804 735.974 438.781 735.858 cv
437.498 731.837 li
436.778 729.356 li
436.756 729.279 436.688 729.279 436.666 729.356 cv
435.946 731.818 li
cp
440.244 739.879 mo
440.086 739.879 440.02 739.84 439.974 739.743 cv
439.119 737.108 li
439.097 737.051 439.074 737.031 439.007 737.031 cv
434.438 737.031 li
434.348 737.031 434.325 737.051 434.303 737.089 cv
434.168 737.628 433.628 739.204 433.471 739.743 cv
433.448 739.84 433.358 739.879 433.223 739.879 cv
432.3 739.879 li
432.12 739.879 432.029 739.84 432.074 739.646 cv
435.698 728.202 li
435.722 728.106 435.788 728.01 435.968 728.01 cv
437.476 728.01 li
437.634 728.01 437.701 728.048 437.746 728.184 cv
441.437 739.609 li
441.482 739.726 441.505 739.879 441.279 739.879 cv
440.244 739.879 li
cp
f
453.589 729.068 mo
450.371 729.068 li
450.258 729.068 450.19 729.087 450.19 729.203 cv
450.19 739.687 li
450.19 739.802 450.146 739.879 449.988 739.879 cv
448.975 739.879 li
448.84 739.879 448.75 739.821 448.75 739.706 cv
448.75 729.223 li
448.75 729.106 448.705 729.068 448.569 729.068 cv
445.419 729.068 li
445.285 729.068 445.217 729.049 445.217 728.896 cv
445.217 728.202 li
445.217 728.087 445.285 728.01 445.419 728.01 cv
453.589 728.01 li
453.724 728.01 453.791 728.087 453.791 728.184 cv
453.791 728.896 li
453.791 729.011 453.724 729.068 453.589 729.068 cv
cp
f
466.506 739.879 mo
459.214 739.879 li
459.079 739.879 458.966 739.802 458.966 739.687 cv
458.966 728.202 li
458.966 728.087 459.057 728.01 459.214 728.01 cv
466.325 728.01 li
466.46 728.01 466.55 728.087 466.55 728.202 cv
466.55 728.896 li
466.55 729.011 466.482 729.068 466.325 729.068 cv
460.586 729.068 li
460.474 729.068 460.406 729.087 460.406 729.203 cv
460.406 733.05 li
460.406 733.146 460.451 733.186 460.563 733.186 cv
465.447 733.186 li
465.604 733.186 465.672 733.242 465.672 733.377 cv
465.672 734.089 li
465.672 734.204 465.604 734.262 465.47 734.262 cv
460.586 734.262 li
460.474 734.262 460.406 734.301 460.406 734.416 cv
460.406 738.666 li
460.406 738.763 460.474 738.802 460.563 738.802 cv
466.506 738.802 li
466.641 738.802 466.73 738.858 466.73 738.975 cv
466.73 739.687 li
466.73 739.802 466.663 739.879 466.506 739.879 cv
cp
f
430.658 132.927 mo
429.338 132.927 428.267 131.852 428.267 130.531 cv
428.267 129.211 429.338 128.136 430.658 128.136 cv
431.979 128.136 433.053 129.211 433.053 130.531 cv
433.053 131.852 431.979 132.927 430.658 132.927 cv
cp
449.261 182.336 mo
447.94 182.336 446.864 181.263 446.864 179.945 cv
446.864 178.622 447.94 177.546 449.261 177.546 cv
450.581 177.546 451.655 178.622 451.655 179.945 cv
451.655 181.263 450.581 182.336 449.261 182.336 cv
cp
412.056 186.011 mo
410.735 186.011 409.662 184.938 409.662 183.617 cv
409.662 182.296 410.735 181.221 412.056 181.221 cv
413.377 181.221 414.452 182.296 414.452 183.617 cv
414.452 184.938 413.377 186.011 412.056 186.011 cv
cp
436.857 186.011 mo
435.538 186.011 434.462 184.938 434.462 183.617 cv
434.462 182.296 435.538 181.221 436.857 181.221 cv
438.179 181.221 439.252 182.296 439.252 183.617 cv
439.252 184.938 438.179 186.011 436.857 186.011 cv
cp
461.66 186.011 mo
460.34 186.011 459.265 184.938 459.265 183.617 cv
459.265 182.296 460.34 181.221 461.66 181.221 cv
462.979 181.221 464.052 182.296 464.052 183.617 cv
464.052 184.938 462.979 186.011 461.66 186.011 cv
cp
424.458 257.25 mo
423.138 257.25 422.063 256.177 422.063 254.855 cv
422.063 119.323 li
422.063 118.694 422.317 118.074 422.765 117.629 cv
423.209 117.185 423.829 116.928 424.458 116.928 cv
425.441 116.928 li
426.763 116.928 427.838 118.002 427.838 119.323 cv
427.838 120.086 427.467 120.809 426.852 121.259 cv
426.852 254.855 li
426.852 256.177 425.778 257.25 424.458 257.25 cv
cp
418.258 307.839 mo
416.937 307.839 415.863 306.767 415.863 305.446 cv
415.863 168.929 li
415.863 167.608 416.937 166.534 418.258 166.534 cv
419.578 166.534 420.65 167.608 420.65 168.929 cv
420.65 305.446 li
420.65 306.767 419.578 307.839 418.258 307.839 cv
cp
443.061 307.839 mo
441.74 307.839 440.666 306.765 440.666 305.446 cv
440.666 168.925 li
440.666 167.604 441.74 166.529 443.061 166.529 cv
444.381 166.529 445.457 167.604 445.457 168.925 cv
445.457 305.446 li
445.457 306.765 444.381 307.839 443.061 307.839 cv
cp
467.855 307.839 mo
466.538 307.839 465.466 306.767 465.466 305.446 cv
465.466 168.929 li
465.466 167.608 466.538 166.534 467.855 166.534 cv
469.177 166.534 470.249 167.608 470.249 168.929 cv
470.249 305.446 li
470.249 306.767 469.177 307.839 467.855 307.839 cv
cp
455.457 311.514 mo
454.135 311.514 453.062 310.439 453.062 309.119 cv
453.062 172.6 li
453.062 171.278 454.135 170.204 455.457 170.204 cv
456.775 170.204 457.852 171.278 457.852 172.6 cv
457.852 309.119 li
457.852 310.439 456.775 311.514 455.457 311.514 cv
cp
461.66 322.531 mo
460.34 322.531 459.265 321.456 459.265 320.136 cv
459.265 200.041 li
459.265 198.718 460.34 197.642 461.66 197.642 cv
462.979 197.642 464.052 198.718 464.052 200.041 cv
464.052 320.136 li
464.052 321.456 462.979 322.531 461.66 322.531 cv
cp
418.188 324.262 mo
418.12 324.262 418.056 324.258 417.991 324.252 cv
417.351 324.2 416.773 323.901 416.358 323.414 cv
415.948 322.927 415.749 322.311 415.803 321.675 cv
415.803 321.671 415.803 321.671 415.803 321.669 cv
415.901 320.436 416.948 319.471 418.185 319.471 cv
418.253 319.471 418.313 319.476 418.385 319.478 cv
419.021 319.534 419.603 319.832 420.017 320.317 cv
420.427 320.805 420.629 321.425 420.574 322.063 cv
420.574 322.065 420.574 322.069 420.574 322.069 cv
420.521 322.671 420.249 323.225 419.805 323.633 cv
419.363 324.04 418.79 324.262 418.188 324.262 cv
cp
443.034 324.262 mo
443.034 324.245 li
443.034 324.262 li
443.002 324.262 442.975 324.262 442.948 324.262 cv
442.307 324.237 441.715 323.971 441.277 323.502 cv
440.845 323.033 440.615 322.425 440.634 321.786 cv
440.677 320.461 441.773 319.43 443.11 319.476 cv
444.432 319.519 445.47 320.632 445.42 321.948 cv
445.378 323.246 444.326 324.262 443.034 324.262 cv
cp
467.839 324.265 mo
467.821 324.265 467.805 324.262 467.784 324.262 cv
467.146 324.248 466.548 323.986 466.107 323.523 cv
465.666 323.061 465.428 322.454 465.445 321.814 cv
465.458 321.186 465.714 320.596 466.166 320.154 cv
466.629 319.705 467.236 319.467 467.895 319.476 cv
468.53 319.488 469.129 319.749 469.569 320.213 cv
470.011 320.675 470.248 321.282 470.235 321.921 cv
470.22 322.55 469.966 323.14 469.511 323.581 cv
469.064 324.023 468.47 324.265 467.839 324.265 cv
cp
447.741 335.157 mo
447.544 335.157 447.343 335.127 447.147 335.08 cv
445.868 334.756 445.094 333.453 445.415 332.172 cv
446.377 328.38 446.864 324.329 446.864 320.136 cv
446.864 196.365 li
446.864 195.044 447.94 193.974 449.261 193.974 cv
450.581 193.974 451.655 195.044 451.655 196.365 cv
451.655 320.136 li
451.655 324.725 451.117 329.172 450.061 333.348 cv
450.061 333.348 450.061 333.348 450.057 333.348 cv
449.787 334.414 448.835 335.157 447.741 335.157 cv
cp
398.995 335.271 mo
388.751 335.271 li
387.433 335.271 386.36 334.198 386.36 332.878 cv
386.36 331.557 387.433 330.482 388.751 330.482 cv
398.97 330.482 li
400.733 330.478 402.313 330.09 403.804 329.299 cv
404.732 328.805 405.594 328.168 406.443 327.358 cv
408.643 325.212 409.638 322.986 409.662 320.136 cv
409.662 200.041 li
409.662 198.718 410.735 197.646 412.056 197.646 cv
413.377 197.646 414.452 198.718 414.452 200.041 cv
414.452 320.136 li
414.466 322.15 414.063 324.098 413.256 325.925 cv
412.454 327.734 411.277 329.38 409.755 330.82 cv
408.606 331.92 407.363 332.828 406.061 333.523 cv
403.898 334.684 401.518 335.271 398.995 335.271 cv
cp
383.909 347.675 mo
382.588 347.675 381.515 346.601 381.515 345.28 cv
381.515 343.955 382.588 342.884 383.909 342.884 cv
385.229 342.884 386.304 343.955 386.304 345.28 cv
386.304 346.601 385.229 347.675 383.909 347.675 cv
cp
399.068 353.875 mo
399.068 353.858 li
399.068 353.875 li
351.089 353.875 li
350.46 353.875 349.845 353.619 349.396 353.172 cv
348.951 352.725 348.696 352.109 348.696 351.479 cv
348.696 345.28 li
348.696 344.647 348.951 344.032 349.396 343.587 cv
349.841 343.139 350.46 342.884 351.089 342.884 cv
367.486 342.884 li
368.807 342.884 369.879 343.955 369.879 345.28 cv
369.879 346.601 368.807 347.675 367.486 347.675 cv
353.485 347.675 li
353.485 349.083 li
398.97 349.083 li
407.109 349.061 413.886 346.298 419.681 340.641 cv
425.429 334.967 428.238 328.258 428.267 320.136 cv
428.267 250.627 li
428.267 249.306 429.338 248.233 430.658 248.233 cv
431.979 248.233 433.053 249.306 433.053 250.627 cv
433.053 320.136 li
433.065 324.76 432.221 329.145 430.542 333.162 cv
428.858 337.175 426.334 340.841 423.035 344.061 cv
419.77 347.281 416.074 349.752 412.056 351.393 cv
408.035 353.041 403.668 353.875 399.068 353.875 cv
cp
452.886 354.557 mo
452.886 354.542 li
452.886 354.557 li
452.445 354.557 452.01 354.438 451.634 354.205 cv
451.091 353.869 450.707 353.337 450.56 352.714 cv
450.414 352.096 450.516 351.453 450.852 350.909 cv
451.292 350.192 452.056 349.769 452.893 349.769 cv
453.335 349.769 453.77 349.892 454.15 350.125 cv
455.271 350.82 455.621 352.298 454.93 353.421 cv
454.487 354.134 453.726 354.557 452.886 354.557 cv
cp
351.089 361.474 mo
349.769 361.474 348.696 360.4 348.696 359.079 cv
348.696 357.679 li
348.696 357.05 348.951 356.429 349.396 355.988 cv
349.841 355.539 350.46 355.284 351.089 355.284 cv
366.047 355.284 li
366.07 355.284 366.088 355.284 366.113 355.284 cv
398.97 355.284 li
408.731 355.259 416.912 351.881 423.982 344.946 cv
431.008 337.991 434.437 329.876 434.462 320.136 cv
434.462 200.041 li
434.462 198.718 435.538 197.646 436.857 197.646 cv
438.179 197.646 439.252 198.718 439.252 200.041 cv
439.252 320.136 li
439.265 325.562 438.26 330.713 436.262 335.446 cv
434.266 340.173 431.266 344.518 427.346 348.363 cv
423.45 352.212 419.078 355.16 414.348 357.117 cv
409.611 359.079 404.471 360.075 399.063 360.075 cv
366.117 360.075 li
366.093 360.083 366.07 360.075 366.047 360.075 cv
353.272 360.075 li
352.882 360.925 352.027 361.474 351.089 361.474 cv
cp
351.089 378.618 mo
349.769 378.618 348.696 377.543 348.696 376.223 cv
348.696 374.907 349.769 373.828 351.089 373.828 cv
352.412 373.828 353.485 374.907 353.485 376.223 cv
353.485 377.543 352.412 378.618 351.089 378.618 cv
cp
367.463 378.676 mo
366.143 378.676 365.066 377.601 365.066 376.281 cv
365.066 374.96 366.143 373.886 367.463 373.886 cv
398.97 373.886 li
414.056 373.861 426.571 368.678 437.23 358.054 cv
447.859 347.388 453.038 334.984 453.062 320.136 cv
453.062 320.131 453.062 320.131 453.063 320.127 cv
453.067 318.811 454.138 317.74 455.457 317.74 cv
456.775 317.74 457.852 318.815 457.852 320.136 cv
457.864 328.076 456.411 335.6 453.534 342.498 cv
450.655 349.39 446.31 355.763 440.617 361.437 cv
434.953 367.12 428.566 371.458 421.628 374.335 cv
414.692 377.214 407.104 378.676 399.073 378.676 cv
367.463 378.676 li
cp
385.256 391.076 mo
351.089 391.076 li
350.46 391.076 349.845 390.817 349.396 390.371 cv
348.951 389.929 348.696 389.309 348.696 388.679 cv
348.696 382.48 li
348.696 381.852 348.951 381.23 349.396 380.784 cv
349.841 380.338 350.46 380.083 351.089 380.083 cv
398.97 380.083 li
415.384 380.063 429.096 374.523 440.898 363.154 cv
441.348 362.72 441.938 362.478 442.56 362.478 cv
443.219 362.478 443.83 362.741 444.286 363.211 cv
444.729 363.67 444.969 364.275 444.961 364.916 cv
444.944 365.558 444.688 366.154 444.227 366.598 cv
431.705 378.726 416.51 384.875 399.063 384.875 cv
353.485 384.875 li
353.485 386.284 li
385.256 386.284 li
386.577 386.284 387.652 387.358 387.652 388.679 cv
387.652 390 386.577 391.076 385.256 391.076 cv
cp
gsave
[175.24 -175.24 175.24 175.24 317.318 358.293 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~#RC\@#6kA:"pP88"U,&5"U,#3"9\i1"9\i0!s8W-!s8W-!s8T+!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!WiE)!WiE*!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-
!s8W-"9\i1"9\i1"9\i1"9\i1!sA`0"9\i1"9\i1"9\i1"9\l3"U,#3"9\i1"9\i1"9\i1"9\i2"U,&5
~>
<~z!<NB-"pYD@$OdLV&eYlo(Dn&0*$$(B+<_pS,palc-n-Sp.k</&/M8\00JG181,:XA1G^jE1c7-J2)R6
K2)[?N2`E]U3BB5a4Ztto5X@\'6psI57Rp$A8kM`M9hnJ[:f1(f;H$Oo<E<1'=BSg2>[:WA?XI2K@:E\
VAS#IdB4u!oCMRa(DJsK5EH6,BFEMbNG^4R\H@1-hIXcm!JqAW-KSG8<M2R=PNf]?bP*;,qQ'[l+R[]h
<SY)RKU8"EYV5L8kWiE,$Xfnt5Z*L^C[C*KR\[f;`]Y;1u_o9X;b08,Ud*gCmf%8X1h;7&JioB+^~>
<~f@o'<ioB.`kih9rlg4!*mdBQ4nF?&>oCMVHp%A"Np@e4Rp@n=Uq"XXZq>'j^qYL'bqYL*dqtp9fqtp9f
qtp9fqu$Bir;?Hhqtp9fqtp9fqtp9gr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?HhqYBs^q"OLUp@\+No^qbH
oCDJBnF5o7md9E-lK[WskND!ik2tdejlGI^io&bPhqm2FgtUT;g"G$0f%/F'f%/F'f%/F'f%/F'f%/F'
f%/F'f%8O*f@SX+f\"j/f\"j.f@SX+f%/F'f%/F'f%/F'f%/C%e^`4"e'ldpe'ldpe'lane'ldpe'ldp
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
np
301.375 687.301 mo
301.068 687.301 300.818 687.05 300.818 686.742 cv
300.818 686.436 301.068 686.186 301.375 686.186 cv
301.682 686.186 301.932 686.436 301.932 686.742 cv
301.932 687.05 301.682 687.301 301.375 687.301 cv
cp
305.705 698.801 mo
305.398 698.801 305.147 698.552 305.147 698.244 cv
305.147 697.938 305.398 697.687 305.705 697.687 cv
306.012 697.687 306.263 697.938 306.263 698.244 cv
306.263 698.552 306.012 698.801 305.705 698.801 cv
cp
297.045 699.657 mo
296.737 699.657 296.487 699.408 296.487 699.1 cv
296.487 698.792 296.737 698.541 297.045 698.541 cv
297.353 698.541 297.603 698.792 297.603 699.1 cv
297.603 699.408 297.353 699.657 297.045 699.657 cv
cp
302.818 699.657 mo
302.511 699.657 302.26 699.408 302.26 699.1 cv
302.26 698.792 302.511 698.541 302.818 698.541 cv
303.126 698.541 303.375 698.792 303.375 699.1 cv
303.375 699.408 303.126 699.657 302.818 699.657 cv
cp
308.592 699.657 mo
308.284 699.657 308.034 699.408 308.034 699.1 cv
308.034 698.792 308.284 698.541 308.592 698.541 cv
308.898 698.541 309.148 698.792 309.148 699.1 cv
309.148 699.408 308.898 699.657 308.592 699.657 cv
cp
299.932 716.24 mo
299.624 716.24 299.374 715.989 299.374 715.684 cv
299.374 684.134 li
299.374 683.987 299.434 683.843 299.538 683.739 cv
299.641 683.636 299.785 683.576 299.932 683.576 cv
300.161 683.576 li
300.468 683.576 300.719 683.826 300.719 684.134 cv
300.719 684.312 300.632 684.479 300.489 684.585 cv
300.489 715.684 li
300.489 715.989 300.239 716.24 299.932 716.24 cv
cp
298.488 728.016 mo
298.181 728.016 297.931 727.767 297.931 727.458 cv
297.931 695.681 li
297.931 695.373 298.181 695.124 298.488 695.124 cv
298.795 695.124 299.045 695.373 299.045 695.681 cv
299.045 727.458 li
299.045 727.767 298.795 728.016 298.488 728.016 cv
cp
304.262 728.016 mo
303.955 728.016 303.705 727.766 303.705 727.458 cv
303.705 695.68 li
303.705 695.373 303.955 695.122 304.262 695.122 cv
304.569 695.122 304.82 695.373 304.82 695.68 cv
304.82 727.458 li
304.82 727.766 304.569 728.016 304.262 728.016 cv
cp
310.034 728.016 mo
309.727 728.016 309.477 727.767 309.477 727.458 cv
309.477 695.681 li
309.477 695.373 309.727 695.124 310.034 695.124 cv
310.341 695.124 310.591 695.373 310.591 695.681 cv
310.591 727.458 li
310.591 727.767 310.341 728.016 310.034 728.016 cv
cp
307.147 728.871 mo
306.84 728.871 306.59 728.621 306.59 728.313 cv
306.59 696.535 li
306.59 696.228 306.84 695.978 307.147 695.978 cv
307.454 695.978 307.705 696.228 307.705 696.535 cv
307.705 728.313 li
307.705 728.621 307.454 728.871 307.147 728.871 cv
cp
308.592 731.436 mo
308.284 731.436 308.034 731.185 308.034 730.879 cv
308.034 702.924 li
308.034 702.615 308.284 702.364 308.592 702.364 cv
308.898 702.364 309.148 702.615 309.148 702.924 cv
309.148 730.879 li
309.148 731.185 308.898 731.436 308.592 731.436 cv
cp
298.472 731.839 mo
298.456 731.839 298.441 731.838 298.426 731.837 cv
298.277 731.824 298.143 731.755 298.046 731.642 cv
297.951 731.528 297.904 731.385 297.917 731.236 cv
297.917 731.235 li
297.94 730.948 298.184 730.724 298.471 730.724 cv
298.487 730.724 298.501 730.725 298.518 730.726 cv
298.666 730.737 298.801 730.808 298.898 730.921 cv
298.993 731.033 299.041 731.178 299.028 731.326 cv
299.028 731.327 li
299.015 731.469 298.952 731.597 298.849 731.692 cv
298.745 731.787 298.612 731.839 298.472 731.839 cv
cp
304.255 731.839 mo
304.255 731.835 li
304.255 731.839 li
304.248 731.839 304.242 731.839 304.236 731.839 cv
304.086 731.833 303.949 731.771 303.847 731.661 cv
303.746 731.552 303.692 731.41 303.697 731.263 cv
303.707 730.954 303.962 730.714 304.274 730.725 cv
304.581 730.734 304.823 730.993 304.811 731.3 cv
304.801 731.602 304.557 731.839 304.255 731.839 cv
cp
310.03 731.84 mo
310.025 731.84 310.021 731.839 310.017 731.839 cv
309.868 731.835 309.729 731.773 309.627 731.666 cv
309.523 731.56 309.468 731.418 309.472 731.269 cv
309.475 731.123 309.535 730.985 309.64 730.883 cv
309.748 730.777 309.89 730.723 310.042 730.725 cv
310.19 730.729 310.33 730.788 310.433 730.896 cv
310.535 731.004 310.59 731.145 310.587 731.293 cv
310.583 731.439 310.524 731.578 310.419 731.68 cv
310.315 731.783 310.176 731.84 310.03 731.84 cv
cp
305.351 734.374 mo
305.305 734.374 305.258 734.368 305.213 734.357 cv
304.916 734.281 304.735 733.979 304.81 733.68 cv
305.034 732.798 305.147 731.854 305.147 730.879 cv
305.147 702.067 li
305.147 701.76 305.398 701.511 305.705 701.511 cv
306.012 701.511 306.263 701.76 306.263 702.067 cv
306.263 730.879 li
306.263 731.946 306.137 732.982 305.891 733.953 cv
305.891 733.953 li
305.827 734.202 305.605 734.374 305.351 734.374 cv
cp
294.004 734.4 mo
291.62 734.4 li
291.313 734.4 291.063 734.151 291.063 733.844 cv
291.063 733.537 291.313 733.286 291.62 733.286 cv
293.999 733.286 li
294.409 733.285 294.776 733.195 295.124 733.012 cv
295.34 732.896 295.541 732.748 295.738 732.559 cv
296.25 732.06 296.481 731.542 296.487 730.879 cv
296.487 702.924 li
296.487 702.615 296.737 702.365 297.045 702.365 cv
297.353 702.365 297.603 702.615 297.603 702.924 cv
297.603 730.879 li
297.605 731.347 297.512 731.801 297.324 732.225 cv
297.138 732.647 296.863 733.029 296.509 733.365 cv
296.242 733.621 295.953 733.833 295.649 733.994 cv
295.146 734.265 294.592 734.4 294.004 734.4 cv
cp
290.493 737.288 mo
290.186 737.288 289.935 737.038 289.935 736.731 cv
289.935 736.424 290.186 736.173 290.493 736.173 cv
290.8 736.173 291.05 736.424 291.05 736.731 cv
291.05 737.038 290.8 737.288 290.493 737.288 cv
cp
294.021 738.731 mo
294.021 738.728 li
294.021 738.731 li
282.853 738.731 li
282.707 738.731 282.563 738.673 282.458 738.568 cv
282.355 738.464 282.295 738.321 282.295 738.175 cv
282.295 736.731 li
282.295 736.583 282.355 736.44 282.458 736.337 cv
282.563 736.233 282.707 736.173 282.853 736.173 cv
286.67 736.173 li
286.978 736.173 287.227 736.424 287.227 736.731 cv
287.227 737.038 286.978 737.288 286.67 737.288 cv
283.411 737.288 li
283.411 737.616 li
293.999 737.616 li
295.894 737.61 297.47 736.968 298.819 735.651 cv
300.158 734.331 300.812 732.77 300.818 730.879 cv
300.818 714.697 li
300.818 714.391 301.068 714.141 301.375 714.141 cv
301.682 714.141 301.932 714.391 301.932 714.697 cv
301.932 730.879 li
301.936 731.954 301.739 732.976 301.348 733.911 cv
300.956 734.845 300.368 735.698 299.6 736.447 cv
298.84 737.197 297.98 737.772 297.045 738.154 cv
296.109 738.538 295.092 738.731 294.021 738.731 cv
cp
306.549 738.891 mo
306.549 738.888 li
306.549 738.891 li
306.447 738.891 306.345 738.863 306.257 738.81 cv
306.131 738.73 306.042 738.606 306.008 738.462 cv
305.974 738.317 305.997 738.167 306.075 738.041 cv
306.178 737.874 306.356 737.776 306.55 737.776 cv
306.653 737.776 306.754 737.805 306.843 737.858 cv
307.104 738.021 307.186 738.365 307.025 738.626 cv
306.922 738.793 306.745 738.891 306.549 738.891 cv
cp
282.853 740.5 mo
282.545 740.5 282.295 740.251 282.295 739.942 cv
282.295 739.617 li
282.295 739.471 282.355 739.326 282.458 739.224 cv
282.563 739.119 282.707 739.06 282.853 739.06 cv
286.335 739.06 li
286.34 739.06 286.344 739.06 286.35 739.06 cv
293.999 739.06 li
296.271 739.054 298.175 738.269 299.821 736.653 cv
301.457 735.034 302.254 733.145 302.26 730.879 cv
302.26 702.924 li
302.26 702.615 302.511 702.365 302.818 702.365 cv
303.126 702.365 303.375 702.615 303.375 702.924 cv
303.375 730.879 li
303.378 732.142 303.145 733.341 302.68 734.441 cv
302.214 735.543 301.516 736.554 300.604 737.449 cv
299.697 738.345 298.679 739.03 297.578 739.486 cv
296.476 739.942 295.279 740.175 294.021 740.175 cv
286.352 740.175 li
286.345 740.177 286.34 740.175 286.335 740.175 cv
283.361 740.175 li
283.271 740.373 283.071 740.5 282.853 740.5 cv
cp
282.853 744.491 mo
282.545 744.491 282.295 744.241 282.295 743.934 cv
282.295 743.628 282.545 743.377 282.853 743.377 cv
283.161 743.377 283.411 743.628 283.411 743.934 cv
283.411 744.241 283.161 744.491 282.853 744.491 cv
cp
286.665 744.505 mo
286.357 744.505 286.106 744.255 286.106 743.947 cv
286.106 743.64 286.357 743.39 286.665 743.39 cv
293.999 743.39 li
297.51 743.384 300.424 742.178 302.905 739.704 cv
305.379 737.222 306.584 734.334 306.59 730.879 cv
306.59 730.877 306.59 730.877 306.59 730.876 cv
306.591 730.569 306.84 730.32 307.147 730.32 cv
307.454 730.32 307.705 730.571 307.705 730.879 cv
307.708 732.728 307.369 734.478 306.7 736.083 cv
306.03 737.688 305.018 739.171 303.693 740.492 cv
302.375 741.814 300.888 742.824 299.272 743.493 cv
297.658 744.164 295.892 744.505 294.022 744.505 cv
286.665 744.505 li
cp
290.807 747.392 mo
282.853 747.392 li
282.707 747.392 282.563 747.332 282.458 747.228 cv
282.355 747.124 282.295 746.979 282.295 746.833 cv
282.295 745.39 li
282.295 745.243 282.355 745.1 282.458 744.996 cv
282.563 744.892 282.707 744.833 282.853 744.833 cv
293.999 744.833 li
297.819 744.828 301.011 743.538 303.758 740.892 cv
303.863 740.79 304 740.734 304.145 740.734 cv
304.298 740.734 304.441 740.796 304.547 740.905 cv
304.65 741.012 304.706 741.153 304.704 741.303 cv
304.7 741.452 304.641 741.59 304.533 741.693 cv
301.618 744.518 298.082 745.947 294.021 745.947 cv
283.411 745.947 li
283.411 746.276 li
290.807 746.276 li
291.114 746.276 291.364 746.525 291.364 746.833 cv
291.364 747.141 291.114 747.392 290.807 747.392 cv
cp
.767544 .661677 .442176 .299107 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Rixwan) ()
%%Title: (digital-logo-2018-63.eps)
%%CreationDate: 9/16/2018 3:48 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTh$cE@(Bc5lHK0`IR;m?13/RC'FdqVqX"nAOq!R)b-SfZREAqMe%B=AWQ$+:TP9CRCUWi<KrAPGfJaO<BS+Q\R1benQ<'e
%:]BGCm<<K_q!u[Jn)"'$5JJ2)TCq6Si;\kaIe"k9nmB-/eZ3V;B8_PS0>Dl4lHQefoBu"h=5SCHs7WM&n%SVnjo/Uo]Xdt"`GajF
%?<mL,X096`q_+;JY?nm>?ZOHZ?^B$1^AR9He(])M?[R4"2[>'$F.W;RhoJsK!WGi>qtr*SMs/cr^AV)M6Mfhemsjlbs0)Bi,/.dQ
%LdD#EgSd:*01Usur\BL1oAunMn>fX*rUQFrhnAgYbI;Eha.K)ugV9h9h-[qnqM"p$>j:F<+NI:>+"n/.Ie2R2YJ/O+\u\s'f5L]]
%JhI&Ojd0=AndWpFnqmL0_[cV[q@r_pZ[i'[c(=qEIufq<aa0Mmq3qUo,AMjW>]PsVNcma6Fob-_b+$?8rS(DW^]*N;\$,QIo5WQM
%bKofFq[[Tr+,C@n82iDbMXN`H8s-m=4s11Kq+j4A[o:jSGkKBi^A=1g?iJ6L(LOh$B4(T1h7(/uo)Fh*CW"32^\[B!=7?.Vc'R>1
%gT-PJr>r^uqo,V>jRVX/VlsFro5>.ts7I.Wqr6FM?[XHbp$Gi<iH+pE]?4K1p\M("r9Gklb\.ggjk$]mr9`8=arC:^MYWD?^/E8T
%dTc=h<UqHSrA/b\3#sAn\#nU&rJ_68?bZF.[pQlFq8enpaZ-XNr"nh9r*kZD(,&tnLQ?H(\,RQLs)t%*eDG`PlA`Q8&3mr0`ASNm
%RpZ(3=+5Pg`VnQCGl?OXkFE%R2_mV3HM^qDfCadr-=)#n[64m$TE"Rg3T8.?kkMKVr3cN.s86fLqG.%[0AaD@md%W8o:*4]rT'lc
%?bH?X=-rs`lK,KnhoQ-%ipt9Br1EQ?:G4ro4MC[[],*,s&,ABCgq<FQlTb?>%co_.]t3FBb.7F!s8<E+q_@9W4;E:M3`,)$Rt#n[
%e_@::Ni1sWRkHDomDZ]@5Gn%eq<Gqg([j!SLY;E/IJM4[0/)COXkoE2UUl_ao<l4VT#<NgQhVR1[X\.P9>1,oT0rdrHLo*7ZZl@n
%Fn7*\QnEmeYHRurm8mYDo6PSi9BP+ro'X5?p$U'XhrnpkqsKr']):sM[pQ6RTag@\ejk2`Xe,.Qjs%/%q^s#kq!Y]`q\NUfp#U,L
%^%hGr^3oajrnm>9o0ONYpS14*9>:)n?1Ihgo4$%lq"JkN+%2/sHn!5,"4R*j[e]U2]_M3^5Da^^a*02nIJN/Tjs!"XDn^TD$gm'-
%hgP=fX7a0_^A]%:gZ@&eo\sYBdIM!e\b[nMb6"q%!'gA6B0Q]h]/TTgnJCY#I.=&700d5LoU##Q]_Urqs(mF\oPlJ!b'CPpij59T
%_e240h`q"[;7<7RYpB/;msD\@alJO)q7lq7Hb[2-HanF8Hb)H0j*eMbpZ9-G\,1W(H[g6hJ,aKfGlRDT4G8LbO<;V4I:s/i@6E=.
%gcmn`4?bkj*fiUIpm<,o@sO;f+5:<"hPG@YF8RFKZMc@^*U26sh*NYQrEnsjpr%Zh8+6EH@6<o7F54Il\:)[XoT1-i^Y4&%[FJGR
%br+$RK7'i"ngL^'^>,".1.j4%e5AmkYlsmH:\dj/rBB-#gH9N&/_=6Jc7-dRZJ9SK8rqhU\ps0gpQ<M`ocZKhJ#2meq30.nhWao5
%G%;Zkhu3%!HN!TNNSjPU^\aULmB)Fuf,skL3(=a!j<<+Gk[TR`EBbMae*S<fP]+`^]C!):[s,=Uo!4nUNk6^#ORMI?]Ba\$mdBNB
%"/E,LnA#<:LYTiA07Efun]%9rqipH'gC[3$Z&Zl&e$8qX;=+7AUHeEAH&R)q_mf3.]=dObMnJf6@h8NO:[M"#n?1TUdDVbt[?[%^
%C9`J9e>N-k0CZ^4e_;S1iZ*):VrR<"a*X\p*N/H(CqN1XBfjne],lOf,k\KE&+X*$R-)/Rqj%2Pcdbp[nUDq\oI(^aR<)Nn?B\N:
%/+`:;B',<$d9)RUegg97a:,eHRJ\?%3m.BG1=M`*WEXX\&,#1nT<puBA!/cSjkUDlbP1S9TDB`"54to4SfXKkT,eG)r4i*;qkq'(
%gSaSkTA#KVS0q/[:RU5iE$RQ%AfB%=U79nI'g8+eZ%I/f.!keto_G`]I/'N[XtG2_O5"r=mHF.TgJRX**qct!h:t%N<rA(kl)Crk
%Abl2m5276#\OTeqmU[<ob%0oqWU!iPl()@RLV#okipl_.VZ,uM&2hgPX!iWPMBUi2gLJ=*(7k=F$KH$ZMX'Cm]Ll$H=VOIB[5+Z6
%EIU(jO2k0Y63o<AOFqr.:dYUrSFtWU([f1nXE75nDF0:ZSDGZ$4P&.oO!EN$]6GD>ia[A!OX':+MCGBl8uaXo0S"leTa-tc:X=d(
%BXso0BQj/KJ,],r!%93pC5;GkI_AN3kL4B7+7Xd"S:9@:]LOEn9BGgST*EV$Nn`ShhRL4>^@AutT&kBE^@+.tDnPTf^@<F?^O5@h
%hKkHrN]5kWc/8*Zj8J"_j?[(>JfW7!]H+<5aOf++pASPS+8t/!VTP[$4LdeFM,ZL/A;ua`rm&^hW7jaA_PWcSWG[Z:N-Llq3[aQ5
%r-pl\4BcglG!#,pNbseKO7-!_c]3FJJ,%@M+*'o5f<PqB`5`ot)1?G8\S>T=4DYISTVViC9U<>jrN^+O8B^\aaj>X>#Og^uheoL/
%I&>.p`?HV7>jUG=_"#VBXC(sXL]4ijj496q*MS>.^>=qEraW)qYfMQtO=&,GaO!X:PVK6M)-)`<480`o\"\U2.@Np?9TgqO*e+5<
%&C#o!giecf,#df&PhN65[D=:>bE5I^*)M!LME5f&&,gS5YmcY<aLaYX:<3>1O-A92pZAtG,'5**bWY-H3*nYab%#+'"L0qDr'_OG
%?h'K8E^<g:*#H.#oRmM,k<HJO]5R=ZTT'Kl:UMH;'h-@`S03-Z2Z/ai*'#,oSr_GYXr((LRJ,2.9rn)3?_=8i]>G1kWK7lAaL=q2
%/rcm)d".D-TstiCAFOm!;24dClV0$Hm.^4k40uO3b6:2hRjbF1cT$7k.9>hL`5(PQrK(S,&&*0#q[Gd=G#po@1V9\5QC,[JF6VoQ
%'(uRJ,a,'cEn]V3P^]h-E36a-'aen]s*)M=dt\#.J+r*MMq>/H\GXoG(nV'I]N9P&/ARn![C1(?]pIgcX)!h(5.IUVME6:\;FOmH
%_.&NQ5LE6jRu+0MY./jgi')s0Iu$S9if:mc]djV&K#"b<ikR1ap/)S[(q)3-`*I?2p5[/[,E5pT:ZC5fM(;(.Vk]1A0uO7+'.kW8
%*Z$uLHZEoaneJ`a%F)h?'-g:(\NB(Rph'#o@H0Mu*B^"BBF^umRX#SgPt0l^m25Ha5BhF$p(P$$H9Bi"p?L7MI%65dr^2E2I!30[
%qp$9Cb5%,?c]\-%8,Md!4auVPqB'lOO!!8*I*<`sIT3q?5Q9<qLK\M;I%YhVBtp]LH(_>TkpJ?pfH4e-8)!0d51)OlTeJX'c;;q0
%I%]^p=6LOP13B:"MAL9-qfJSTas6S=CE,=_SQb2OoSsb'Wd@/25kh(RI9Psd5Z7p0nRQMqFA\KqW&!;\>p"o`dQr.snX`6,aQ]S<
%Atk#X*OW6goTUHR%fIV8R]>o0]BhhE1Hj#nRJk/g_Y#'5.W3;uR%<QXk=9f@:ch:1on,d3kbG=KHL/E00n/j?4ap1bhtQp0*^BL^
%o_=:Cr;WP4hk<p87&)kBT;\U7AUr[-XV.M=E_C`_nWcXnU/@1;L:\PH[154B^`:43:L^^7#3EuV/1::)$dGY7q-=oXFc'q!DHc/i
%HaSas(""S,;,k0_Shph'dV$.&kne$#FODqEB114)7Tl2"s/b1*eha4Kp82P!)Fs1nPLfPkp5'kNXu)6!M3$+Vhl!+/+[,gbJ,KJ0
%hlZSNT];(rr`f'jj!FglnAjQ3HSQdLFAnsBK9PG8>"M5GeTs]MY9M+):X6>8]#BffDMmSE<Rl2M*Ll.9Ss^ubZ(=!(c+Vb*:XabZ
%)?LZgLA3p<Y"uEscrHdJK+``&J4pfe>\MQ\kW*=e7aGp*#,M>q"Dsja$GEmfjP7!'eK\"73)itYQ=:)n;=ooa+mKup.'>:PcMKPC
%"_O@YoY)BrgQF8lT5/^Q]B?PJ6YHG\g:H,>LaA!E&+;O8S)M&-r'5)A&+OW-j$t3e@h.bnUY=PUO$0;ZO)Fh:WQ,lEIX6<b\s(+;
%4dDq`1n#c=g1.D+f`RFM>p`BsL^XDNgts9f/,^T?'puU"k%`8PY0:&mB8);pSJXc9=)#+#\LQa@4A2M2WaMg[4]-!/>-TJ<;1&<T
%M-<R&:=-fe4##U/B0YA);=K.S%fekF7KEc\@0d3.:aj1$-SOB`!$hQ-:oT^8;_2sM"=F>LRli"0'"nc4:rUg"i,/sD=3JZuVFLS>
%K-Rgr7]&%?V25r3pcR3f;p3'0Y%laflLUZ_pXr=nAF;t@Nk?CsFBnhPl]<0?#2QJDnFV:lnTQ#bZ?eW\oPsmc#?(UEF*oC/p$@b]
%5J$63U`TQ7;?!Lkrhr]nW)5`aO+5Y-J(,lre0ogr.%dZ_'.i1rr\+'HrU>:^g7uXB!rrS6k!?dK/M[YVBrr*K,oicUpn#75#P@P#
%qEkIZ`Gk'>_Ta78D-l3oln*"_!@$ZhnkBQ>T:0-eS"J0*NtUb)*]GO.Fung_hu'!bCqt]Qp_^rcn&?$Z&)[a<n-!IC'24eHMLV.+
%,kp2?phI3*Er<HIrJoQp7Y]3<ITP[o=dEbgr"TVE.+gfsR"Aaj(mkE@q[!HjO"CFt)3&*&^s8U?7KW$034&Z`O4VFegR^<fWdW?;
%I*>($r&X#EG5C4)c24^][uS.h@"#i[DlqOMM5\U#A7A@08>qrD.n%]a@UOao%1>T(8_T]"=K5YL9hU1*V-8pb#W^'O%7lMB`t@5#
%QhMr6:XYk%T"_Cc>H;c*Zm<5hGFZ>%aR=Va?1eFe_5D]'5?pXSra$$_@d-!n$IY)@Sj`;U\.<CU<AkG$IERhNqKA6)4XK\HctT*C
%38m`TQ6KRHqt]g'c`uQ/-3ETe$'6#%^U(.o@^popGo`@%cRY$IeJmo+7fOgultQg07e<PshH+BS#6#>gV$R11Y2.5\=>')R!%qW/
%*:C3MO\VgPnTu$45P]I<.%FI`K07X^gMG!Wa<Ca,#@45tQ6JFF'nSq@2hNQB:3W^@EIsN)YWr67e\(Ue:3l<YU0io3Ha;`#K,$Z(
%(!V#6H2VnL^LH]5d]&_nM[j52*=2gum\7@0E>@S`_GM:n?WjO]aS"u_$?-K=oE)K5mU-Yd&5M/Fd8jf-M.%fmhh-<b+lfiKW!q\F
%U&+.W7Vh,L#_)11ro/hHP[9je02=qP9UnPKc8&=2!"'.8iDKBtiH79_Ts)/S2<l@j&j/-U^d%plo)FdU4R57a-tO)3I.@Uu\O.Qb
%^uGo/S3Xoi("3K'2($,uI_iHVW,&TEm6.iDJsC58deAAdl[7Q4!\[9@$c*qn$IU9>Cu+-,[/.1:?Q_-&(-@Uf5rKK8j#I*_K6^U"
%6.s`0#06=g1=O>e=?js7'a1LFq6E[,(FFq+R1rCi"=*mBaHUUTJeq!aUi7!r["HKP8(JdFQ%8b1b1QHj+O=e4):EdQ8Eg"p'RLRK
%f20t"57n_FH">:]mZ2Sd"7PYg86;2iOnN'?#49$K*4\E\F!d/l.bM9-$OsesDc4Z!1EJbdT5**2Hpj9cPSul$3CFGoN5)18e6YmV
%^2a)fXd"W#,DNS_j!X0AbjQVn"f^Gb9CjNjXE^B2*Y37h$;4)ciq&CRUqtAse?7+[`(TLdq9(Q1iD]CB4YFTu80,F"mjIA7)*c+&
%<L@=k-sUj3j(?f*0<O-m>14e[Hm=MIrY"LUN9&+d^>/"'rr-9ohs^2m;c`kq^Zt:f;uZb\7J\[s%pj^)q1nui>e]ulBDi/Hr(>i9
%jY`j[Y'9]BPM#?iYP'U*.m/$+ig.pjr:\sU%q!$RU"#!Es*FLO7^;sjmd8c4^^k$1iH&T$q#'R!bPrmWPO)GEs,*mKru#JIDtot#
%gjf$gp@=jerC\.B0oPWA=Aor&Y@4qQR7ZJ5Oo['t+R9bE:T/krlClDY^X0^?D_d#cF/2tm75Vh(-gHVQkDZ_9?-9[VW1"?/=XHWh
%QdXpu"F1#Rg@pseV;)2NQ'[h"YEp3U`SrI>R6im:Vjf5Pnrh%Q.'"hLH4r]A??3UhjVe$0EHB4dH:d\2NSQP,?L0TsMAI8E%/Vcr
%-+4c?k/#>Yq'It<RoSZ,\R(Qe*2:eXeD#QtPs-flSg5?0c4d0jUNVbQhaOrkg2=.g?a;d8k#e]V^2I]s`74bUWm#cD=Y@8A!-rpJ
%np\HSrK>&m'(b9A>GNGmfZsm`ics%"l`h5D'K!/s2nmk4*(IYq,2ZG8Kq27Ab#^7+7-K9t,^i9t4_N1"-/D\e6<9\'Q95adgs<i3
%-in6Koc):XiKE:sb,Qci\IT+.^aMaY'BRbGI$i:I;)/L*E80sJnVZFPL.9"7+9(43-A9$4H!Yr#FMm>e<u$]J^U&Bu>]/V7rO\nF
%,<o]u<>:hBZcW#+aIo\=^7QrfZDboWUuNqkP>?#Xam]]/qC\mZL$O,OZLVUt-gmN2A@dXW'i;6gH>%)AafGLd*L5e6*V*#o#!gN*
%_<#a[1uN>=i@0\qI6"hodD#2:AMe#3MA1%jH+GW+UVJV+^uP3-;$Wbc-XU'$c,c`^a]h;\LN58_rM-05GrFu5g2D)!5Np_f$io6#
%:7To`W=1T$mPo:meh.hMG`Kl>E6R2tP2tcD2I2;Q/nOkJWtuHE`TCi8WJoq9dEMHLOiPM3=*)1r\@AHebb&HiFS0V=nPd4BOY>4I
%BEB&`YKtXu_b<`/)9q`d73J22-k9+q7D@t"fE[X<(M'hQAm)=M3c]dWcd$TG]SU)9?<0ST-Hf6<Y%IetcYmSWo,F;B>s7(koKW47
%r9rPA*c&l)INqM+f<8M.qs"R9*nh7treA14+Y3BegTUYMo=)Kn,%Mrsk>c/F"nM-^gBSK:)(h[+co?eo*gDXnoJUtjVn1p!nqb=3
%Mik2*\VlGHA3n1Fau5u\'Ln]'"gN&X-H]dKg9,Tr`U_Tf"`d=Hjm*inU3IlX15,9^RB$V3>[#PCVdNU74jTs61#%Ns$bWS*+]OY]
%JuknASe=1DgZ#sdb(/&t8(W*W&i$Kb3n'q"L,]4r;g2ooEI%7qT'6@I=66i?#r9[#(!Z@H//8NsH7as,bi8?+?40l&jSRS*HOa2R
%C0b]G.[)DmZ]ciBCTTNjWS"eUj'(<cTsJuMm+>qC\tds$ms4VJok;rUibB%%FEH*HMt*8@m@_mZ<_UEp@+ffR[53UkIRNBX"J`'.
%I(^i$*kdq=`S?a_#`2>[@ms`Fo$?<k>Um`1QMEmK-WrZQb=?NRHAF<mJ)S8P"^3L6[`8_8ZE2,Q<_SqI6^Fdr.&_-0Er\jf4QR+X
%+q)ADCS<:]6VJg@ontUTCQ-n2ZKR5ZI0C9u.pZ3t;,*A_bG`N=FtCh8m[$?IJ.u[_,@s)8Ufj;S+q#^V5J17g@Wfc?gG98<l^.0i
%/]+$oU+FnKLYTf5ZP8I[2-_33jMZ%l@2)-J#/#?\rGoX=f&LM0;32m.?<gkSZdW//?b;/#2Z%35a18@R\\QLsHWn\lY%L7+%sL25
%_WCLW:S@Xflqgi#@C_3Y@.SS7MgR>Vf(&f"U!))NO4Z1cTkg*UjXDl8-?cg+M632Yc77u,lGs-P4Zgudm07S#bN_V,n04W9?-`Xs
%T&8+8ju5Ic\pD*X24=oNYON9"iuhj0^jsEA'()[%'!;I?lmgmabh!tP5CshAmP'HL09]KPOaJe*l@B7O"%:-L<3iIdK$c6[oM*7l
%PA*l)R4t<Z'j'E0kSo'X!Ro.pa`O87:W_2m'8S0GY660e$`I*'%0:W%21N(+`2;f/.u7m%\J,2A,>H0tTIOFN@Z3/s;FN1u-&FCQ
%o/q/Q`Pr,7N/Q3$2hL0\)"rRLLD[!`U8Q/.4LtrUePL.iQ(5BSdP9H$ieWOir)=J2]ngHZ2jX4ER*-ekdh$Fnf@chS8l(_?QoM$U
%<NWKfj<NQXN0Qt(k92@5HsL*)6ebpG4QK_'mcAD`]-fi(N#pWU@CdQS2NG$o[2]DGT&Dpk9e8`3pE9G]^-g(!gOh'AXc!i8MRjnG
%B9`>:<UN^(jFegG<]#)7Z7Lr%n)/N!5%!%&P]4\J>cP>G[)=XUjl%^H>Z2q7%3J!;UHiomk$Z;5$+>RchEhZU?W1@aZnnU^hFC2s
%ZLoLjD3]CR?.:-ClFaa^E'D)(m.s<*b7O\T?P>p(;5.4mps?]>_73VFD6`1587XE5Efr9Pip>,f0d^*XQ`W'3+TWZt?.C3DC:]7r
%mIu@@.VC0\e_-1WY<'Yop1@t/&[%aKHOhlOpl<:$V??bm/=![Q5<$B-_!B9OrV[ik8&DKP_,O>UQs@mNf.T6JRKC+X9-8O29ep$_
%0$fQP4k73:$#J>mD9Z[Aj5/2Vo6l\-pOe''n3deLT7U9DIrOL3[KQo2,T2O^gBq'l3-"!(Yq9(eZ;Q]#gJSi`jVcg)WI#UFT4;*h
%D8>*$fG9]#YNN0m^mKuBOAftRq@lQL@pAO!2o$'PfG4TE?A5gSb\@>cBFFZ<%"^0#>?$UAa.,M$e?!,/cHm>m'mXqIL:1]P/[P\X
%RWDh[*hlb6K2F"UD1sCe@@SQHOL6]Eg`p%PGjs?$VHluGS7>dMbpE%e@TtUo7RS*>6<fgk?n49,[U_^j"7OP;>G;mD+@hK.aj61h
%RG?e*:_X5G7LO!'+">b!;(^2_o"j$?W$V-uo,/Uu)DnhU$u*i[JH:-*BMgXI(1of>0+_0_a0Xjl2omSAj&nZ#b\?50X<;"S9Vjq$
%3mkqe_P_WZJ8a4D3"%8(d;,?4XO*^Pku0PL9,^N7%qj"LAHeF4p3>/pM=u=ZP@</&eXYW%;sKJn%#nT3Nj_baLeJeR;`kH2>(g2F
%N<8+;M"u<L/i^h:QINcJZQB]Wc)[Dp=nA4c1Og2/kka8`l<MQ3I#_hkWJ.%=2j5'r*iBX/<Lgu^cJ^><>bDtCAqs];p#CWe]X4IM
%Kj#L"S8)>J%qj/!R]ZLrB0THnp]%4+edi$3L]WC'MTQ!SY>8VqlAQM(CkjS:1:WufJrV!fW_ts\%3Hld`W4FHOQ;K>0*WfL/'0!4
%>ed+hX=uGi@9ErUQ&;N/R;*;*Kel^CNnemg;d`/uR/:a.6L;ID6dWHA5?oms?=9T8+N6H'.dg6$5#Fq)/dDh'`/%pZ"SR@Og_\7S
%D`?Q]YR(*sGPXE5d1-Vs@_iU#b+`9:/BUn]JueubVDr%l,R3mR/R_6;%3f)@lJ=407Utc.-%=A^<B"p(XQ&RT/fDFa]W+Wk<56-"
%E'9V5p?Yq36pk\N,@E=Z3q?8h&AAYirQGA<@>]RIGTm]2DCK^?oILY(/%euI37UrY6-]b)*44CMF\"V!cU<%6OJZLH24@aQ<JU0>
%#JqDlUM<OLb6PnBXpq/K'8"S^]Y0^F`%&2!fK:I9eLk6oc_R49)DVq'=]n#n)eAlmcY5s8\9_U][ZqYn\KR=&bk*e!fjsgmk(K;O
%iQ4Bs@WJ_:4.%iDF\WIqHn@A(r#emX=fsn$KRm0^^EQGbdY!<j1D>GG?Y/nf>D=ilV7??*;M;@Fku2kf0OX-.^_:Eb6H1lTR)qci
%'B876"lsqq"9D!1JG2_\hVsZqDY-mOSYgu$oNYfe&kpf[P(fW>`GG,,CM!r!dlBRmF<OH!1XCFl@_?IrH+jh1p(lsd(a<3W^LsDP
%AL/$XcN?cqB,Dk`9j(A,dP+")#,VK.kCl9YkrEU:(_f\EcPs`@c19F=cR8"51P]Y\H1q),ggr@(A*"142;oe)I,:*Xo7pO;9+>d0
%9o30KS3qsQk_3/UlO8e/j3@1q;fYVXD@PbRbg*A`of\_]..=7YgUg'(,36Y830SM?aJ.J,b3catS4d,3Cn9:+RM*6n3LbiN?!qTS
%^>S4.\6[MckB,]u2K+'<FT%I(5tnMEJd+t;6>Y)*3S$uPNqdg<5d;.J#Sk5&QZijfR8Ioq6pjj-SQSYrb+S-U7Z8bpN*)-S&fm]e
%0o\9+`;Hm9fuV\Ta[5h.:cW)PBpr35"U]RI.P?pU.Vfj(.]4<onKJ*PZ#i-UeE?7"K#<<s>rf=sHkQ`jREubejG4/(^h!M&&;3__
%@ST](Vf^`5MK\9(-!+GHEbrm3M<.$F`Li]4;&:tJmA_dakoZ17\(^W[beBZ3l1`h!T-S'/F;'GJ3GFK:Z@6];=sM40+Q50+ej56C
%6mo/.er4#.<6n*&YNW3[P#V-@2T=>SRA[2tE>@c<lR=ilY#dtd8Oq'`ZqF<O7bJF7Z^*aWNJ6gLp:8JPl,3>_#dYHEcdu6-A1:tn
%)=4o\H<PS$c<9Mac4e^.Y9gH3Sho&)O;Ta>S\`rjE6g3&Jo`\oCH!>Cp3$>05?^5i)GS^N^N)]>f\OmlQuk8$_h8VmP8al%,/-F7
%DCE0*!/bc?6P8NikjmehcA84,Tee7`%OOO'Xi>O-6fD8kS$Ru;?'b$J?E!lf3MA'q4t'n('tMHN>;BEN7_Nh/&P?gV[l58OpZG<8
%o/HN;8648;ak6u+@eUfZ'uDYo^*WbV;e]<..)Se/a/re6)Ll"_:!(Ktgr/>6Y0Ph3>ZX'KU$MDQ_tdiLZg29&E-D-a"mU.`$k?b+
%aBu]r&i]E[EqUJc<R1fsm=="K,r8`NW9`"GFo]sJX0X7[X%poKiaG]Bfi\A4I]hF*>r#pgQ><$#k9J3rY+PAW9U/,l@-3kgc(O*i
%c@EDMUCg`Ge`_gGU%ZK:KUAZiqS"ha-NHs\'>>ZcKfM!.r*rRbWqM=_C@T.bYo"]TI:rfl-\rukK8MNkUHjKT?m`ag_n^f!X"PQ$
%l&'Q`Ou&haNoZ$1isIY$4gg9<R3cGV)K/a7R#c<A',$m1$jQCoOeV0++KLNA_.Xb-KFoOpW&p+#--GckR*8X%nNe+WMkpK?`V)ek
%!+oK'Y"O<)76Fl2HThQJWQq;R`RO/[N3*2RE]_b]2tpQ<2FfdCWJh"eLM8f(kRl2UgGL_(Oj`m+$SrKbGLlGFAd(BFYZ+-cH8%I*
%*b/3?$r4qs4!&d+4\UD=`"9;gRYJ[n]"n_,0StdUU]@3mTe)q3QbB^SZ)cTX;k+7C]K1t^[Vf0+gM4@VhJ>.n@<QhmX?WF*)2huF
%Nj`)R;[g#54ms@!.d.NZ+,tl(D-t:$@D*lUM]bdGJcrJ3%mLY4.FX^E)(p7G->TAP"*7@M*:D:k\T(,%]#1dUOZhp\>n,P-m,ZN/
%E1AC3A"9XAFsVmCe/'=h<6a8KOh%j#a<b`G/QJ\HO@MeQ;<1\QA7e'Zg<IDkLcF\u<ki#;MdEb4p8BU38u%rq)R[LEJuE6g&C<KX
%]3>KY`;>6=TT;/#gAk0HhraD`$IL58?BkWlaBaEqfLh]L=l"dFdi(h:`POS\"0;#m<A6#[0[+f1HRH4G:oCh$))o$k0s_k0UU`hn
%K=dpU[Z!GdRFVCY]&.>68:%3C#gQj"D7DbOps538"t6^'GU/%4?=/P#!Q%l'(t(9crG!4d:FmXb%:!Ak6f*'?Ea9-DVM)G(VBkOp
%_^-q6\-eS)1IS$8A?`4O&j(6mhJ>.n@<QhmXBVi(L,$#TQiLC>?=/PE``)u]@6P3aMSaI."[&$b*g7G",:HT,CFF6`Q;_Ep@TT+u
%R^cLZD0CZ@0B0/#W\1PTrUs:0q$==5lY#&1K7'CjYWdtP8W`*#ZPX'q@j^1(p^B>9Qd&9A`tV39E"LO'g<#e>./`@G9)PE,l4h-H
%@a<Fa"&,MEF\VaM$H-l->HN\ONh/DrH3K*)G9YlDK28'thS^9I[)*Qs(tD"[/T_,0@o$r59J%E<K&F>#$#&A$H"WVbY%jk0EAWku
%FbVFN;BtM--@+i7Cpu>Bc:>+aSj2Q7*YK+9;))>8#C4=-M@nWr/It9q?mNl7Ulbn0F?2lnP*^(.&A#)'"NCOHc.U^5pdM)T@:BV+
%XNj5A!a</fC'%%:fY)R2ohaMmZcE!k@KmM6N>7-b\haU5X'1LZ//12^X'1V8EYpp5+0!TYJ-4ch0kfjiOmkW<(PMT2'L%E=:dtu]
%CB,7V>87p=A)Zst1`PagGdL.UVNVDsc_*q6H(j22(]dr!iUG4(BjAR7nT;]_9ftN>Ed"GJ2tW[Vb<Y+_$ba,-,T\R8;GYC'k?Q_l
%\Xb_Q.=!r25LtOjTg@PEc<T@1SSj^L]=uPCQX#IEgN?A[9Ij$0DDdppk'^N"l%^J`T*-7^>[<jBfHjQHb!_t6N6,HG$aDlA()\i;
%qps-0n#NW@Y\Vs\;_/<+-1#mMeLW>d0&$$oot%cgE'D)(m.s:4Fb_Y+&s\7^L`UP@aV9[/<K;T=9JOq``YsJ@5``g@BnEP,#U$T]
%ldda1#%*p,9o34u.P2A[\d+>Ol3u]'O8Z(20sa\pDDmun5J)78S3LHkA-/ti[0SlZ'b&HVA(8pW"u(O!@Wp$h#2h=T<N'4[^cWkV
%`%2gWNAOgtX(l$7bV[bRJ^r$R!arKAADSUWS3/25;r,<rStuOr44V$Lg&Ym?AZ!f5!Ta71,Oq3&HjEoL92ZACR&<]afKi#<g;SpS
%!+dAB?ks8HM-3SS4Ko`M9gEM!T3)^:DbQqL`8QHlBs/P5bXMX+i3`Z;+OtVL?9<ZWM$E1VFo\M&e7r-o")psmB?"]l!#m%5AC_7;
%LIj5&l2c"AS=*MC!%8#'4'k%"%me/rWs>lcJ69fc.k;]lRpZ%n5(FB-GO^(U4qC4HXra2kTH*(dPup.1Y]*9t4s,2h'a-.V",<KK
%e]d:[[[sA7/nnrnZ$VG904;cY?F;I5G,jHSC,k[3G'<hWS(HSkHD'#5Qj'@Iq4HYL(P(bcCsF@VHf`Ha,@6+@jm!7$45ip*W[=uL
%%J.=l[(:diZRInAFc,ALc-GGr>X.QJ*ZSRKU"&XlV(])e2o9t_X"RMXb\`a?Np31!WO.K[?Oa\2@!/n'G1DpC"AKjeB!XN[m.&Y,
%9k$_&hVN'.+2L$cp8m.]2h.!*JhosCb6]LbDUoIpN8,s43+M#]7DZp`c'![8Odi>^1Ic6t'hjSAX=BSS\QMsP`lQE9Jr,VZK`r,7
%kEQ3`LtjO5Qk6f2>VI=A1Db:jaN`^q$'C_M"VW)hg70:+1RU3E@hoqUN81KifF`/1b[;XU<h4eOjCY+%#pVA:%44Qi$OnFNDH7[G
%&9>,,^]AI^CG>9u?>XZ$a*G53KZAAO_*l=h`PEE3k9U?H)s9'`',kLP#A7H"X?)`a3%m@\\@>[cE5KT=\q>itRtV(t%I^+uB3^tY
%*_]\k/3]H*\646!L;hF.K*dI*o`l-HpO$km-Z<cCrA-'D'-!0Qir(7[D:Sl\EH/=6?o@QhK@SY<lj1!nCf%Rnfn?u^X.F<NoCfVI
%o+AXAB?tm1+.2@Tj5Mu%U"LFams)<E,B/7Rbu0/Db_ck<Ni$@-W,5uGZ`UqMn$XjZ_rBg<buXGeB1LS"p`Zh`jZO4>'BS0RVC>!I
%U8`]EW,!<O?nBsZ""1'>/B$K4^hP89/EO*[2C3Os'qJ1+bVL[EXY[9q[]Ags_fgC`E'8esp?Yqk8b.MHpM541\r%qP,cF!H]Y5!`
%X]n-MVZAu=06\[!Qt[U8ac-"^D`/O="7`J,VSk+`dURtX:0K-[F]MlUPl7U/YuCVhB"Rj=Z`i[Bh;@H-E*AC54IZ+"@WAt:]>OuR
%O`:M[Hn=F\imWT0LUj<80iuX<<b=]7/sa(k[Np#r;u80gLZ5%0B-M$l8n_P]-$E;'^"(IO@<HblXIHZ@h/!b+:ma>JYJb\/L:8+u
%)".hdhLQuU@4[6u%'VoYmL<`!@aoRD2C3Os\bo0AYCnQTB*d8bm@*n+:@h]]7b]_%2qLk$WFk9Mh]!S6c1WI&:VFIT"8`77*hcdb
%HZLm8OG%X96qUajk#[O^D[8s(8!dn%;drh!0r?C#7^UiMAf9!>9bg?=@/&g.[\qQ6Xrh_7Tg-I'\5mb;'!h/[C.2K:M#jkS>&(2K
%!V23h+:3/hBuIX%*5Fob-*pm$5k+,U8aN0-CMdO#e,g()mgG7a1E,VK-@+k$ZeaDQ3$2Q%FoA+#g)rg4#!$Sk+i(DKaY/um?-eUd
%l6Cujgl\`\(j3+^[O2_mZ,nk9UT-n_eVah%@ak'QWD)g*,ej$%[+8bnXmLi6o:DD;V"e5"8'`5o:B3oXY6V(ZB&7T$jg?+/1U\aT
%XUL0HUhO4_a=]0s44H9^c%)kYl:bk];de4`o3@0H!dupf_PA)[]:K=@``R.p2Y.m^Nio#Ca-r5tQ!rpmHXU+Dop$Bf@C;i)LeJO'
%T-L?:U83#dR9HbjPkKiV$)?jX9o3.uC,lqd"heiFFgFKe<Vo7>ZJFAR3$2RPG5\M7a9&o$Vm0nhS9?ugZ`h\a"EomPL>S?XU!YpT
%l-U_9-8:>m\\:27Aqt!k[[pa`QaAQH3:_&AX"O[:;W"YA&j+Y4D)IiE2*8F!cl^G)L2*j1q%G+CAP&X?1lu;r8odr?!aSaR&t!=!
%DJH,JG*mR9@[VX=M-Y0`PpSuKL@ELA)5qF?h_&XF4*096D!1OW]=N=4+(p*ZhK)eA]1eY"bar;*T&r+rDDW-.'p;+mN`;@`SrMLA
%N4n2d36Ba<$ga>R`5;iD5p39',SKXoo6*]lbR^EA[MmHgT:K7PkU0Sj!F/6#F3F^4f4SfAhM>ot99r7_%4[!=In@j,a\Ki8)iB1N
%QDgpl.C"fVW/lhteWE"5FX@_::p$e0jJCb;hVN!\:U'],HI2<hJ'WGO+&W=;$'UlELF*Bm0:Xu*DAcC$@G^S-7g#4%;;OR3($NOK
%aLe3fV3co+D@E_F"n?L*3p@"0/X&M[LUcj0+S>k)rIfAr0P1mb]q`2:&6JD8*8HO(/_J5o[Mp*If$Y;?)aWu26!U4,-:TdC@!<bf
%rsI=/QTP!4*S&Dte6!Ne])qmqkB]L<2^6iD!d1u'?(:]-FOSlSHub!a,FU_uXp`]!#e=Iaf[??Z!nB$.:u-X(7>/Z$e.#>/VZl=6
%p=Z'l4Ze8R:fJf-pQA]R*Ft]<TT7GiJUM:l$I.CgT;Z6kS(qD,8*h6J_%*JO;?L:0NXVPnY.*H$f55f>H/mK'Zfh4W%+#LeWPg=b
%2C&dgL4_0ggV'*XgPs01C#ZNhQ\3n'U:&)M'X+ap8C.KL>9m/eLA4)BA$i"l'1c=Sp-:`h8e^Ch2rHPc\?=64BbqctP'pSDZ&](*
%#!TV.M),Q`KNE5S^kSJqd+?\5`$*YR`2`J;H(@N)\:if&Ns<!<loJ?(-d]8P2(0mLC+%XPkQeE)mb*$taB%ju>'IRra&unW*@Y70
%XBW._D^]D6SK237NoGA=YSQn06>-a7NTbJd$XVYYIE;?s!uV?*A92]ILS*V,:LiqJXG99fQDn)El6S:r2!LccKQ<G:'_X=>29'D!
%S$\ks+GA:k''u:R,rP2`lH&JBo5ZpOHJOfWf54_Vc^o#;59b?KPUd%4OuhfpdII_^NN.\UNLgol[=tl<Ve+8XHT+lBL/,A1_9Uob
%`'`;@cEM#p-PrqT[Vh["gNr5)P3WRir;%[]O>CJg'oM%E'.BJW]u!DekSF$G$Hj=YX58mF:<;NC22&=1@h@jLYoP5UDoisC-h0s7
%+)O.ukdJ>_Y!CE.C9V<_d'*VH$]@,+.(#EH.$(#clHPDiV;(8U9u.<=?;^k^YDs%_]WS_RUXs@.Z[(TfdIm+57n7g'O:QNT78KmM
%R:XBs6q/@f4!X%@R"!pidA#uJCmu-LfqWBYl7"[nPaBmMbd/OH3mZ":Gj'EOhIo*2pN$4O+3NF`I32#bE5G7#Z%F#nc5X&jB*/Dg
%X#2g(\cPPLIi_cudLMT2Yotcui.P@*;F`^lNZ80^YBPRjY5<80\p*W.q*Y.tcH;2<mNFO[pmH".o_@PVlfka:fdZ+thm6CG#jDIk
%IJh6&DA^3b.nD\oON`F,s."6?1.:^%]5*L6dJI;GT$q7nc^uYXp\.`n([i*148:bj1l.i(;+dS,\H*PI5[b&d/m"-C0<<=,lA9&J
%."O&X#P2IXLD8;MaMpN>#sgh1!&Dga9d7#oF;7Ip:F8+@_Uo_\4KS8eL+<_>@&#VR176tn\sgJRNSH0P?>F/u/V3r$JV*tuW@SVj
%+_-mSH,a5WK`PQsUr0W`+M(,IVB&&)`@D"aD:Wu_(4r`k'EnLpDYfO?7DY,i1b](^Y,>3UqLh[^i49p11'XCNV%REg%+0#kmeUn.
%1^n2T5(Fb%,u)a^kTDs&;?86-i%!do0\jXX#!Fd(Tp!:=;M&n)*K2:]Vj:)S(pRk'A4*aYdBHaOPd4Vjqcs(-K$53'!8%OWB^ma.
%3+/2R8cqQO'q?Xofg@/aTY1[jW2fKcC_r*WQ;g^8Es9Jt^2ZdZ:g^8?XMM3m)D$\8g4BE0-nVaUSO.i9#a=\_3p\i9CK^0kaOl:/
%6I."#.RB)'SXLGa$ePqM>G.8R`?=)"L0^'U<05&_Z"*1(m`@opm&Vq>TW*?Zn9"kO-SaR6_:C*HBP(AA<V6ml:3*/b;2n*5YfMib
%,%(LWdLVmp=+\#TnS&M%4qtSrP&449O)CXHUoCYc3jjc4RH1S>(Z35Hg2/$2;Wmu[HtF`A2GtkmoO!Jb86OdL#o?)n%3Z0K6h'?P
%@0`(^n3C:eakgo1fKe@sg>:.3ZhRCMo_+/g9*b5a"qo7>_]fp.jnu[7)Dp*C+?MlVL>]I,X'L8Em87qHUd6//ca3))P/nG9]r8VS
%L_=0oKm!^V&cU'3H]-r5&;'Jt)I=hT?/W+0,]-Q\6Y-SC5PR/_ZTnSi0d8,S6\N#$8^Cf[,cPp4D=`0R$D&cdX<K0<W`f]7.?N1A
%^lk#8$:,,*_%F$HOFju<IQ->Rd168+&EKW,_c(hod7U+X:.I($4;cp9BoW9/V;5TZcjBDfM2?O<C^5mA\i,.-h$qPmdssq:riTT:
%6GPG4Tp#rfL2.AA(r1\E^9O"1l?jraC?FWM+\d-O(ohjCY:Dhmp\`ISJZS/GG6WFlI,\=?a<4a<MC.j2a)48X&pq3_f5%<-M$BE%
%-&VbO4;9H:&4cj@rg<&5OO=XEF:MN]*O`>35]it0/_CX<qe7=sX@O7E%"i.I)Pq>*HJ"]"rQat&0N0,Ad1-8JNW`'<\7J.\MI^=t
%O_:U+^sfN;"YKuj$]FBaG&#eJCkb.VBF>E)>j;aG.-!'aIH?EN7bp1&SB>G/jZro*"()t]@<+]WOC>7`=GcWQ0EJ@Y!D\YJnIEoV
%b'tpI%Kp2l6n($RVB026\>:l%Ue1f_)U-/@X7O[pVUu%L_M+]S>'5WY('>:Y\=3r#E'lZ1"=S,qkaIrOW/eYhabAN/KRnqLd8+=9
%END4>[qp`)+?Eg(m6X@5l%B<uKMZL_IHW&Ffr,0#P$*S`[0_DUSUn,\.pTX.r$*_lhXqGh"A^2t8%*&o(TSd7AAsOZ.diCUS.l_H
%fR'/Ge?ppCH<Jg\F@<)!d+CM7U`)'Z<MGeC1&3A877.)pTn#u-g]o'>.:"3`P6O8lJEI-`kA)Y+=-Q7ElF;c_XmZu^$Csom!9p.U
%U1FK/lWOBIp8hAH;p+#2(<ionq1F$0JP'3bJT/tY<5D6%#861SCkd?>aQ?WuO1V\,,*J>Sq1C>8S4+j()EQmbW+JUOeflX#-V,ci
%YVH7PeHgoF_.Enod92koIg;:nAW<le_a`rS@72tiVR<8UIR\1MQs"2KqRB35?WDt3<:>R9^)2i(Ao-K#)g`KVZE.7IAf1eeeA)g-
%>K2[,@dIjo=QTgEjp'RG-3dN`0.PAd/`9rhJ6k-M.XVl!G"aN:e=g;t/e[&DR"h(lAggZU9qYZ`=dMa-[]YHfN-`KR$7`4lam;a\
%6qnn8DYLSBH@q-\jra(+*s@h(N;ci0b+/ni,P(FWhKg4A/<O/PiHM8ioe57[K&B`hHdg@G117+$HnR4"Ydm"pWbuoO`NDMYHT1U"
%hHZ`bV:a,s[ME+GC:A#(q(._"S3T=-d%WSt'Zg?4R*;MbMMH3ZX%EX9e2&,lQ$Eng`ir%di`cZq-:'tU%P'$KD[PgC"2I^69oT!8
%!$o$_`3hcR^r1)F5+h)K?n]3ns,jXn4X6`SX6tb`pOpXJdSt1?PNMucRI=g4Qf>CkcX"@>N@*#Qaj_B1'V3KF(5`ic.LA.g!A!4R
%G!hEs%>g75:W0dF%=qMD(L%bK(DXJl8")mUU^a;'8/(4?:tj2TL-inQ!Z'=]:ok[SSOY`SSF$tWJ.6f!Ee<lBYtPj`5(WVt9sd4g
%kJC=Dr=S<'k'Ee?liSgK02CE$R%$XF'l9diB]fhtktJ9`UK0,[FkpEi13Qt56I&:Z-XaAJd%/oHe8ht>6])BaSF)Gr2%(+S[@piC
%.-nk@52R[="/+d1N8^,_"-^l2"upIj,sY&j>^!$PRgVeM4r2Y#<\oW4e6pb_2O_mpRZ5P-@6f@-AM2n90!d7TUkis)SP_:Ekrcj>
%,eq#%b7%cVgGWIX+QF$4VTQi\C_]&2_B]1j'@o(+%UKLVa\4>1D*fWd[sEe?<H#3+_pN>IT8'i,enN?sUU--5j!0iih^!@YT_96-
%iDO+B@=SZCK]Gu>]8Bl)')a;f(oT",:76K[7;0%1'\kX&%5>$07Pj-\];V/8c'_YNS:f@BBMS61C'R=O1UHa.E_Do]-Ihu28pptZ
%UjkI^H3,DhJ/aQu&Cj'\fJ\!VoIr1Noe8%h/bl,Lql>U3;Ym`2Gl[X%7.A.WG$Ij*'"dK5V*j?jbRKi#lXuHU_=PWlgl*#0f\FOb
%QR7DB&.`7*N4b3F/a5Pe3#hCO!,7tnDK-GNB^h%[Po`\h>,T?)PSQqOist?)El=1$4Aa"bE^$"%!.)QR6=cr`;-QuYRoX\-5F+cY
%.0sR5<fh`0*d@L'/=`Mq0@R4Cjcg`\-lB&*iMtCgbqpgO\lk?1Ab/#F$;-IiKX7c9Dmh!&E?sF?K98$"rNtSrqiJe?l3t4W-Sfsb
%b?*3VTf`qTj'5isg&b5M7<'a@.Nocl'IQQ5H5B9$LsaW#ChOLlnJP&#RK/USAQIY^.H7L!3='3piI1!a]<]&XF=O5ZPV"NPpbO[N
%0=2(Oi?d!-F3de%]!1`pWg.%(U>=TVf$/7@KbtLB"TDi+Gt29cG7Z12@mfTe&/!o*Jh@HHY76Z36L"hFL705]CQ]\<P%3qMR$!K2
%q0XY@q=PY3:Q;qo'e8s*_XJK!a,J[gg[]kP>Z`'uQ6;iG#oA:>_BP[LR^uMNK(X0Jc3R+?!En(gq!:G'A0o[lg6GtXWeP4t4pB+W
%$oL@C%_>"0pO0oHA!4n5r..F8ET,aaS8-Hm7[%`W13.<I^i%b'n7G\^O*6A4KXV?h$RMLgp8DHI`_HtX@]<L-=PT3=,>1b%\FDk9
%EN/HL=;I08ZKNh$#=^&u\RZ0TnN'u7W*1&R#%d63ZD%Ou2q,R2OBHum[*f'i)T4mHCQt;Vn9$6AdBG4@\QWhW,IViY1)/D9\.'^*
%q<+`a&g8k0A>SLK4$o&tW,%51#AN1@&X/^qgG9jBB-']&SfPi&3S^Y*!\$_`<2"=!QTHQ1efBJg&Lg(R0OV7D8-CUfr2WXOs74TJ
%DAj6"eIXJ)X(Y(FCI0Tdk3X?\f].-a<aK1ReC[AJ-O:$uBU"W9?&MI9)48k@bjma+>jemX<.>JKKuuD.9UHV2k(8<6R`u?1\;3]W
%N\OQDT[pWZ[PsQ\5d/5P&Km+VOqk\K<gLRi8\004Wf?C+=_W#__LCN['Z42q7bYl"CbDmfXdFdZ)92WBWuD[.7'n.*!m`=\)4Eu;
%!!&]pq8ehhD5MsY=n)hkfBc!g%R!hfV[p+f&?TGE=5F!gH7Oa%YpnpF3"UX2nmi2MgmXl`epWT>\ITpS6,a2=27d4tRE-qSWm"X!
%?Io0D+p*0-2);rR`Ha13l!RiH=61g0`LdZoe"h1J%LkL.E22E3E6h$+pZ+(p[+/-'8A_Ub5(Ws>BH=VMMad)o!g'=Qd(VNh%&HY/
%A(`)H'9n$4dFYJ4/`UM="_!m)^$+&%YoigmaH6m(&@.)l1M?cni#s&`h-(2eD)Brc&"SjD'"->C!SNXi/#EH,H?hd&Om!1<UJ64_
%+iqfNjD7pE4?)'tP:`?NKQg;8KLS3F+Li_576TZGTM8NCn;.#b$1'bmSdcG^PXN"5$]@gk;SWs:AtR?sg^tcJ[TtkZ4%)qEYsf$V
%RTGuh&t$l3>p);?^JE=g!eJ5dfoTXY^W3^P773kjk6'Od@*$EB?s\i):QU$=Y0)PB5nPe[NIdI^4_LuW8$!:jU$t^6jLH.)fBjUm
%[`'e66cK[63s6D0&:jOs+NcMYl6u&2K,\9jlj)')f]AY06<jpFg7""iQbu$X:7g+ZfJPLE`sb;/h*W6VOgK\m7pVnWTSu$)ruASr
%O)F(mEOLK[Y;5,jOERim6X#S:.E6j"L?>Ll<a]7B9s9pNi";'qj[+RE8W8)%A8G(?X6kfrqJe])YS&TC+%4*ZOgYuV#YfF!MJtc>
%YWS<9n6l8b<WStSMG"N%Ht`_GD$eJoi7Pb:n*"OOTL]+jUdmjdG.&XH!f:<<3%8647NfbqXqPYFdmHL=m#'#Vcu=@s\0gO0+^*Db
%0LXSdi87tGB/_>sfT&Sb9u=!Z29KXq?dSn8#Gq0i4(H6Crc2'Q.GM',_:klkO_!',ePXPJab5Hq9&XmT)U'Q5:5dP&b+.?I">%+d
%-8qjj\ga#pN3f3LRM+":<*64XFjlWVL(fM&8/-lE']o#C);#o4B_:Y?Z]e!L7l:=Z#=(KV`:"Kun??%PZ6g=*PuF:[2<GJ#;md^'
%%HMDQFr$Dp#Z=C_1dY[q%CXD%reo(\i:Ao!A9IKba<,r^4sE3;Bl6hL$*kIYbQ:E.`1<OV?=B4f!Ms0mJ-0Pk,!'-jLuurUTN2.C
%:+V1$bs96u(K+ZZCY95Vo0N8&bkNT^Ge<'6N$r^D(mj@2E%hn\*k_)a"<giBeEShrfV4,_X;+Z\89LWXKjXm@)]T[0(`?L(Q*&'D
%)9tS-.TR2ZD<?rImcTR#B`h1AYf[Oo^b;4]@gXpkN"^^L[<NcMBRh;"/*m=aNJTsmeI$J^4@oTX*MFu"@"Z$Gf#q,<f);IG913(f
%QkU:7c3S&(/)(CSB0:jdo(V347I#n%.1kE+@um?o5HiM9*u7F77jt1Q@R\?gL_tl<\&G_$<d4V?bk6NZ0Q?@H<aeZ[`(,niZ2BDI
%'`at[?(F-g!^RnZMJ::Y2-S65lF/Z1I;(O,0=k"oALg6J9/O"nZV;PcBT(\b=;El",-qa'mW$&MHCMjQi4NQKK;M[>#4r1ej!6"O
%C)Z)G\Z,$oLsE\pac'YZU-u]KT`Fs('iIQ<d,=[RYo$"I^^p\<@J(6u5W6\&d$0tGBd>g$m4@CV&SDVSbBX@$+H;`e'ID%2\%H-L
%Nf]JVC5"c1@7_>>Vl"BuT,Z)D9E5.T"(itDVQ)Ar5`ILDQ1]HDZT)kWeMQ`X2A!0qWG90E?q=R0]7QNRBG%"fD.=&)<!Ofe$+#Be
%euKRUjLq<Ts3e&_q,HDmb>@%JAt4mX&Iq=r*#^[`2`_]Lp9;LVZ"7;[k"9Lm;[$!jjEe1FUT"n3#-61;D3H$-X?nM`&jmT'#gd=(
%Nk\HH%]6WDh)I6p_.@j<`^`q(%g5.Um9[rR!XR&<.3#^(IA4b9eJpp1I'SCW6hR)SpG-C*H4#bqC"l*$.NF1bU^P^5TN_f8>Vt8r
%;\@Nfb$^U#Lf#>EE"k>,UB<nLr]@L,JAK1gg!E0mfGf;**\"<Q)">e=/&c5C+uTVNc-XaLgQ84jVf=0DmmO$4)9RBf6feB#Y`+;b
%N.$XI*N^1`WaGoreC0]UF<-=1-o\.q`C^XH:.OIg1doFT/WI=8"Z]K-4R!L#NOAiVMWSgh3X,8@]?j?K(#_mCh3\;#c);ctE?W1K
%)IO1LoHVWHTieD#l@F7C>09K34N8b@ffo/Z/:'O+[s[,\Q0A91c6$6I3U8_A7!aQV@Y+0eCWC#6^*5RN=qc[%j5F4B;p#ef2.RFh
%Kn7Ju'JgtaIK#bn+sBATFOk8=b3V6q6q:r%#*Y@?s6^4!%4!''SB4iDhC8l*B\k,k3\6mIZIo(%;cj&K+jn`3!fKqp2dnlR.C7$D
%^b:Xg.m"!-!.n$I5b12,hr9S_ZCuKZaF\Hd0a\?<*/Q</SIc<=cXs%(Cl/pD/1Q%"(^Q'.C+T/(;bugZ/1LLVBKu5hCIWB\IAM]o
%Z?]UW%OkSo-^+E;]A*mMC/=mNJl(W-VtE(ZR1XOu&@R@5-5e+uEc'29PK=XgH3*Oo"s=d(,su(kB&HB*h:NuD[CSk7!BjrT-^d72
%YH;QV8E\!d'M_'Lj=QN_`Y$MGXR'8![k1U6^_Y9nOlO/nk7R$$(rA(2p_GM;B=f571^%OhD%&LHD]=ZjP/*Ji)ag8t*&5o[^KG=Y
%'N2hTS^8H\TjaSAX$u7siA$-rn\0dU<cu)Ci@i&gpbW8/!RaSH_?f?RX;TAk'#^$CE#tfSJ9[Q:1''dG3S7m,Y$1F'anc3Bi2s#N
%M3"Uo%Mm'*'AfMb<sfQh]Cg<me!Rbe(WIFB741_rK)ohnUCG'naN)hFI,V_'AZj*eOFe[(M=N9.NLE9H0gC`)!='-'_)Q52;C!qS
%M94%#O+[^k<G44;ep1Bh!#I`Hf-.XZRHB'N.8^FaG-!PY,`tJA>bNBC-m)=9SLc6[XUH&dU%;#$Nn\CqP?KfYK^;saKL-Fq5QG?X
%LkZ#]0$MRL+YASme(c.1GR/O+iL0@$L-!Z_QM!A$GQgXMd='LCX3%Yg&AV!_#'?<>"k8'VqNrBaU>D!9,1/:D!:rTTE8oXDF\N1Y
%`M#5a!5Zn-G_35O84)SHJG'FZ(?oqj?s%4B*rN,?SSD`@25n'$B-kgSJDND!7;<E;]q6\+.r**4]NJBM0.pnRXh0orU1$o&dtP>/
%QVEeokg`;6!a@o`&VWW!P3(3$cqCQJkOV@HjIC?X3jUHRg7ebH1Qd!fjf=!F[PTs]Z7EeuC*P&b-fPekVF^&oXA,W'oCri0J3gr+
%2B=#foQ[rF09i0h%^S"B0<5l,e/e#i/$0-m-,pf$-$2U[\XT=$>c8G#nZ_<mXq(tpJHGpO+V;jGo)XB?gbXVB<ZMt07mGgQO/dZ>
%\ou.6R]?QpNB%&9/Kfl24uKBcOo38kS&WAh%?(K"U=M2[_GAHR(fqUaYVNZB3@mQ=4s"H'PalPVT;,DbY_oqao-S2jZl1t8-G]^.
%:$lgR@^[!]ME6lUOKslQ;D(m&c$Fe;8uWqKcSMZ-3l@O"1_gS*5q+Va9sn.[KOX"&Lh!aSH_"Y8%;D]*4,6:981T8a.1f+YF<=4>
%,X<J`pW8`1@_mS-[c32"]rqS+V`uDSSd^-6^&7]0^O>k<S)7P$H?XT1o&Y)!J+`Ni(MJ2%HfeP-^p"q>"$p%B7p`g;Zi23iDKIbr
%e-Un^'5:+$IN!dk#rlBVNjoRTHWHnoaBbqCYpokp\Ld+SX+[5t8eDZYbU>]Zar2D4Qc"E3RKPL)R3'Xm]G_9N!Mo0\kK=NJfTWF3
%_m.(*dEEa+$/I8sn$/oEecH;#%]u8'.8IW0kj[_h\VD)AA0dikR"R0ZlSB&W>TkEqLltXn;Jh[B5mp^9@:WkoI9P.N'c;o8TZN)X
%-q9p1#(Rb`B%k9C5_;`NQ1>%k"GGi@Z1$@JkgF@7$a"bfG=i03KE,@"^Opr?Q>,<bSBErF!OG?=^9"4EZ@Fo#%U.=IrAtGU@o!?-
%0Q@'1VGEO8SC0OH%35ZOM^<6!9o'TI3+WERAM^?XW6ms>:r?1jJn1:@\9gbhS-'37fMSIgO4mE`cHp#QJb4B$H5+nG5kVrtX[_NJ
%]4#GDN@ElakmUXgCZ-Vn`e*07f:&HD,lLAdiQotD4@;^G$t]9+K.8B-dJufS<)5[N(je"DFZiE:_GipJ"jQg"R1;g`h2b-D$mB(g
%=9O[0gZG;cL'#57lin5I%Jk$eg0q1tQnK,TKX1^<#l>Zd3%6]bTC/:^!iQ/I/!oOpqG?546V@q6dA[CHNia&t4+EnYB"#S9>6>`k
%1pIJT"aboqVI<XkOTRkU&;'e5qhOgp39##d"t`")@i!hDLI4'%4QGkY';ceJ=gKY>GKC^ROH41h/MQ'i<Zs6DPnF.K(pH(h3OC#B
%#HI&XbY0@or'Bbhn-<&H?tH`5m3&2Q)`e%Qqr&\HA,sRs_fV$]f7[GtC/>lMhf2^8e3il0=`V2\:25%%m_JGtkaH^\'in*2U-5_/
%(+:ReK1r72R+Q5:97V#(p7.DkJ?]GCYGf#WcR7R1d!3VO^^jfgaTZ-I1>HC&\MRFt+^6r5[\Wtg1D46$YjYRq"+1p0\CiF$2q<^%
%m[F3qYgYIPBePo+LeLYc:#Q5B$U-J2$Q4"A>Tj#CFGrI.d:;iG3]*4b/96C+JPASt*_q-:P[Mr.TG&7^_5`50@sC]5[DMCAl=W*M
%Z&Lnm@iLgKr9-$'bTQTkheq[49_uTdFnSt81#p0h"0c,d&I1\fp\r.Nj9f^W!(k#BML(R`+L2euC4<]]OE05D,jb=Hi*.icZr@F$
%2-#bfpJlngkuW"N7`77i@$*_VT8K1><c!lLoYKj2\f!X8+gQe)S;AtnfJVUS;cd.\j_`q&/&(NRMb$hhA_O6<$R->APDe`^!opL8
%9Sj3I$&rio*,%1RPbWO0ml.Ko=*LoOp(@F-.$CB.LScCKR6$+u6ieHcaIQ,)O8\aO%AQ6(]/n?(n1g-Wn5-E!!#[a>@G0#`Q;]Ji
%#HNl&W`Q4'q@d_/*$8a"&qXWo\EC!b,:8^X.u\LXf=?eP7on!\%0[(LYi6^q88qJJ>F@[or(Mp/k<k*s#<.cq7,R=(MNEuQ7b9Kl
%+)"R]V)kID+E<;8&Q+aE<qK8?HE5$\LuRs8!6QO0&/[n^]I0bc$Wb'&+aJ!L(p5%o<1%k9S;P_'H;>2UX6@M."ILP"c4"FsT8iM>
%mh`40J=G;8*Sj2T(:<K=VD/AWJ>+A-,$AXj]?LoeQ^'^**Cm5)_n=H%)/`GA(C>P*f3RTS,Nq0BGKm(t22mi(.[)$^D?m'PM%/Fa
%.>:/nB8t&uPFpBiqp.?*_8/Of1*1]uk$OkS/HuB]!QE1A*(qbAKJZ)p:Bt9Uk8$%Gf1.#Q3pi:9"K`SO/QoMRYJu12_7Q5EM;/k&
%EOnXbkWi=BJG*,b;CjU>%Mn`".ZR**W7cD$!o?N&C.`KRKY1f(8.pmfd98K^NM>dd#a:j7AWE7&_a.?Z2!%0qP!W.I!0$tLa=?sN
%h>ho>$nJ(QOp(Y&!Fj)/(q-5KS=3<:H!3,'/S#k3A\dZJ<?/6?nSHik*<C@^;QQn4ChOC0/nk4qi.&\.OXZkZ)B@.l1E3Y$`-@nF
%bVHKD^"eleV/ekTUk-A_`1D5h"X5o2lhtJ:NGain5edgY'N`G2`DE=X2<hf&_P#2]2@JSc#:M+Vdo(XJ+uabWm\.YFO=f+>&k90V
%'ZCJXOL`cE#&<=H%1X!*78IkY3$,(u@W^Z"0UC*$DW>qX:A#2VLP\n0'!)dO`Yq\k(:VL-q(Wf(-+l*'gAl$=&Gon*c,MoTf)[&V
%cENVH#C&T0K2lkL"n91bWC?rfK??oH:gp34PED49qRkK6A/qe8"<ZCld"<4RiUsOsn]B>9G(KckMehX*s)tL$@6%Q=l;7UkOp,9^
%KL^DM`Q`U=dN=!=86K[rCd;HMLRCm@02tF,)3S)fa=bUi7BO.k`UV'F^s/f6Y]7N<<eA>G;`,W"=i6cZhpV?u=D\hkfB:=E@>!@]
%Jb?l.7SLbn,ca#()TRSha0G0;YeD]7aZa1^=QYgXGAI:>.M/7im8mtKf4cY)Rba/iDAXH&lC;DeVP.65/#Ef/.Uf<:qK0*7P,0=)
%5Mn?m5U`"J]r9V#l@E?TNFV)c,6Io_&u-":Zl`42<-8:/.a)k'>SY1T5`()rOtCO((8]&o*[0d0C427"&en'jnM_X1V.i?8:.&8S
%e5[YQ>)Ql*&)nj!g"7lQU^JF(^)^f(&g1A=_cBmN(t$=NQ*S]mde;$PdQF>_D!F,M^q^$T/H:;%koL+BS./@7-0U>2djWg;L_U!+
%Sq>jg_BE:_;G"&JK8?<Rf=;Br::_48-_\MB&Qe11J[FPh9idX3kT;gU7^q9+jb.L4c6,PuL)1_*5f?gsE`o%IO;2OlV<tpm":Nk?
%Y8_[E"+TBGAY!Ve*FDoFICT-+AZSm^KhRj'YQ[.7m;H!`3<2l34@<$X;0:lFLY7,JIr"H\^H'/`joFRYgoLS-Md/9h:M3E_lS$,R
%P*H?BN>!!1"h,b_MQ%G3.2l2b[)+Upa\</'F>U'rl<5O!$?uI">V'm0#6U:hq?,php</8`OudF>5Sbk>.iklGF#iqd:^190ETV-N
%"uqdnh$UWIJ;P*[REnB-92)bpQ\@=;;tSbk7''rqW\]3r1)mC]0TXM)N7S9qbAU"JY\6`AI=\fPiR$E#@0eY&M/B9'Rp0CJ=p^V<
%;7kR_#cDj"((jA;HQ+Km:oFnSP?4dM4Ii<\-Dn1_JA8X'Sb$Z'S*`FlB)jNCW=Mce`OVV<N&HVFDWt:]Zc],S'k\%=$sHl"keS$c
%6S1D'$X(o;?mAA3R^Ia;S/>Ag8ANb6ShQJ<6#+U]N%:[tiW:J'b2sqBG9RW\%6k?W:]Y8;;Tf^R)3d&f<='<o_ZXXQ=uni(pIg0#
%7A(tCUY42A++IKUn<d?lD)Icq'eQuHNG!5+TM`Lm79&;0fU@G)(tFED_Q?3p!/fL7EUpCO:c;]DTM".&Ca=X^er0ZD)Y>h*(J*l>
%Iqe%cEfWQ*3h"IEOOP)):cn3s['&Q;Ck`F]YTq4#UY5l7T?]5ARFgCkFC"'\gE:K^\#kNm@+JZ9OSioQ%Lkq'nq]`r;fHQoZRP:e
%n;A,7?qNSM4k>U\UrPW>gllK5:2URe0%O(6<S[b.2=CEZbU+npm*W<P\cJ3!WMIPOjdMdM_WJ?Y1-e)3E$+E):jC70V5p:1JQD6*
%K@-A!6E&$dTG$sWV#7=Y7f>\TCNTh<(Ij0XbXQt0>1aB/^Q+:ZWR!kJLti[NoB1KAaV*<[+[tBIOeTd4P":V/=<$n==KK_Y6.Un2
%WSi(q9UQW")M_$p#%].8&7`$_%8hE<*:'d^OrHEmK#YC5V:t9f5m'1(<dpVFp^,sRE.B+)e_%"lI%JBk2l+M'Zc;Fk.k`I-N*8P8
%G.k1-/0b41+ApVAbH/o9=G07>_:QltqdNKrfH/B6gE9N-Bt/Ws#m-Q!/dR=R"@"49>jna)MhuQ#iff4MP0Wr\$Lq]#A?;k;e?qA+
%ARJ;U5dbF;n,5(;@,%URN%Q6<`k'IN(=u.\:hat&"SRej_^\Ze,qpL9l2g+D]n:T#Y!SJBSnQ-03?'/p"2Bq`(/[e34ZV<_W]D?*
%4^70YHK.[VAM'l.HO!@>ZKhrhhH/sL3[)jjbjN@8UWEZ84'!TH^4V)8rYFi\R=%r"I-CPmo];Dblie+s)O4L>.@1ZF^3hD>Z\t.n
%+^h%J()aNu0X\GPE(MDhUtRoLCAJcED1.$`=cIeeXpm?k8ui8r?mr(@g+nVuc>BXU;bDZRo"'S'HQ&jmgMe)o?pDeS9b$oLfWh`H
%eY-"%.$!E+9`u;i9TE%+6-orD-j2M^]\Qu_PeK@1dj3i)g(u=h_Ma[o[*$3+PKbqZUIT2,%8V/$o\$4>hlYXG5^cGW<4kul@^&[@
%qPRoMbm\i4Q5CoV(_ko,<\e`57GWH66g`2`82L4"o_.a.Zhc[dnfLDdr+u8@WdCD2=HbJ)6gKpm3HDa51c^a3C;p`g-d(L,2#$7!
%ak0<&ZbmZE/,(To-c0Ehknr:&QOHYkXuts3iK\QA&94s$7i(p]8X>=m\6J,g`p]uCbDRj<-\X=DP0n>d@hL(X(B:"@P(C>(^-uWq
%&`6%P?:g<<_9d@cA:VU47N4cO$;1u=EJEOjfWI"rnh)4QE_aWclh&7YC#Jd1Ngu<a1/)_!0Yu3iF)L&TC&0VC1:)J83AY\6KTZol
%(L),[]Z<?s.Vl68,!5>MA48sq89MdEMN#>A9PnbnF*F9@(*t_e""@M1+r@;ER=rX-.=uO0+]D4\'ch<d`a7V?aQP&G`J%P*'R-E@
%`eHTJ#,+`3!-]b:(QA\<Nh5f?lo`?_c_e9eOBG*(((#$K%`@!\OPr2F"'ooSD,##Xc@Cjb>IO[d$';^1f=^m>=kDehe!P/^rcVm<
%p0')D5=Q5j?ei^"Bf4-c5l_!io<QA`N(mu-br+M@Q5PTAd2k4SL,eKRG#,p-lD2J9"/&ib`-FI]k74CP*e?<j-ToCE/f?`F*R5PU
%foASLjiGN'@<o]:3H6)6WbGA/3l[\E-gOIH\FlpN0;;sLbRh1%SmrNLA*,bs0pb;6lCE0p\PVEHH&fF1)IY@GNXZPdc90.c_dVC@
%cS<gd6%PWmU-_+]Aj>g@<HWPWk8:E&0_jt-\U(-hGF%8tqti@rYtf,k'T9@Y>f@:H44,%K[#[dJ$iqO@F`NumWq/tB`uI!*QlF:)
%m2R=n[dt@'4OG,ZU[!#g@ut.&SKUDTU3NB1s0anI8(;<7`Na\e:2i>,_8(5C@gFg"SDG)+$WOo'].n3!U_C3lhuO8+.((dA_P,cu
%h@&fp@CmJ`nNc2C$'Wu.j![!i0pYc5O?9?p(hIPo+\%40;!Z=CNQ\'>>C*7cR*k_g_#o833h:7f']Y%o\7guKWJj[nNU&Qf0n/^T
%42i?u,sXp]O)ahUQ7OBbUE[)ZM/fp4Jt0`g>/nu>N"L$LkW(@7ZO46$-SPb'b%?2WHU4ur-i2h=[8"qQ%+[FJ(6,t/GmVrf]/Uad
%MfT\IX4VFW@f-FIcAB)Vp12+\9XOl`Xi/1=/$HaF[lBf0FP:1,_/lX%=q$%a*;.NZ9F#>Y-S:?Y7t>Xr?X%P$#\n<kXPl<J;&5ob
%"Apj_/-Zn\;1;se()P^6n\eL&lA_Q7]&I11>g?B/P9R9M>L>/F(Z!tH\VbC'arTl7K=F<l13TC$P"oh8`nBR8SYd8"FMt\4Q=AA1
%Vj8]%0e2&u^c%3^hsTi!;%1TI$nu0:0"(lLqFU26M4YW,e7l0$QY=K@,:CKL<e9_p`7`Ss://r(Ms>Ou-D!GG@cH0#4m9i&id5Ca
%Y]8\;/###N&gIbp5$"R-/lkL$XMh>Kna]JO`%ZLPSs71?0[-=0,r,D0.$=%/,f\Z%kKaEjOha<b[IXusbi%H:N>OEG18?)6DnLI1
%,DK5"9]\Z3$k&&JY/Wm=L`q@1c:&-OS"d"[C\9qbPU]e'L]P+Um)+[9a]4f#R>70f$[G`I6_#a\i%2g>%>O.3OV!0@Ehac&QMPb/
%@^(T-G4,RPM*&kuaZiI^:`1]W5E+K.Ubhme*(m6ojMOjTND;VV8I0em*_s.(ZLJDPB%>n:*DXPe`\Zp7Ed:OJ_,um18o;7!`@Y($
%_2gD60N''6d1?CN6Kc]%LOk"!$1"!u=@Or-\e,E^+k//V7KM]^neKn58h3M<AA`@+NjcHP%n5<HWJ3]gf@j[P`[fbfL(C<!'?`'F
%0,1TNb:ipe8N0DoWkD)5iC#C/VI1qpP@>C)&`j!nL>ehj:1o/ejReHj$&2;*[+L)-TaOXH064-[Bkn$+@&"DP[IDOk>gLp:aDRcc
%adIi[oiK-W(A?W5?==X2Xmj]iJ.W!<ZP=PY:+D20<,<B<:$=Y!8LZcOmu5+9F@'D86)!2X-Yu0<6mk*!HClRS0_bo]co@H_6$HN.
%8/<=hJtni1(q::.KfGRk6/YtY@M?b/-,.@OKR_!((VEqL'0]N4XH_"'%A@7>VN":eAf,tYJR6lpJ)V(Fr?PL8N(R3l%@,tL&gi>h
%>qlXq/O.)t&dF+f8)2UNKV:7?=?-s"F6iVX(Qn1f2K,ArS4OPM2DjQQ86?2C_Vu.kN7cHjKFtjgrQHIELc&XB:*L+2cV]jH#X]OO
%/Y4DEZ/S^siu3P(W#Ac0jlJi86`"ne%us'p#3-5+Bt+q.',Q2V?$BCQaY.b#8t4nX8:E(GPG(m4#*!fk?s%;Hl^,_a`@\WHT#AGF
%:Em;iiXL()dfop)dX.@__0dco2qd-ZJ4X2%3+jqL$W)jY)2s(.[NIYA0SH"O0e"4m=Y[S\"To8HbF'q!VuUi>)d.+u`^srN_&so0
%b3r?uQjqL'9Yo)#oKeE:\0OKYS9TWom3<tA6Gs.$%qmN1rqf(r4GCceN1G\6VO;Qt?/)p5&4Sq=37;u-@,2BjeO^>mZB^hPMI>?i
%PaZDu#S+s3c'':fc'0O*!(iPCN2)mKJgh0KaY*e>''oJ2J^os\?1A"!Z,)%cmF8._2b\[.8pX04r4qNYd*0TBX;%i_/Uh*Hnt^&Q
%?rG#mbGHs.T;(F<S043#[k75&JmaJ$.b4lWnJA'--UBHd_Mm*'+]sSP;dTsLHpYc"-:9Ke.2]8Z@M=[U$4NIKQl.W=&SDC3(F!qV
%M'3]r/'X+m6SMitOaC7?_)_^dNnYG'RBC$bdM[X.8rN7fV[2F6",rA6."ZFF;uo^J@,-pBm@5>eI59<!@L+;IMpY42#j0,3d<8u"
%&8=!#[511SK"L:l#c<-!a#H@=,g$I:@L+<e0%6lH&<*9\L7+SUR*e@IIdRW\9\AUB1591kO+t>!<qhTJj@3d6?uT6si*,r-5ugJt
%FJfA`<bAqJhG+SDMO3?A5;8S7`=@iUL1Op43A?%Nr5-_gbcmGbQ5DP7*ef-E1H4e?2D:R=GQ_S_SBSdi8q_T2$]JbpDDZ"5^ca.F
%gLLJB!,h+j'Y$ZjA'[,c+]./fUBK/l8\/@67\RHFgDV4hj)[I&9L<,r%n^V=KYW!'Ggo.fbYQ;_l%Hk1/OfI+`!8E+B[c0q&IDsq
%_:X;.44b,^0LWjs(_n`N3&H(S-=G8sb4I_,!=&Z/6C:H^)On5.#0SBu4t>CMc3-hk7W*'U!p7,@3bXcX!cJJCr^6q6."9Wn0hDOB
%!TJB""\aJE#VRZ8blO(hWIQite(^Z"f(@;PB.@<E2UQD;"jHff<[IWTTr?;VCcQJ9F&NH3*h3TT>+]l^\:FBa=A?;H!E4lK]l='/
%LQ@P+EreYDm)=eh(fI7C-5S?>#hCsO0Ep7JDW_'JS<JIG,6R(o0Mi$M"q6b`JAd9R=<X9@:GuT=_rBfp^`cmmjMV62.2*ZG#!A$@
%ap&j,R+09H%2`!s*6na^!@!6C###',$/4'_U!Uo'Ch1>mIDZ?9#0^ArTuKiT^lYk1fEm*2\R&4,KYS;+%"9Q,<[mSb7L74u=I<fU
%^^uU0s$R.:bqFSUE'dqa(Q$$9J[qg4#P:asXE?kfeMT[$ls7P`h&1cpo-S_V`!B'/[kWN!&NF<2BJr=froO4<.=ioOU;8:0'h'0$
%7n$00?B=TU'.'m"`c\-l<l2PCL/q!2&U4Ao:Q3(G!_ZMKVZ9ca\Nm49)1bXJE.i!n?q:Cc7\(,.&mN0^hrm8-SEHUL%VrZ`UBG1A
%gag;lJPch@pun+Y(sf0>R8X0.aju]]dH87TC=eE[KPRjhc5D1QU/q1P,;<GY&k/<-JUuT8idPA?`Yd_MEC/S[Ctm>n+YZQELh(Kl
%@.)OAa^QItV?%3FWY6Opn5T<2"BNX="+G._Db^>?m%NqD70fp,'61;Y6gG?lDJ[*L"@bB"!E0?Kc09c+3UthK#7LW7XV2d11\eXX
%3ahs,.cu,o.]DCO#E6hL]Bs^US0,oI8YZ[ZL=*jin/W-iW7GrL@&?L_SM\+.9tg0T))1]QjZ+ck^/(e-!EZ4jUS!s)+Zt^h[qcr2
%_'fgJ+NXN*!mKI.jlJK/E4,O6CP/6U'.4.FC3p+G"#,PC%LkZJp4Q.rZ$>X5^LYb5fk&r,\CAY"lb@Z7h^LALheih.PPTmnQ8M;s
%o5?,tU7R@-19`b.YQ*I)J#CM(J*$Y9i&'$BIOK3g:AX:@a3OM8&(Pr#q:cG7:Ma\A`CWPSbD8qQW/L9Gp-ZmjM=.k+Sk.0#b8d'B
%^W?*VEX"9;mUX)nISG62rAkar;uIoq/_]/OoEuQ!Q4s5V2j1Mmo@oLRpVcXW%(>:D^Wj3kEK4DG`+(r/r)PU"SDk@VYHuM\/\^AZ
%6gP5rcJ7La^XrPnfi@50X\kbq42!:Y.8G%nS3tRm,PMAp&lZ(T\M&c\;Oc1M8?O-OY0=W<,idHuq4(r)q31FH,$@TUNR@S\o.*V<
%^>'s"'tHs%>Lc/_9&FBJN$h)%hFjGf^>.7dZ2%G?eFK$OQZ[3`QH&#jNFp_?HtON?O`.WqU\"7=9@t5*?5neU#X8mS!/W@.<S/^H
%]C1og;tpEI7d%c1%J@3#^mB^aAEM_CHcZJD$9LsoiFh8A;YJsbOGX]uD`=\(-gq5[T/Booh$Z8QPVV[N]n9bS1l6S<ZuTpmX/,IH
%4)OGN)/ClRFK4ma2T*5U8NCea%O9nOb$MSuSA@tR9?)d^]88,^?:YenXhc[m:`,F3?H5ueakmt_8O_/dW2ZX!OCCW$)J(R+&5]u;
%p0s/Z8pAEa(nk[7p%G2Rr^>?G7gm6AcIU/X3jb/Q9#ICe7^0L^-=Bj3ELj76%18pmf'V7Em6Z2plSY^e9tFX:W9'PPQNEJ%mrZ7M
%bBWVJf1SjG-m\!AI:f#):V5`/jQgB=%bsW'^0XDDc#g[+NSL?i$$mJM,EMlMfZRq9O>>,69+DDSYDg.>lc;$tp>XKamlOtHF=Ecb
%(ND<M)1*RoeI=@c^`d2@"h<q^UP;d.L3s=H.Lh1Ip1hsWQ:]`Pl:4bCmtAB5>90#/;a=;^jLd;B1+^:1qG,^*m7F)>ja]0=K5qCI
%$3l)iVsN69N:dD`]/sRWq(dgSMABbV+ngHB3+["NB6&rpZI`2Ed[@D-E(;)fN3ZLkg.Ifu^%diaPYRIVW)J7/lAWET[3?'g<WN`c
%=lmTR$TOF!L"#%90amC,FM3W,A_e\RdIf8P;K_GEV0"\5lW:"MV4_K.j&QLTBs*Z&QQ768l?'_P?L2=5?3UJA&\#%<d^.0!6Xf($
%"'FW;grOdRiN[79=Y^03/@_0Ee]S;_R*SI>W2(X)Y7^H9Y%2k(e(^sQm6oD2@FG!H6Md/dffD]CZak'"klnS7(agtuSP!kd%)&cX
%PitN^gPTte(dDqS>.\S:]EmAUOFAS?`F^,e\PCFSLM`>lgq;1sGpd?5&3_6ajikA;j+P_$97j*CcEt7>7g98TA`Z>s(i<$jbItAh
%4*0sn.p2K@?gM57PluV+ICOP^n0^\3mW>#K,iiOEHAn&K(OTMm$r:uXYa2'@(=RHZAhrVGOGl,&Z/gb"(N*p86;&5o\PEE:jr3_.
%pA9]&([r6*CHE%[pJ?`]ddViL(-n?&$SQ6`Bs/H^D^jD]3HtSCJZjKri.V`6J5bq=_Gc[ZQ]<L;5";6Tb4&'TCkrboQE3X7m3L7_
%S`k8p=ASnr@g$cZhW]5]=G(bi`4cTp%p[5uG>"Qt*cjV4<=fJ"GOA`B0pS8T\(L!+be(BKAAimPK+,CSid"#+Mu70k5XfWC,fKp?
%8fTt]YkeWecGDjk3Iu2<U;RhC>UR\M@31S1mLJ!gaVf;R==3Rp::LZO/.4Y$DjNm]@naI>+KuI>gY$`bW]dn9LW.Q0C)=Y`3g49E
%)$/CScEuo"HRIN9YnPb9:-?-:AY^D`1qUY=(7f#\=T%q^ZAWgX%MFh2>N*2hE0X9N[PQ#XV<!FjkZ8noC!;cOQSEU7\0mGFDQAd/
%UQb%Rq)A":EpO"fQ=B%0?%!U2/d/!JEK4=j.j3>]in/t$j$Q2?A[(%%B=i0M>.SsK3Hf,7ET[kmfO[A`X-.Pj5-s]Y3:%<"ljhdk
%k=i.=81t>jS7*4r?E`+V?\Hro(ut%9i!bdh)=&mh#m=ErC[AVlO'.td\Lre"eLW)UmVmJW-d:,Fgd\\e!uVk!9/O=&[eK(LifIq`
%jd1.">oN9e'KE?MSL3L4SQM5p6E><8m'qukZCKEhFa7aN31mjp[#@S1p?^"l[CAI\en/2aDjO%r9*oh=4jiQc$s!KKXY(\8l]'<W
%cJL!Q>m?E_IpfXp>1_R$Ut'$/NF`hdXY/Z%gg@9GqX.1mWq5N(Arb#p]9Qd@er!nal6>`D$7o];jhE/hnQi6-]ICKXB@RI*I>"rl
%Z=Etcp;Et(.He:Il;BlQA$!8kF/YKdZ0Kb*`4\75/d/7,G#hlS#d-CslI&2alCb5iKO>2t9'Q#B27dCs(99'9<kLMle\rY$WIhJA
%C;)Lc1TN,G42;QhXLajN%s>2C+u;JqF(3ZGF%T<X>ZI#]60sM/<tbq@aqh$1i>)\f3NFb98Qg-I-0&]Bj$F\J!$GQpji4;nhS>dm
%_ktq16/U+I<>X!j6ku7lQaslF3-Bf-@6!>dW=*T"B$Y*G=;bYT0N)2P?8thXUq2Y.qd1Z""VVP$#:J%jQA?]_'<*V;i8D:0W@e<1
%nsi[G!W^)5Uq5VV,"$sEl7,r"]Mg3.j`rEPfh$<R1!@j6F\rcF\&:j\FmjSE6#WR1bb;<&`^k5thc\2.P3RX!O5(+)V_3XK2<30q
%j9NhQEp?PQR*:Cc(K(m^3N"L!nKf$M/pe)>.DXrm77pHl5`AVXT9q`McD`l/-ViJD2,7G!cQJ",jTYdb@m>&",*PYUD)R=;!]d+F
%r4OoO]$Lb+""D\!R4pt`3A=6^\kL2>^>0*<=_j#P\J+6`Ve0-S/Ar[-6S1?ie&\K(X`6[5-H>]PWpelMch\*.<cK5([6a?kr$rc7
%';$n6`emrkRbCN^_<6K_$kDqDT.X7cO/P%2VDCY4#+SJUF3?>nq\CDZ%1)"C`UA\KU@[V95f;g(V[Fr;"O<o<JaIPP5$\L*m3lmO
%-YiM/(j28?,s]WkFb.)5WSj1A(Z2hCR6FbIabeAdX'$)#&q3;RQCUj=BSNHJpH$@RNGG9A#^%j%\OG/=;&<\^4\nOQ9(6C=V(O%s
%jddfBfjjHiYf^AYg`O^`SPg7:7`BOC?(.V6ar7*/WPf]p;pN]%N7E"4e=FIuWQV],:fHQ,jU:D=RT()4*F2.7$N["-P>mlCM"<Wh
%l;GhZjeTK1`n$)\<uG&6.`+!@0!Tq^d9TaX>H;M"8ZGGG#DF/aUq2KrZ_Z>IF]ft^]Uc=hEXM<hG>_^m4^eYPn"JniNDje*e6Ps^
%2o6mgb0=CC]$CfV+2J,B=-AiiA#%N'Wr+R(FCFC^;fa^"KT9i^imL7,MY5%[V-=[(5+-N)EWDVdF@Fj'GAE/I5^=J%ksW+%_m+R;
%M+8@'@GT7D^fsPH?%]DR3HS+LM:r61d)AI)b5%b?\ql?3OO"'@!1/>8_"_s_?:0^W;q$=:(l4FjI4g2DS@Zk7Mceob-[.0M#uEC!
%U<WoR*RuH2SVuA-.0a;-`G\^DT9s[k5qI)pR<&D:#MrqH*?`:BAi>)sVIX(1.r?nHj9\GoWnkH/3:N5WdTg17a;hAJ2@\4::77S$
%[q+ClEa`fQ3#b>Rb?b"*1tcn84.)(X7@'F+!Z*1b/qEDES@V`1!Wd&8c:kd1!Y"B_\VWBd`5Rq0&@P6rMC(7k`Q42g(HGYSU"Yl"
%.\++\ll<RhW;iA3QZ9I]-:9Cp!;)@sJm:],8>5(kYep_hN#oGH:@,oZ$R&qV7ZNCjL*fSO/peG!_bQ1q%&;q.\A`VEFCO%bX3jCq
%$`FIYpdU2M!!`_1dGi$9CuJ'FMm+`'D8qFeN7c0"E>tr$c\/f!dRRl\,p."\?6uMe`Ao&^33hEDTYl/IOl9d*#H,"Mi;uWk!f``X
%(XIofgmN-O%[c"Y:acC1M!U^XE"Uq/(=Qu:R86nQ9-t4NdN+i;E3&Bci"W\-=7$F+eT_d'"M!7Q,)s]o4,[U.r\h$U4.OuBZgj):
%q(:f5Of:/)gQEoBkG#[:2b2)Uq6nqq;bh^E%!['W]nJ-hIk=O8,jM=JZJLnCq[/iqDmRt.39`$=/oJ.2M*)K)EF[(\ns9',Q6tWD
%3)D;kN:7Ud!Vk"Th^sN%W0?WbCmeR;6Y*f'be8Zcfr^Ig37i"Vl$@HO>PsG)ZCU4qn)R<t'8^T?L7o7!&;Q@gDijs*p<L%YM.9cE
%n)natq`cJjJO%#JkCG(,,S14a'1bFqO_rcPO<mD[1[JKKp@GAnWk7Albn/&f-YFfM\U(4BlDc_uX,a_ZrY'A3,cN$tA9TcL/b5ru
%k,gCVRJ@E4%WO!5ZJ6%0iAs]]3o;hd,SS_t[eLk2(8KXDG;%,)E8(Aa(b[Mp[QloGH1R9>LEh9F26negpt?"X/L!sJF#:*QAo8`=
%g6-4jK.c8N=BfU6&1*<N$e(:e0\d:URks6a0:B6\do&i7/XA2\;&,gB/79Vk[.SQG<M1oj7HE'?[[9c#9T3SAE)=&?N+S!-P=)Li
%Cr)W,Y_KE!@AO[A.5iB'!X.a5aVJ;LE=&q)%6uO5]FHI'L;=#4[[:SJGW:S_#/`KX/OGf!E.VL+P=?CS#[?XH@0s/lf@<YDppI>O
%k?3YF`Oocq#c6,gnj+NmUD8#j."[JaCBND-%:..>BM>?S\JDFm8a<gn:d@Q$1i+aaU-*pg=pro2jIio"g3Flm@8Wll_e@sXZW9CB
%da0^a@B%`ph\,;80eHL<ck9Li42,+<Q!0(MW</_<U]]'8LDRb2W2?T_3bU+^(D&T=bZ\LW)6t$LZqM=C-*\6>4T[_T=Gq!8`4$Se
%QLon[YN'B&5XDVN>&C?S9nV!UpGAqGC1DD')lXT*9,RR9<(f=]_Nh0lg,Kk@M]&G/VLiVnr)j#"e6,gMC,=cCB%[IgRu]jU42CrL
%L0m<tU(P`##dq2Y=&;.6@%Qr@&l/l;3]9L'dioli`\Zub7io<J2)]<;8_$p1di+G#OL&XJhNAeE(03Og,M&5m''<q2>5Q!&V6rdF
%d\aSb)f7K-6mo)kBb<HG8fS`g1LEhd7\k1A=+Ra0BKTI-FS!T4BN%>te7c2pTd;9[@C0Fc_7"/6>-d:B[*GC?[I1;nBN'o;1%6_@
%H5NH#&1pGUb-,Bt>,KAa_pBTFc[`'V645SU.&KR>3V[r';J9dMo]lq>9S#B^TZshXP7_K9MK4\@9+,GR)1Ims=(,-L7hk-&<.iL8
%.*:,J=f,b^$pC*Ef2sEHB(V6Y+I]0A1"jU_ZhQZp'6VEfAYYkXln!t+#d?#J//!(J[ah%WH!+g@)/fZSVS4ctRHbF7M6gSF_9?H*
%=j0*%(f9(j'q;AdAhued)JqAkKu[T-9LarH$.c1%KcOkC\!/6dB,8TJbZ(ZPAmp69M`fqHP-bXMbdp_P&[Rlc23fkbWLLqQZM(]X
%pp,_='Rm1BAM[[7T;0E'Og<n[FP4StYLX&!&':fnQ=ZG*(/:H5;ltoEaKbr/,[h"F9t`;bf0qBk?C@uITK>rM]GOYWBTNAJ)H8Ul
%$aX?c-CuNNC8/"LW"N[b7KLXY9#5Kmdkm/&V`IV>JMpBKd:AAG@otld+H^8heQK1TDX#Z.P%@I=@^W`lR,5u:Ptk$JR/Bd>NH4a:
%Lks2(M:=IkLWIIRf\dUPn?9g9,KQ_d1p-jiiR('S]^]L2;/%]Ed1T9TKK9q@Jb5m;nUjM+NWKO(EpVF,OO>IuFDM(kh,(J'hIr!e
%E[Aaq)Osn3a.d7Agpt#qbi<6dfL[f0l%9@91MZ:@W3NGX`P;a1\]&$Z!Q&9H<KW+Z9RNu)PtOVB?YCcCgp=gc66k8:P?)GCA1#J7
%1/Z`?9GRVLSqsDGb)NT]F:^B?WD"N;s4m4Mc9mX$n0_i/H5-d>!4W%<KSkI!`iTQWg_1*K<&r,NXi?Vn4ZJa!L52cr>uc1CI[Wid
%@(UKf/@pt`IO7";JR_*.1pe-m'-8Y7_R`976T-`29%?SB\jX?P?p"eET2R1)/nqMo0-V#Y.$l*KQ0(>J7XhG<Ve@5OJGrq3bg7"!
%Ps\.=@rn.G93SBa5hj8NdDB9kR(tLZRj$>ik:A.mPo<#_*K_(u4du72=^>1LfYn4DOa):WC617RApX8N]=HS.@hu<s6kf5"?$7#f
%\U:13Fia,j82\SiL?=)FAZ[:Ks+@*-F>'WX'PVWg[@$.`646Jar&p5#,6u1uCF1@a@ocT%Znr_*P1[oE_6V=O`,aq7^fW"OA.fX7
%]bKr+"QJ\o)?q=>3d2T%'jj"J/<GJIhgd$-'?&ctCgguWAj_e#h@$/-LpQ4/K(0i"-\QJpc&,nb9Jc#(*;S==eY+_$I(WA5/6*W@
%Cr-$m1]=Q1ik$.ad&72d%>3Q+WP^4tWdkk$"_dEHNWC4W'@ZL:oa6O$i*gqbGS-V5B+hqL<l81@8g.l<'sR598ZHjIQ7-BCDlkCA
%O!r7hIn):^:"TmD,$RrO,9]4/%1p_ck*M=o/3V*(7l*_=JY3V9>dQ<lSeb4h(7-qOCMk\l-0C7V=tQp#$258M@aG/_/2EEFB<g>R
%UJrXq6&((@YZqE2*^(Y.+g!q92M2j)Akj>k+?C(-M<?E4Y:6+1j-cHj("l_A1_l2j4%aW#>f5acM^>aZ:UA3\_D:,l,%hK!)C[+S
%^a+Mu'QH]<Q":%'"4di#CImA)$ZR;O"\22"9_j'`^&0:!aiVq3P=n00:Z]^Mdca*k+AtRUQcM>fm^l!MBje2A@'Uh%9Goog5m?]+
%)tmGPWkhI>0A=q[_7``Qau'gccZ117kobDf,]mX]ZiK")$.399O3T,W2GcMeMh&Df^J`Q*bQCY=,'QID]m7?9Fu`]_299fq=iHXK
%-T&^cM5s6ke!*W%O=_ZN15%9(LB\)75u8H"eE*BiC&iUJQ//am32"!1;KX_Cat/oui^@<`@OfQ.#Ql2m!%C8S-e3>Nbm``na^rN]
%EYmAD8>Aa5d$ZJZgVf6A8JR*,#RO&/66K&mUEoRN]4U9"(eGi&4J-(A^D!_IaFZQOEF=cX8IRDAaD"e=dR5;P=kABs,D\aJjm<k^
%b'?jPK!7]eF@Nb><$rN&q5ad/l27N`d>0q9(0>q/&-u8!J-poKW`0GKBIPhC)$*;d/0L<-nkr'CE:QVmq>0[P!ua:m%`Mq;UrDN@
%%r"ro0<-BfE"\alUnf4Xa^Z=ke*27Kcto@G8<A,X/)hi&+F$'^G\/@+ZAML)d-D,gJ5X-J1XgZsiWgZj(+Y8CS?9o9V;YF,Q774b
%;@\\R`Ed8E0GcQYQuQY@#,8-p%+\.[,.l0ac;ejRC-\P^r!0S_[2;FG8oA=9W#Q.^cOPr2l@<R/^/XP6;H'9qk=I)]L/u:@()=Ra
%Y/u8f8(_Z=S\muY@oan>i.a46U1UJaO--'sBsj.lpj!X7$ad>[Ju9/'QR4=&&g<j:V?i^P]1S"n<,EeR9b):b4jf^T`7u(8Sr>37
%is:C$Mb$=t.#(!bgkNqj+^nTRPn9icO5S:t.t4nSOpSMAM:KOqi+ldQC2A%1To)>kdMYZ/$]ud($[PIQ@L^JskH)FQ+7PlL6H33'
%<OR.Jql#m7`4DD2pm0PF8jgn7QY;DTe-C09eRE$]Z+(-n<36i:;]Gk<Y+'Kl:"AE2/m>RR7fh0Jr%8p(r2Hb')^n?3-!)ZJ&!Sd[
%%e%LSOt>4Z5a`=?AJd%(i_jtkFTsV#b`diE`]g/t;%uF(A4_@H6p4jLVKOXU<i0"FAS7BTcS@Re-s=qTQV^^98PQjOGLb1-HT<fa
%<4W.1V3IanL/3l&07-\3]?j'ZL[f)R3\Nc@E5f+8<#J5AA1WC=k@N^[VBJtX/b-PSQd2tD0.f1HP\JjUTpMBFjP-.p<%B/[Q<su8
%^//:65Ta54l]u&KKPE[0DB1(tA]s()V\hb>(p`O4e/];rPX3t73Z7Z`:lHSo$tV2XP,a&5Z#.Hich5J5WJ^6N6UqH"@U,tlE8:0s
%h\Rkb!7ms#fo))D6`22T:O\BBjsDViQ&n=AEbMu.PTYu8'p47RAm[/Be._IN'c%BJ'6os&bOcHu,Qd,UB[S<k#LuOo\r9&cV-Hs_
%b8#h=clu=rg17'>Knsd6Kc/B.Mcd6>9T>]Y&Ho?^$fah+K$bm,Lbib@=@BE0P+8%VR4`kAZ,UtOObp6+$sUgJi^lu<)4]$bE%NIN
%l^"<O3E*m5L0cKL.*'-:*O27]5\c5&HB[j@NiJRG^4LF>d_]B/447<m=:itm(@i+5p8Kp]W=($]A.<s^n-%Zu=hHa1^eqtYh`r&W
%SeafR6]4U)!)rpYadIuEfA@I9k)oG,8P<"aHLUbTH!,gn$4&)H=3LpU[R>tpMWG`^mM\N9#4?,e,,$mUE^dLT.MaM=b)]dJ5^;W%
%gI#59Ht\qtZO*UP0Lpf^)OSI>aTgWM,o)kHC!&l34!L9LU5'KcP[#u">SUX[2-e3I#+Q%B$="Q-G`:h'OgJ2Pku)tBJ4q[`^__;V
%X5tZXK__3c'iIZGJDrP2L!eAKc4h!BI?eW2b7J_`%!:B^XXS>uJ1t"[JfN=&A5e"eS50qteP'KY0h`8\:knJWO<h\Im&RoGD[I.4
%o0os)`VtJ="[&P?NDr/R+m;bc&LBnB6liN;U'7_q=*dZ/*l`(d'(X=i%fIG8DH:JG_F@EU7]r.1#Y)nP%$AL)iPbTF6M!15c=d;t
%&LSQe]g.Bk_@U5PV_;s_oIX*9E9hCPk#LQ7A*G5E/s-q&r0]K1aD83W'B_HL%c4c=$cjn+).3p@6^<\M;c,W#0L(f!'7UO;H)[m6
%>5p%73*C'McJ?>QVpr74IG3)ZDc3%5.kQQNbS)@P\n2eQ.3YMpcp>AkkN/LO;!JMko#r=t"qYI($*(D_huj.-)NP8l[D7T9!VR#i
%m=BYL3W!b3(BZpuR(XWld$4T<>Xkke/9A8p,XbH7_Q5SdU,<P^#Z`C=_a*Qn80Ek%VP55c,Dlqm4TmSt!l&n(\TGK90>@`#[Xi\`
%,)1(<EWR(U$/5UFH;6P$+JI't#:+I0@_'b)0S(TEfafhl#GppeJ0A"(.&+;7A]^Et/G'V#_R8;E?m5X5QmK+,Kasg\ATcX%eq6<m
%(a^4uLe??/,-K=D1)_^OBL+fb#9$fG$a3.^Hl1%uJW?g?-F\p57M81I!Rhs`7r$m&?@;)q,Sfl)"'SXA9Oe:F7Vp/"!A9-?0@"#%
%1,jh.&j->L+&Prd&1=dm['VN.OpTqf(Zu$1:sM#aM$P.F+bV1kXIYK-*M?POenBde*A(a'7a2qV=J:9U#VIO9?QMc^1l/Lc%*o+%
%'.lo'j@0#P)_?Xn@)OYb1@iDb:9-O+$_2.B(T3F'Np"Z=H-W#F^8ht!&?u6;"\osuNF&:]AtpY0W?86O%nBZp8,#D"(dn#W4%5&\
%0.7.$nj(q$@ke_('.r]=H\fcre3IN\4radaF't#)$<)a@3g\qQLQRJFDGF'AlI;OA@Gjo)SO"eX$XCS7#HM\]_"`R$BY7R/X'M8&
%?\k+d7AM<3/JIo4(2iOG@Nmc=icXIpfSF$(r(')(SRo60=@8"t[d\Dp6i&H/L6;2HU@s-dBn='V;t3_=LbqPh$A+TG>GGc.GQL:B
%!4rpKEi9+QHR_(]DQak47u>g=dMA7I@[<j5;^r-TlR@Ar06N=19-FM*+#o]fH3c8t/EY'm[#R#^.O(d2ADj<sX*s%cO&?\NUP[4L
%Ksc[lKqp-0.aLF\Jj;VCFEbQ#L'L#GNJHFM^,&PD"-@;=[fW<%+cYi[@Y=hjMcd7(E@=<i$cbd!)o[`[jQ'fm3ScQaipT!`j97*0
%R&8RM<5(1iB'5orr*5dREYk-'bX1CtGmNQ:nm@bs!X;.E*Bt*[dMO6kjgt<K)6m-m=kTtM1Hmp..u=M`,k]oV(<2+"qi0g(67ee1
%"TcE,W4JG3&MUXRP`@:[_`foPTE](DpID_U,jF)Vll^J,2SWLV6WfKb:K@bPU!Qku9EGuGNs4>S&@J+0M4"0JW3.p_Zh,>nb.e[$
%3>Tldar-rXJWOQ-m'\IHUqrd.,aM-`GlgI3CE7VC;0#]>ZTW=*2aYuma>11:Ettu`-L[PK7f_:B^i:PV=H>iB,SoaTb,V,87"HtF
%0kMt?@SchG/gWcO1O3r@Cr(1hM6q6`_\M3.Y*i@o)+b5eHt'XI3=I,FQRu`OM@>V<EDG:Qql!2RM5,Vc%#@%I$'FM#U6%h78hOn<
%mn?)^cGE!#+Qe`Y-200;0%-eU5'a4KO./K>mm'Kr]#JTC-.LErR6]Xs99Q6SSC,u8W5aaiRDjM,0#H,JN($.W"i<&,T:reZ+[$0D
%$UNh._I.M[&;A(,%[6t%Uc=Wf+plCaF,7$L<[mgeJ-4J_=V1fH1&](:/aEE0lVd86e'?3:`SABod/eO;J-$*%%sH3"3?%Bj14bY[
%UBDWO_46&KaqA!'@B*<.;X$-m0;qiIZJcGARR\'raYC[j98n(&&^"4X6<I8BiGoH<'nYK)I1L#f`OnYMP%F<Z29t^&+PS*r,G=9;
%ktUNB/L_J?=I2>^D@7<:&P0s0'9;.S9Nhf%;_D8*,q=3F2M0"akf(IU4Td]OO]F;OTg?$sp&u7aLkpigTXuV7F@fc_I4Z#"-G!X\
%bfmrm9N+F`[la:Se%@fiK=&PY=?!3a,8"Tf@"\4aPD[51,8hRh_g3A^"'7T1XRo!F\L0A#8<\*oqT1"9OsYQ`gu?P;LZab-To_X3
%0<mj07m+$N^9(l`f`OQ@-(%b3V9(GA-$#kg2"QhS2_NI;!gG%:a-2hAb`&C,J7e5h;?T0Sblq2584OR]J;GXl<"Fs'eq,;sR`^W_
%$TjmrgV=?]DIb=KF+kebPo]Hu.5D0'iOa1`^]aHCN)qoa>#-PJ+b88A]Q9_nW-_a,52f>N!bK,3b?./uqrq9tUN[E,Z8lA7DP*#&
%]t"hSZ.LnP6lTbRGI=qb)%*3O,1+3T&p0(gO&2g?YZFo-:75*pL)E)#N\'"C(05ln3'eTfM_j!uO^`k#>Uh\[,7cd8M3=fF"\/iD
%L9PgL3@(I2G[G-BMTsq/Q;$b6WG)bqTQ^Zm7?4C5k48'%"eorY]r3d!,IRmTPj\rE,=BgLH9M^*Vt08pq[6R7I@u7oKlXe'8d$N"
%*4dU7fnR3q<c+K_(Nui5&]#/+k;Q0^V2[6r&9+#I!kG$Q-l)S>p]F^<p53Pt\.?SXjt`mtLmML>#,TNB,t;U'm%PZ)*[r.S1rJ*:
%eoWHjr/;dhBOSRsPbY8R=;*9r*JJ63@jQ&#SL9AXEb2UT'IIcYoi0&=B\&3D"0s6E`F9lZE&J7G%SUC]Cc9b-#9,_U&@=+t509&o
%jcapd>,lVZfgcZ_`0Sb($(SQVF8;*ACS#2FqoFTe;tIb$(@eG`MRCN%l0cu'4hc#;%#L'J@I6H$%9F?]d7$JYaCWCSeHB>Jc>Xk]
%jiJO>.kXmYXbm[I09[u>TYM)0KMol^Fo-AQP5?M)!2uQF<a-tKIlL=>\.>j*>KBXFJnbGG9H'l'ch]sGm07,(Lq^$0IAJsUYZ98F
%a\oMmLU'.@Ag@!^bL4:W-fbcip<m&c>V71n`U*@0s,`%FeELIHDFs5NBMk.MQ3Ba9\=CqoWe>;Q=2ttP`^5S)aA%F!>Uom6jQnj-
%O=E+l9.3Iq)X7ne-]r1hMTjPW@U^1P'ECM=!M2=%8Nq#1Rj%g)!gYKZ!)[Epin;K%1WM]m=ckFbCk8V-Qo>57M(q4G&!d(b:aQtt
%\E^qQce,`m_d=:X&B4(3SlVeI4KA[b?9oDp4c)J+$Y2n*=SnJIAstd&cXqT0j(kl%>fV\U_U/GMq\iQNWj+?1Is7oq7"-;4ek<qj
%UK9_QF"DJhR4eR,"BM1bP$jYK1iFPlMqq'+mN`?<4<URG&^d^iE"42QM,)6a+:N=>a3G58W?;o,%C)$4\JQ1&U6<"h"#l=I%&[GD
%)Q*QeM,uF08jjjZ\pY0VR2Q,<5YQT,$DK<\,VKC;1,\AQdg4p5,lsA<XqcMR*qu'7mq:`MdcO5H/[j$NJKPoojp.JI!]'*h9ZodL
%q'/iX(F+oBAqg0H9HoI-j^DJEjs9?LiaR<2PSfBO6mC&?Jm@Ab.ZikX\Tj6e8K*\lBbcB&Cud^u^XJP.`L8H5QVeZl&O\&HYX"Hc
%B\/)%dc;qL,ahO3T^86GQ>)$'QugVQ7rG9+#lARX,;q]c=PpJ<SYq%P^=odT]?Xm!.+`gQUe^Z[m5:/UTr""Y44l=AP0bPA.VjZl
%](I+9#J&V11Tqrd;a8;9Obfhr[`Wo"i(1:TjBT"5>\I,mZ:$M!67o\ukn"7`$S'.jT+&+q9(4-c4!T85Pc]Q17t")WA:rY8?%uU_
%2B@Ok79\Z*;9lnk_W9PC't?UW,(R37N,"3'Zg?.H'?TYq]Fb9.=a3rD'p0\I6fAVTb]3`''JiuX<HBY(+ia+7h8uE8OC^/FJ#^I'
%/[CeAJO\U-2[Q!BLLtG$;5=<52)nO0a93UV.&3V\>GeAl\F<i0)K!Y13H2Jt"FqXI1tC5)cb32/lHr[jMc-7!%`PV)<d"Oo&Fh]@
%Kgm\Pk#fMP`?,JK-V]&Km+"?'.9;7jd++7GL^@,p7UH?<]h4]WdD$UD+GpW'IpKEAPSIS=TnY@,On"?\V_JV(]1=.S>Z(!NN]#9P
%R8D8/!@=F_9UIH0iFHJ-V1)Ei8sH^jF<3g?d?%"R"A[p!\>CIj+`LAA:gX?NUH+>\\k[#9<=`ZC1c]n#YU`OkT/hJ0(8t\02_r9S
%;Vh>K;MilSI(^lE1MHs<qCe)jYs6XM_N;3*epn4!%J#W:%N`*DfUg/DGW<p@GU+2l=,AS$&h-bIWp,.?3J1%2TJ'JH%GCKHZpIb[
%N#Ysa6Fj[`Q&)2qWN]ri3A`t1':2_49\$_4`Ej`SZ</<()1G>7)<(Bdpd?WB9(PT<I/6'P'?#uX'"C]?P-gJ%Z5)do"UH%74S=c>
%,Q/\=@J$9>/\*0sSmUd9FLIR#`i$p5Op&!OM^?5r%mq/i6kaAKd`QA2c`3ih^6f/9JT1l@=W*P+5uf75id;KFlD,1:Xi<Q(ELLJ`
%%r@Vg7l#!]NH0[\il)g9WNn&<mBO=1^dXZc=]4D19X>aIY%66;Y/-"GUh8iT94L`YN3O)JVCg5SjdRO4$PGcKp8D3tcI@>PW?Q#Q
%KMV&b-DC5Qc$_-@lt`P$RFhOcPL7("T'%stgH6.WH5mW*9+0nf7Sm$D$#0+Y`?;O'c']h:jX0PpU27.^M:<n<i"QZDd9ne3d_uuH
%>#q0D;KF^:a-t1<Tpr#kEL@c18DL2WIerY6c-Zmn1tCA"X07@3.c;Gi01`)`Q"/&I3)L6X`t=$bE[S9s*#GYD*tmlP$#bbP,rQDk
%"0:`B80b%sq(h-\bb0C@?:pVG27'Ki[4*F4p!gbACEs["=IfRIHq?0c2%RiBAa<5Ge\o:'U>u&^.BMKbXk'm6Oj[]gEMPiNiLZh<
%j(fnUS[Q)CePm0[;R'uI[n9Ac.:c9u/f)0L1rT6Z,p*[gAr0k9a[1\tp=2/J5p@AkluGfL^uT4FPn#WM^*A;!)/,tgU<MBp=R*D&
%@uYIO5)e^sUbr_pE,Jl%WG0erUaS&&8``L:>JdHn'0k)(Q=usM!R"956;k@R;H&of-di1F:Sm=k$t4/q=CE%&QYD$I-)\C'P,@Qo
%G8Frc.2ZJKjNr^(>QYmbjD)1LKe7hl=EL/=>"mR]]`T#t$$C*:Bs@5+KGHt:B!/D[)PF>`p%0QZW?fKm-utFjBVb_@)_!r]1o+l^
%UUcPcU&Y]B694@!cX&u7qGgp;`JCmU!L(>_Htp`"p'ghU^_JU%E_Gn5iDd!I0$,S^AVp*$>1AhV8C'mm30b+`g`>D2LM.B8l?+OU
%"f.JpkD.pt<`5G<92h7CZD5H4lgS%%_@77%,?3oKqj]sGPE.KL\-:B,@YArsLuHr+.Md-!$+T)kKnp@@Us&p$RET$FGaZ/n6r.E]
%6%?m#EcJHP:oC)mGHg"#dR7>InpHi]O\*W@+\@SbPU2kT#nmG8##O?J9*5JGFiG$SAQZ5ZS^rV0Q^`mYm=HoH@o6-D]3uB\;AdZ#
%e$:'f80iWhSm3&581ZE?A?9@RZ,2WgL]C%.?GJ7GX3NS5WL0s_8Cni[+XFA3,S5qHSJstG)?4&UD'@%oj@.ZT1d*K:;^ABO+D9H.
%dB5Kj`Qo1$[O$PKE_1Fue!KL90Qo)>81G8tU-p4)&i'_*0'&17R5!>FP,IAm>Nq"Sp!(Qe^oBXL14!tKR`=njbG6\<+^$9JLA#Gj
%jA@I;C;?JcZnR4L,&b"%+t&'WEFQ0cWL26#4/I?-Z;Eko[5oCqCc8MZODMD?KS+U/&^`\`Y74j7`ClHL)Oe!'"&1$s;p99rZqs/G
%k*-&ckZ2_6+U;V*7QS-.P33IS_-J,lg^>=re%:0'S5ZT\VKAZmr?*1AcjrV:NaZ@>l49X7.HnSI^^)keZ21IBj=/<cTdE'8H;K(<
%AMCTN?)at9Ts)95-uQgc.TjP##uQLN_(=(CF_HeHnqt1a65`+HNhj9S@Msd)4AoX\+T"aOBdR"JANu23e@[L/EHUOq(W-G&HQ`PL
%W?m=n1ZskYRuD9\B]7MefBd;N%tgCh8FMRWPd.tIo9X_2!TT6I<+BON)l\miAmDLX9L32g@oNJ*YaOqf@>3&`n/??"S^8QhC9Y*#
%gb5V'=#+$GPQ2>VIJGr@)Jmii-o$:_?Q%o4c.[$oJt%9VN<:]l2sQAV7V@[O61>fuD_7e?dE=&b%-`nIh,&n;AP8,A/Q`O+c&(SW
%,<j1E-*fk7jT5&4_eUI?1D)*9-50Z?8m/8E(7M]d/H@/W)/^OpY7nb9N1`EXh^Pg](.Vu9$\YQ(X$i+!r7Ec`&sYP+h*4<V-eqkJ
%C.mhFj7]>1+CZha%&,ZEf75;h#n^fW*gfQr$$QPenY?_)Bnkb-`C&aF\dh(]UCp_I.+]0j>`paRG*I!`4i9MbVCm+V=Y'0`;mA="
%d)p#i.15Juq'&P\jqn.kZ69WJMC=4QdV7X:[K>K8BWV3O5b6qDCp$1HKo&qRS>/b`PUruZe21EeSKuXd][]\#B(1(mAUOeZ`Bf.[
%q3dTq8HD-BY,&BnM$Ag02F*Z_((kR#nViW@K3E7<U&D736!:IFVGD`IdRnh?3:)$"@11/Q8^o[m=e7NU3Z\^IU5)qI%[s.l9Y"Uu
%pH>cUZ4Eiq,1l`bVPD5=n86ULMbDF2K,/K@,%%lu:dRbr1(ZaFqPhI4N+=U!hEn%2i>'M#<eNF%)sLE-oW4K.M&;..72.&\KM<4`
%1(9OL9-HMRb@-QJ!<KP]iWLjGi?/o:Zo_6%'L8k,VulJu"L2BD11Ah>rf-A5;d_\OQ^o&]-;\&'1@n$VMId%R`sWE3g1;N)3q.Ek
%QDIC++e3'%B(5Hi7kR)AY=-C2pelMHT0PpT!Cj0CW%fpK%h3<"1C*thA.IS-J`OEU<9,"ER"o]GLU99+1Hg+2M56PTH?Udf[!e[3
%4iuDi5p>,$q^$TeP5'`L8r+'[-nA2:1LhP@<KD`hU+_7*3c"n<pIKslqS_STQ=,kDgt>R#Kqk%>+,E1?j;O1('q*`:<LsV'.Po1J
%CH+<!A4DfopOR"/P0f0>*ND%c`l^,.4H%8o1EHpscrUTUK!-WrZ6:@B3N=6^4@q"IQ3-#.Zn4eJH*RgqOr52(apcZ+SkAo$A++[H
%B"\63^ebhXkJs8SPbhbE<sR!a+3?bsQLPnh2<h`7G9T3ZLAU4.%5_UG)5*[bV;t!<%!mI)=O,@uab8cuP,O7qUb/4f+OQ8qVK#&q
%Yf+A46Z\#7G/Q'k99,JR3"g@UZ@unY,SdYE*fAZ][$#`=o-)PfPq3ik:m]7J0?E=.%\YQ+.[J#AbJfLs&n/W-<,R0V8Qp7h^su%7
%$dDhKT/I-+\6W\]nmb`>9'f6-BVtF>Au>K]Od_G1j%?JRToQ+*`,=3c/6XbO,bAmR1'9=l6%Yeib@%+S(HE0V/kHjR2'0o,<#Rq_
%WOc_>1Q`U0glYL4`j/epUahZGc/hE38NIM`=U+NF<5Baa"39Ik<%ccTbS*dK,L>L8j,d9F$Kj#2eB_9sbYoZ.$8"\0d0'XJbFPnp
%[8uK[5VoYW0["3`\/]oK7Eo,a.gMM6f`Q,e*$<Ik8Zj@F98kn$I;Nu721_t$CrjXhrD<6W89k6ST*:P3B`:[Q5RPho$#mF#[tg3C
%R)UI7ZK)K\r@7P!Ct,-G8t'RdlIP@!RO/tB[[AW`-*ARA99fm"248:CneFCr+kt2H:c;0Db)qRCLXIDr&F'al$d1rNB`p5FZLDIl
%L`sDD4B(8%oe'/qiX!=4`bR-)@s%I3gFtFb!b&9g6PiU5Z'P8r>Q?S&R99tZ[M7t69[7apB(S6/J4,1oP\SjdW'dqVEGH>7_B_EC
%;VB#X*uNDnJ3*34<#1<R<Kf_KfrT9'F2B*3Nq[!Z6F[>eeE:!4FX1o>h,$5!/n#Rh1aH9"\1F'a$6VUB::-6b%PV6<2ken)1/_]j
%-d*78V_6DrU;l.1&d&1;=X:i5Opd8DjJb2."]pJjRP(IoT&`<0OH]`B(6?Wn$8<gDs"Ke=n"_*DWPu]W^%0YoOCj*n(rfD#g_85V
%H!j'Ha?A@qd#jM5QHh1I6\XrZQ;T8"5u[4:\O#ZBc5"6oG%:uI-_0&4^@3jR_9,_G`d#J#R46G'B-BQp>#bPuA9`lLV'G;c1W:fp
%8.!lLgKWdd`:E[cV,(\I98KW.&@\uJ"0=qfbtNL"AOh%\@WCnU;>#.:&j>HI3F_E)#\.LP)$3>X#A-Hkab-TXh>lnY%Q3Q%d=+8G
%OOuft6XCS/6No*Y\=RA(#sHI[Kg4LiW?,7>&P0l62'l0d@_T/6@&kUf"p(jMIE9rK,r:l=D)$5Ao#ae[i1Eo8bQGi(&:<khq:mB7
%)%6*%e>F<IQRs@>Cj;8(AA;PSe6%9,%&\KKo^AMCH"R`nKd/+l3"q>C9ZTgCM]`R6><.cm--e=_UMtcQn/TAUG&nOmbQh[5Q;9W7
%YE:oW\gmBI^8;1s.Tl1:`WG6qD.&!PXLTMgglW4I!<5NW9D0VU93<WIo?EZ.`KS>6`UV-W33Y>UZ>_))+;h!^@hJ'DQ>4@86(Afj
%(,Oi.<>@,f7?SOAbfjO>.s%ML11rji%NYfioZ8COJts"P$U%Yc)!r>G_(Kp[V#`D/#b3KBF.t.NbIt<IAa]*b\[fa*:N8k7q?35Q
%9juG8'\B'Hou0\E[!$W2BBtCk;M;'oeT]FW>u=KGgq&NuIcs^\n4Fjq8IgSF+-c#-b_Dcr(W"=e^`bj\qP=>Gn3EZNUpZ/6XCMNk
%7YE(MhK%&;1d4?kkh4!*Aj@opjr.u,PunWckH;=JZ6cG\k`j?+7--2c5[F"%(.7b)Qi@h6AM=d+4nOmNK9ZQc]N'W`=Aqq.*qo1t
%W0lQb,"9X>bnCk1,SaMtMNk/Q3Ut9[M<&'N>sjF\JMNhL7r!a3;P)2$hVp<[6R;a7`C-3sj=Y?JN6[>-q5d7TnJ+tq.OpaL=N^[I
%XI#=^84M790G_3l,c[G`!-js^!'h?a]Qr$e#q-)t[?*u\VB5"oIF7US`1@Sp;Z4ODNUUNKKNeY[/D;4W=.l`PeO3Ca5"nRZ9-7F&
%RrQeNa$I2qME1q^#!"m_5<CHc0W3CXUC_P"d:lIW1!mgCh87/s#P()T,bp@0,`n?q4.o&.7hR?$^_D<:FibX'*"!h31"GdV5q^Gf
%7mAAbLXLe9nE7@me_'%IcBio!)?FjS<2C1)?%Q=%phJUUa><7`@aAJ4U:\:@kHP3netM8-T#`Y4=gC;@Y7(kt1pX8Z4>0nRGTLQ&
%<l[9,.$A,$)X\R^W@/Ih3Hsp?'HPQ:c6Ed<W3ae6"Uu`PRu9jK&Re-iO)9ZTK$Fti.jT!iYT(j7@Et8W&IFWR&Im`!Ze,_-NYHOe
%]uE$EfL6WP+O4KAVK.?2eDUcl(BNXV6:pOFn]b4;:Eeq\f>^sFXG!(`)NIp4RhNXTLF(XoFtP5^W+9rtPH!DK$1t't3_W/K3HO`/
%@7\FNP$-:='l&c?8"k[IEA%MffLmO^M)IK_l3+!9M!!Lj'B,GpB[1Ec"iulOBN^UCS@R_`3hA@Jcn,JYkHDG/U(XknA34d-/';+Y
%fRhg"aZPQ91K3>$VeV'.)"U'SU+=Mdb]Blm=biA3lX2kMA!lFWDUJgQ\M#FF*FR/X+?>7P):$JUB_:k#McSHgj]S<Q@q1jX[ZQZU
%Y3>F5(Y2`[>b5S+455>0R>i!eOubnH1+S.dR^,D;B46on,,L!<%r\Vt`t_j>(3-V/^u[c!E8MjO=l%"'"W=h?/J9V(eaRmAlIH.l
%LK<hG?o2,&d%BM<X^TD8"\CYF@EVN&7J[n1S4-7fkc8^HV)aap@.>4^^1K@#M?<E,-a^lF7rp.O"3N3.JXAh=5P7:HcdoVf\\e._
%[bN?))7:I+.^?".-+"Y]8ZjBBg:C9UF2[W3ZhV-^YT0cebo3c*7[#Y7=q4VoqhZV`Z-<2:20#l/.B>R,Q2GCUfQjLrNuFu;$8e;I
%"tIr.8LQJj3O50?Qs)i!'.r&%)!,`iigrN%`tdfK\Y-n[DQ85-5YcQDj-.LrAQl!qa(bc72L1fArmfBVBQ2RDra>MT(u&q9EiU3r
%>]L$db*Q++alspVi2&c^'6E=TP<;T_G1D]8n4STa9V!sFA9/h$G>DR/Y;IAHA>sO&,EFsF/(M]BUl<<^_G\7l,=NP3(jTZf>fIsX
%6Q2l)3f:R4S!(kWS5//r@o+u1KErWtJB4E1Af<Hqm/mhnadQ*93@$\<b\J'd+=U6g80JMRd>:7>!C;p$@qia/W-&@M6HH;baH7f;
%L"$[p5g[Hl)^g1VJcP0R2#oX^1S._>a^p;\$./2%ENJ$=)LWSt'D]BI+34'<lSYIt.mNkDjDj0[WeBraOQFJ&\*CnSlo<cbic/#a
%Ga+\'?D6Cu&CS-n@u^Y,c?X)RESOQqQq_@XfZY7Q*;K>+:<"POr,*t!F@W)l3!NC8G\#b9`YumB\X+.J]POO0`gJV$q'B`;p,&&j
%5i]-2daU8:Yn]#Mc?O0i1klm/[<c;A1<us;BqlOe)Q!4jPVJ1.iZ,*F`c4q)G"*;RWe4IR"rNCG0n.^Cib4Qp;u,EdOF9Rfi`MZe
%)H<JiPP7E9ZGOQm$;.)&_8S]eOsI4\>9"\p=kONA*lT%kCLhF4jE)Kp^u>cCn\eq\,`bKU+q?+Eg0S$ZMBc/paqTmfLqo,3Tjd)!
%7.JX`@14QEHFB!kWB>/9\CDFQ&gn_C)98*(KTIG/*?@d8aMfu9,Dh3J[7W8>jc5E48'+l-br?+H[Tpe-K/b"IH_lN'/cjMTi#i7"
%H)o4%:Xg+lN?7cB5TgoD?,P?q74ftlEGB`<8J"ZKa&2WjT"5O"pi+L;/a;5cHH7'g*34Q'9X;Q!5qJ>cE,WH#%Ykb\:LM)F:SK8F
%_hLZ4oIH=3Or#$nCUqFncY3?=>9u)\'-LG7%+!J9;^[=_lC9\?345@k(QMkObb*PU!tBL!Y]+anK*j+K`CCXj?=APg=jWkZ'1onk
%8`?hG"q#RV`X0uAe7%ufRO%j=ClmD1e`uJ3WBBPbiFP@[&agQs&0A@B=9F62[&if6OTH,Y+t\%YW*68UATVmPek\N!TS)8E6(DPA
%#8c;c'U3i]I,Z^-?,qSEKP-$JM$KZJ(GJJZOq/&Z6^fI4]j/T#V^)[10Kck.3#ir$0][Hf%M"2`rXr^nk7hmqQEe924Cqr:!Y#Y8
%JN*WUK6t7EUp1^I@ZbnBgnGkSaP[W'U+A+E7Bp'+6"<2^LB\RB6/n8(1,on=6)H3Li-8SB`a=&_8MIZgNWfq-len`"@3A\l%LS68
%9Z!L'9Q1-F,[*i.(3IJ$.]c&/cshteWWBpBM+ohD<.`pP]?g#_dD-$R)@da"$Y'dZO=PihJjeW-,j73g$X&Gm%Uh-?)CWPT0X3g*
%nM3\!I,6\neNr,reMuImi*Zbt@DM]/r+LZ`:5DT2Q4WO^o<TD=*'ItLXs(U.b*QT@E(!EFBiY;N0`[33.C28o#VK4Krsj)n90;o-
%_t5@0<nQ;lKbYL%)[Rb=SdaflF;(E.C>a"Y-rsE7Xbir<:IE:9L)T`sCfT\CS85Wj0u"5iih``:Kh7tl<T^d?AP//Lq9>9k-8ZY4
%Rh:]T%B(Jcna4c3i/lj[-fAWq&d*WP-DW-]S#q,CgF[J0a;sd)B<lEF:&r$`fgoVO*19>4(^5B[pIrEO?3Qsn9!#,sINu:">au#r
%Q=-_3P5%b)##fH"pru'$g+SH\9n3lTr&*ImRt^gB`,EAf1l4lb2a_KH$EPDc).jP;R6uEZ_M3dt6[lA"YE\Yd`",EC1eeq[Ro-\%
%*'*(=,)?@J=[RWoN*dFIMZ!0>A7fS1,/5iu"]\epIPZA@[TGnGUP1N2a8?\kQ.!r.<@*'mZfR;+Ln567VBN\l#u*L*%Je7&3LXst
%q9@>91ug(VRgknZ2<;4LfHhj6Rgma?*:Xt"bc.Zg^G.9JEZ=Qg&a<b62rlp8WPgGp7=MRTZ[GkJ;Q!Ykr03*:L7ohmXK]kXJ6@oP
%@KV)BYse+ChDYcr8r:n%mlQR^motA#m$3mHDk)R+eJdg:cg1fcm$m-"g6`?CNKGo<XUb4t?BglNanj;2-(l1ARuClL8TLJBfNk=[
%VK0B_T-NUXMYUl":*:nNP4FU$n5:i;+l?rEN2eYIEEo:Vn.P7#MkFU'/)csu7n-r)iL:#4l-?@B^,bPq'5*3t`&oUejp9j8%o/k+
%<<mp7RKDjNhCRZhrYEp0=^bXhgEkVoNM5KbPO4A$M"+WphCLeX$'<Z!]m[mtpklMAl9g<,270jZ1KllH7!f<'0@WV&XF`ra74or$
%?jl`C>kMlKD_u7T\?`g$JeC;fp1AqS_+V3qS!g3dCi<W(b)GBj)4h>G4DWL#hCrh'[a;:mRF36mn<X$)1iRn-27PRY8JnLFE,R"6
%#X$AihL%qYLK]CYqZ78K>7U)Gb3lY3)r-oC*M1]'9"6gDCE+-1E,W23\7BPs[R_"U.bpLj[M!&GFDhq[MDa^!U.@Q,82SAm`-Y/<
%/NNT`pLZpiTFC:K]h0crfC7X]J#"Kiik<MH?,M#a,r/#8M>'KG#UbN(AciL8LA,;<PTd*e]kQY>m]=jMV2U<:0F8m/`[`Ze28D.N
%.u(DJiS,`[=c44)LBfCtB;cHWV4$5H'#&WHan$7a2]AJu7ud#_W]1Ek0Z(:I&'FecKfVn#,(<,YQ:/#\!X(=$CC4&_0Z5nmSP5FX
%-/tBpku&]j&`8OMQ]FNHhe\FYU!!.B1Lih3nL^^@J[,t6e__&J;.Y,J,(Q1[P]DR3\Q0LhinFY3f+Ho)+^#B3&Dq_M&fk\BDm>9q
%'#&'&OYgT;I+('l*RGY\@P14dLZ00.ITaBS);f1Ga\'Q3/MrmS:s,gS,8HWl(uH#F`SGE80/h_jLi4[R')Q-s:F7#PVCW>:7-")H
%R_(t8e%RAe4;@=F)+U!J&\e4rC+`Qohb5>+FH@*K=[#a#S!<D:nNZN<$,X1?+rQ@//M/:+qk2eBd4):PH^<^MptkL/dW]ALDkA-a
%:U!_@%0FgGl<]J=c";\o/)M:IO9g18I%s-)n8!Pm1eYcqo"E^!hFRlu9+*n#<PUPraZ="QpP+Hf%LBt!_jtH``=hW6LF=seN:3;b
%)Sp.;DQJ6JKe)EEBk[KSD,%*:[B[CYUtMg)[mYS<ePl)upDl'rdR_42L_nCU10/,m/A]JBEi"(0QB#b:P"7`L25YSl7F`F,48%-4
%AtX$@D!)"%"*tW9SO[6AMlt)5#Z$u"CT,Xnb>s=BB=d=h7Q9g>P0d5uH)Iq$i*Efg\3c5:m2B^^n$5qQhJ&]m[>+2UTn@<t)TCHN
%bmiYA,<*;5`pcHMe2FBP]Q'HM\7q,K/BZ$6hO19_^W,_;Xlc)2])g!8lB7%n"q3u2TiHCtM9Tf6UP6]2S;l?qqLZ8ZP.T,-CB,GR
%95'-g(Hhr$,.).<maO&]Z;S;5Xbu55h.U3]ClR,=W5.D[h6=.>6cG/CWI;`#A@J>f)6k,g4M%L$fF<qC".D<E1g<=]AXia\'3M<`
%\r-an8(MA0M(a<kATboWbA[PNFj$GSU#qE#$onE4_Z_\.g6C'WWhs"@FL.?Z*gMuX6khT#kY;P;>!mE'Y+cQUNT\M:+N8E^pJ;%Q
%\8m\HPRPj.(^JaHgm-?QAF@B@Zj,Yfc$a.;DRVIPYhYmR9$4J<\ZlkF<<RMXAMn6smOZc$He0iN#/:b\&Vh2RB\NQuM&sp9P/iQ:
%6m!^pgmLUAe8X32&\sCGNV!^l#7\Z^l8YiS<`.X4Xla%`ieGHI\!quZh=!32GM/u5DX_\J<]*h/Z;C@R2$eDD9IaOk6QMGG^_kij
%"8T@Y@EIFsZRA%McsrFS3N(0W&)Bk2g1;jLKOPMoAdE:]Us,A`"ulGKe#tI8Z,b#D@1;Qd,0%G!gsCg91MZjT@Yht13;b]'MU0rE
%gVb7G7a!D?BHUl,jMp((%j=l9\Q#6oXeL0%^Wi+f";0a6F)o3Vpm(ns?fNm,r,%`7[8D`_*KhQ^3!F7CPaIc,2"`R(gpB2,/li'n
%Z^DsR#2g8LA/LQHD&O=h/4^Ml9iDl2RLI#lQ`Se8"?0/FS1ZZ#2kGSr?lFU.e;K=%/RNfNgMFh1bdtV?F,>5sYVan_)+G8S>iN>'
%<'WC&^l8PTBJ9KHdqkkf8!UlLO\0;X&\'P)Kp-'RD?tk-$WghWQ\)Cq\2dnJRRCg,7!tfi6n9/1Q"FTHZPGCr%E@<qMZgK=(u/Y7
%0Lj2%gcjud8g'41o`u/lZ;Y7P@g["aLbcIX==C/cb2C9dQ5&a*K,Zgt`2OW+)nBa9^t6Ns>cU!;!Sds>ZcW<u(*J*J8MU3&-4KR:
%)Ln62,Hg1Khko@'kRP1]YU.k2fh1fPS$c-N6W/1bk*?s9RhlMZaJd$qdi-AN/AlDdc-su%nCr5#W:UFF)d,Tra&_tYQAX\gf\=V*
%iltQPgSb6#-uUDM,6X74!s<J>Q5!K^DPr=DSVGrq/`YTagSoTn<U)J!UKeDc['ZV9,<"U@.#&EIC;fKr2BIVT\'n<_aVD8o5T=Q)
%("tQ\#'&`_g,@tTLeU^uG+o2d3bo[j1n*M7[@MtSI7Z`ZA?)Jh7:(#C=nKiM*]Jk/o5H`/ANL4#GYf-\SQO=IjeO\;;0`pN*5t/e
%:LFh^@N.$9N+Oo`2Va#aZja/Jnf>^#)IFFY6t38-Y720J/T+&0N\!i4#1l>?<uP7%+T`BQO>O=&M&*W*W`gf-Js47k0X*H.^]e/g
%eHYi;_,*"j2R8T:_,..T*,@KcC.#78!bRFkNE5<t`mdJZ<NI$R.c?-&&q"7*WJs&oo`gAR*ClQN>WGPWIqq/`WcOtE-l'cO*QHPt
%p^;<;)GV6Hi:W&+*G8sZGj[E01D:=G'rE"LqW/Sf41<DY:tiFS:sk]-CE@g4F)$Z0NK#Ei`2CVC(,r4$Zm#1%2*i\F\2uuo-q#"O
%=dbo6);;VMHH+=W@k6!+#jj`OB6KQ5N=]eq3`^cST'59qT.M`kCWOZ^B.<5EnEaC#&<<<@#.n&qcDHANMM7b1bm37Lfa(:s9;Mj<
%c;H0]U"o"i!2tXscHYibV.RWc,?$"1:&mX?=I:u]-q=-dW7bu&1q\S4q;`<,\=cHaOV2,<e8-u)Ua?p9RoD#2+VM!;MVlpVfp*4#
%1`J#uatdY=mqVu4*L\R[;kB?&CjNl76#4h`!CCHf>c$ceUddhP)DmpiBC:$Lbs!OpQ=e#F%*d)*"Bh:`S``>@E6)j7#FHE?`,*L4
%^*9r-paGoikdE6Q2B!j9>B/=UNaB"0/XqU8;9?u+NH]4BCb]0qf\&='&TPr-@I".L-]u_Eb-!_nWhaG\(C]+R;Do7O`YTI@Rg)ke
%[k2=G[&OHr>X@&U3@UnoQM+6g%8It5-qp'!8SjKYVpt9@!_p5)EjD+O,$AR$al^rKAsk(qgU5Njff2mN0uh>TB?L&[Nfso$/<Y+G
%.OQ1[;BjgSfk=fEZ3+Z:FQ]-nJ[-`V"k&Ig8g#c4k>*ebm(bP]_drAqBY$)q[dQi9(ab^Y0O0dAQu'3#>&QcqG%d!Y9eb7*&"/)L
%_dl[q%5]FU'RdodFE`M^7Z1ege1fS*W+B%-9X`9K^egbjjYj??0N4a$aek*C=E!516SE'6Md`p1d2YUhQu![O#XC+<2K^RM%&0,*
%!pUth@BJ2X!t,5j9JuooRJ,Yk%ZJ8*_dkRiL%[IEA@!FY-oS2\4AoSC<D5:jW;7DHPDuLU.HY3/D"Njf<l8G]H(!;#5hBeS2Yu3Z
%=LhUZC638+ba;Dk3l\Ge',W#7g8@W>)C:jWD.5JaOq#6,A.kYJ_]BtU[MgGr85`So;R.1T.%d;5ZJ!*JJJoh=@R?9[Ugsj>N0G*S
%AFiX>260W\BpUbnHHpJY?aV2TA5aK`&:Bb+/V0R?<`64`!__c(,ocP4+c95BfkAoO$7)*Q1q>Q!A@%!0VA^^!bsGc:82g@e"&VTI
%:[W!-OV3gOm7>S_L*-qHAb7Ds]54E3Z7F0,ai5XFEb"HOg7fk&TF/eq_C>&KlPQR@ArQ)^To-p7X[^C/:+1)b9#u0s[nb#A8"?@Z
%,@luU^n:lVACH`V[8P/_:H%Ac50>nd=!lHL+_9%DBtq6T+UQ0?Q_MFC=M9+eaCZNoc8@kq6s=5P8]Xr=8QHJ0B`lO*!SJa!H@aVA
%nC9<`Jqa<3q(Z'_6+*4[UuI43ZI+hg)S7-1g,K`0Wt*4Jc&(Kc"(\`,Fu]S6ZU*RnWe>3&"a\T+O\Ho[KC')0%C:Xs\CM5EUl&jm
%%\eak+I>WA8L7nW"dIGZ2*s3r:BISX_0#c&OuWH+OA.N)kQ_cWCc%@EmL\&fiO^j72Hq#/=^u"6N/So87Q.A'P)#X`:c5)KcH)k"
%*,*S.27tBpa?d,r^kbpi^YtJ'f5-ObDLd!FQ&ofG35k%3.G8C#3G4RmZq,G.;6nl1@9YT]2OjNbN05d.__`ekfo1TKat;015=TlQ
%n_>PGLbn$_j!`UQ%8d,.;6jm_-`"O+g!"DI'W&XL+`jmc?(I-Qe]Y/'jq]^]fMpI!6Y)OcMZ6"c,bYi"+T$[=n.Clp5'\e6JTb!O
%69]%sjm^oIh-hZ!>Nj^retT4_YnKRe3];/Uk%TUjcBNHK-Y$e(IWTsQ:$jUUfU5IM)AkQ2Z*/J@OGk1p44C:"3YWOtEt$`"-8t$[
%*#K;-&MCGLf8/(6-[%ak`1:nQ1Wjg4)8\6P2B"B*A4q')6s)q`_ko@C%jtK3JS#?O(,d(5B['B+9HI"THqC+Y@iROkTWh8o--cD2
%4m&V4=$bJ0e0)oc37rt]EZ"/i$Am@_fEh;I7G8m:%"+)@P(='Q<F,o<LU"slb.eFge?e,;l/km1Ce;BrK3Z'"$GT(,6`cAcRLV[g
%T@D6>BI"YHaOd,>.iS1$Xta$mlJ-/c!Eh-hDSkm_L^-m,'9[3cFC'Z-7u#_Sju"`GH!2Dq&XbuSFcCVTrt34m"(!3Y-;bM.JP_2X
%s4),@M.`&FV-W+@)WM9MNAK&Y=(>OV)KY(<f<LTW2:?WK)d/_RNG=:3d3.Zl&N=eo.d%_1nPoKom^^ir4SbkI7]4DD1<+GT81o@N
%E"1>PYa@4o4/jFF*8_ZiYn0Y>D[f@"GVk\'%2"1sI=k`K7Sn,NWbcGZ376Ll12Rn''8mHpAhZVCd%4MF>>+Bhe8ef07Q%-6M9aaA
%n/leOF^g&4N+q[H!J[sV'J<92>-iA^c_`tn19"K'etFDrf5]B(YrdqW%CS%*Sd)N]_\15[=Oq$7:uN"L6#:-&N+<r5!,`6VNRj1J
%C?8P2B1)>^1"NiQX,tgberf*e3/TT33[lMX:/SUQF&CddL,Br!oN*!K)S@2AG=JeH2--XcYRXs@8**es.7I@:MQ\@):(bu%^"VG:
%$sjsO[Pt4E&.KoNf$Ms;Jf<:]>mHla`hsccg;2NZghLBO8IhUE,_^g;>!f>$i"K&SG.#JW>/6)"%7bE>h5'[Q,.Q,@YW><#J\glV
%dD,eiJu]B_XD3_q>mLPV\1D(=O^^D3<?6.WQ))G5<QtR`er%]bRg4"bNDtlD*[km:"BEK5qt$O;eIq1^atH@AeZ`5&$Fh];eN&&a
%I`k$W,HVjP(tGTra%dbWM_-g<O?Gm/qmpnhTisfrl[7uVMO:h]>E_lM_-#/fQ]]Ckc9nL<"3oig&i!-@Ff*<S_5Y[95Co\tTXBqV
%SQ[lX"]GY,0tGT+:*d*?`):B(V5$r;pE7#9'dtp[/s`LD2-StCN_#0*i@?=O"B$I%/lsY0H.85:WlN1N_^/0%U67tdWe=q;lG+YK
%@o5%]?^G5WU.4QX,&*tiWh:&GH9)Nn1@Gp3?,]WUe@JMUA(hq#&jf=+N(LZ>#dm(3UgXS'L7Pd"oobJ)c0/-Q>$SQQK3t`*1FCH]
%7@H-T(O/bks6uHXf&kKSEhcH$R8tjr#dltX*.p9^/4d:.TS?;f<&,l`EH"8^KOb'tdS(j%E-VJ7LIh7*aO*D/Jnt#C3)I(nPs$-l
%pk,<=i<*[#X-'==1mM2;.X4"7Q&qg8HA'(3*`AXf8m@dOd:&q/hq[):8?QlqQI+mO(SaBh3K7&dM\pIq\#M#LS-F=A4-\0Amd&G>
%\7qb8M1JL8i=C#>emQs0VA6S"2=83%7Z[i6K/./#1nAqBs&^egT]m7LcEqAc@A^0W;5R:Jl5_u*!QnB=CQN8K'oS2F>;KV`Z@\Gr
%J#s?\XjmHLaiD]%OtW@EVPT$67^0;IQ]s+n`p-5V\hk<\,p??#=fX&kD!BGYWXL/D`p-R+Oeoni1+"k*HY0Z+N%9mkaAJ-A<]Z.=
%$ob7E)o;q_RMKso!\0`Y2+s@cR?iaeUpS[OY5tI#`Y?J(ntZk/9$aEpU_-AE-X!394%>XSUkum_:JP'@R=;\hPVb/(I)WX"18347
%23Kd7!k$[I+DJ8nZSIOtpfWQ!;2fT<Wm"S?8E\N<RLjBClq[Kl,0_[W?ihJ\-5p`77Z^)aJY]4m5ap$Mb9m#3R?;Cs+.]HEk314:
%SKptA!fpAq\3idHT(8Z[8*?S!,M0KRq#6XEB\;P(;LscF>rb^&N6]X7Crkg6h.)HUD(@so(l^4U@8\U/)T9'0X^IgN8/Kqt/ik_-
%ZaIZF:@l'5U)@4.72)b9poll_BFXP>IeT*USOoK1k*T49d;Y+KU:IKW4`P[*9JlZ`Z.:c`_iGEfXuf0r@X3.:Lis4b7!.+^K]kf1
%;@ZA/jk*WCE=%FjaTI]e<M;]fQ_?)^ejPt*=GK7rdNp.=AOAgr&r`c`TqP-`rWF&V$CMt_,o7JGS+39LeO:DF:o?Y#)Em)Qclb?f
%EJ]?D%9-XW66d&"QqmfN;npdd5GirE//r173,$HQIU(<o741i&(c8Y_1mhZ:6c71a0$Pc(#!jC\$9HTpdlIdRYV*P3IP0cBEuaC8
%O_F!3$XID&JNbsI\N'U]n_]$*iL?,3VOiVR0cJnr2s<IXDKK.=leJ#=06Xd^X&T)hTE"e+O+6aaq;^1eqlAOZEN9':h[T<9meb"b
%Nurd/f^.PZneqA=gZoZ8F84@ZmG<;I2gf1pLL!'U?ba9)h/:`79_A`o$8MJ,&][tUo2g-W]Q;6=ga]oNcYV6>h]I&3dW&\TCescX
%f]i)fLE1ZR60lOCrj[EJnNVA@S`1d*TBkr&R%6urHY5H0UTkc,*);^6r%ge%pugIfnFmV+iU;Cd=Es=ITsqM[IcI%_Pj[ZJN<M6s
%3LIYZn"#I.iaBO9=kr&si2C:<@#auUh]7cTBQ1Ak]&)dWVd!=dchE4\qn5aSU[pYWm.dB_<3@YPS=4*WIQfHYPD:p[N:qVI[)gr1
%9b+'c=;uJ))b9:5Pp).>ms2CoRALLgG#sl[$VhaCIt.47`jl!1<"5jR;[9aqGqV@,=R5?OB6Dl&A&%g0VJ2*]\?CW;f25W@O2'EA
%;m1I>KAF5WW&oI3-#[Y)5MYJX+1Coe\f2):c2JEjT5O\eN'$S7.t\]*Fb];Ri3]fb`uI]s9CK<BGPal^+(t1SJq)a#H,h.J/9eO+
%[q;Yq9U2*HEmldsj&ER&VTMWZi6I<3[l%t<6>>o#6$G.ak0A'&T;46o@*q#jb$5%Lg.[j&l#JRcDPkU*9"J8LO`\-'K/km%gg"e!
%[(0e$R!sI$Z1DV+\$jcB*;jqc*HWAhhmqY$+-!l!raKgG]p9hprM_S[JA&^K!'M6=/pI<]C7r\uN2D&.PN,h2qCS<Q-#TaDjsOA;
%UX!Qqe7g;ajtnZlRtn)I9u\k]Heda,Rp<91A*V[J!@Qq_C\d<I5Q+Zt[b'3bn$Rq3+QO8Chrf@TkrIla#/.kBk$L2?/)@VHk+CKe
%=U=\L->-ZfBDZ@l\CKI"XDP>BCI#;^\tFu!W0kV$p5f(0ccO=+<u2fL3;n)g#5urZh4LQA*PAc^j7A]ME96Q%6,,4@""\BXj6/0m
%#MoCSd6#t`-M?0Rs%\%$s-o`1r4bVKFhcT`VF_snbj#`u)T=PT`de!rU<E@Q#rLLYVLJ!HE6`u4g2!S5-ZJU/S#K;450+)X5XKfZ
%9loXf+]GG`(rBu*6[3PY%CX]o8(hn-A.6ktNT$g[FXCVfO'6][Ng%+=m#H:546%Z?3EQ+<.7BM:>/(R')ggE2drtIVeSqrWSpka.
%g_k!Z$j5(mg]mVicQ7KQU[^/n8CKLPhY3!ds'S()p[O)0q=q9ET<fT`O\n<%L,8Mr[K^6/5&8n`OO)?_cs%K53ra!R<L^u6T3:$j
%]1PDBiSMkQ2qU=]G?/(=jr<AI&)3T0rFpSjG!h$8Rhm@tCU;c22fY.U.lFZLMj\1Jm'L8j`[,i?e;)^4p.k3o[Wn@ZicUCS!LmW>
%bSICC*=b/T+_""r^j<EF_!,uj^?l;umd[K/gp=ro,80#Uc*"&GhO=e0kN.'*d(0)aJum:,DL[<'GCFT0:]4kL2P1X@TB5KSYLhXp
%lur6ca6gS7fn#0@e>]SXe!?PD6s@I*ZLOH;&<$2ce*>`TT1oMGND!;h&C29)Z^,dgrI1ZRf'.<8VT\1DnCAr,\'VqP35+?6G\bd:
%jX_Q@mr>u'G$;(^m5=8PGD>^dl?FoXVfgof^\6^0"6PZn,bWj#^!g^Up"O9b_qOq>T?\mMEN7U!%gDrGoJ3<Bo4X:XH7jIb%BK`r
%kHf(\R.L1-TBbHRpUe%-HP7@P@@P5,D0:3=.=._/4-L>QfBme9%>'oS21"<Qi7+I2+*0^//PQ_Th>=8OcVa71rUV&=LK!pFarO1d
%WPS<j*_asHE&6se;eumJ]2LNn\Xgi^$p-;ESNNA7k%8hmrH"DkRduaSbch9nbiYndSWE&$hEOE;mgo7hh@+/Tm2m!CE[L7PE`81>
%C*5iCLM+*i*JZ@4,HTeS!?J_e'O4.6^F:(ahTn\n;9i)c8iDSqR0qJ\j!$pd1`=M_<FKL%-tdCgD)Al%rd18+U.inCNf?G@674jM
%TdU_XB&KZ'XkEF>n&;"XO>5'Q/BT?HopgY:P`:S8Mpc,ie$rr5@SuFNS&M,G@So=fZ?&>4b/K<.Bs\dRrAK"b@SrR&AfCEAWES1C
%<%LY:QSIm"a$ktVfsjSX-qsn%qs7,Rln8u>YL/#jVN:De_Xe\"M9Xnq^[NSq.C`kkIGjR=jAbUV(EU4l-3E;R3OS$tN.'lAY^W#X
%qp#T6kG$A/0+.Ab.TaP;>M#%k](SGA[0Fru[][m+[Fr.bZ.?=J@I_N7>apRcT?OUl_2P"gC7i;A2A=YR_V/g+S#pEAAQ>cl:u>Mc
%O7X=cPoDj5oAYq(I7?pqUNH2IIGiGM_%WAf7d'_+MS3'G+QQ9MoPCP%mOIrf.7=o/_pe&2S_hh%qk#h11l8CoTNQ-*VOtd3TWJVa
%]7V=7$KmDWdd:sr[^uF4$U`P*\b8)Ona]Wk(Fo/93OI0T:bjC/CBfq^>EI(JKU;I.ck/'[a[^b>a3[ISP#u>[P-[TDeA%iGIk1"l
%IU)g*CDHl]<W$,"pK$g>f(i&Hq7*HF)6&?,X&S$];KV5u[>epST:6u&B#C$+<GnhfJ>L*MhI(H450tiqqqRL0T2:Qn^Sg2l]OB9]
%*cKO#ao5.qe2^[U0&A))^p<ZWRO6\A6fqI60cUo3F=(K'&((LuN8Z1_fU7[AHFGUKorcSN%0$.,<E$Xo[YN]/c>I:MA1'Bm]4>FE
%AX\ph'DKRhc<m*A:%CV^]Uj#$9]P+hQ!W6i5B>odrHJ1SkEM]"oDd,6^GGoYEW4iu+d&2mGNSprq1!&Vh]mo":Ahkk6K%qT]NYgk
%d[AF*k4>/>Hk20Ok4:b%ThM6-GIb>n[6Nq=l>H'LMk2$Dk9DX$D9>]=[C_ltBE*("]tn&'&$;a*E,Gc:h^KK"jGb1A<ZB,[1.dc9
%rBcP5:XeTJi6DhR%h2S2rS^eNKM:.%XP_Sj/q;?W4WP"TiVU5PqblGdS_'uXAohb[6t\EeREb,Xf;DEeju07WHe.4;cK<\K3h@5G
%VTA6RHI&_\@AhSh<CiUM>K,ILh&bAJZTIAn`j^\nc!,g/]74?.`69G"0%r;8(i&+"V2Ampm%j%KFa*T#8!PnnPHW0tBQ>jT%>N?r
%'u*J27BUZ,++:0fCQijWYHq(Wo>;)I1FcFfMelRb=WaMQ5_n`H,Fus>5(R+YrS1f3l,]dLUj)=ZhW_ApZ`O)<=%Lh>3Pb4:AsSdO
%j^i%LR9<j.QC"$$AS-5`e1E=gB+`=FRUKl[R9<j.QC"$$j]sDj#?Sj%l^p<F(8MJ(@X]fgIB(ls:P^rLEAD5]N3-cn[bVJ"&i9Ul
%9[io#$oZLD$o?PSa+mAGJUU9SCuV0(^::DSM<;'pe%\-@]&T^UmZE7tg#dNKS)]IG1ts!7eE1uf85.:[WS,"1<r:l*<VpK6^5h"g
%B*>(B[lIb?!n/U\a##D@dqY.qa!7L6^9mCfc.Yp>F7@e_8Bj!%Y<G"CBU4p5\?+-ZeMYOmT1K2^[^JYrpN#1M-kX"8eFI`/Yq1AH
%S5`5&E8!(`+*A"l]^(>-p$:1Z',#*VYd<#%0qNg\T:c\`/e_e7BE.TuOS=/Z(VlRse'L:kL?;"_V3>Q0?eru+$M;dDRG=\;YfU9r
%3q!V$pG#0J2`*Ob3BqC8S7rUe%Zu:1%:Yc:d6g=LdZ-&7/PjdPAp0+hdKbr'*FkNrOD36]hVX?U>lZrUP;,b[-9ebGbeEe=*Fi^%
%R+X4>j\,D+m243s`pH5]6o4f.!pO@DpP8)3]h\UKK_.a?B5?/V(q4kL%D#9nQt;(Po9A(W[39CWdkI<g+<$VOVHH*P8BkK\GK1Xm
%fhlOr1\s9'p80>(\TV&<K56))l0n().6b(&VeT2]S!k=]2rB/5ZecaG<em51p5;@QRaej(qg+T)CDqE>&&*hC&487ld)</#LnV.D
%%!hFRb1DRW;`#3DbWG25>Jn;F'TGItB6#76'DXI05+V@kN[$_F&Za2'n7c(.5A-,0fglC>FsV884dhm-=lS.7IUlAc..t93'_'Xd
%0]se@X3"bHai&.S=eWqKVTE7rGd(7`<IT!g7fJXA8S/Hd1Nb+):HH[EF!k?\1L'e,N9aSMI"QsEF(gI*/sIr:WWFt?Lb@:qKpZRq
%+(luXD/Q5qc*Y$L2E0+INn*81a:L.EDPkZQ4Ridr*]DL1VFpMA<hF.-_Dm>I>_>nue@Cu.2cJmOlJ/;4cG^SkSSL'LF/.%*q%l;i
%CGq"5=6X$$#+OAbG*CI)VU&NjII>#4(s[7>iFu;F)3EhDe^T=foM`8/9pL;dj'stf__d2p1Tn[l>dO^UI;Q<%X80'/g+/uMpTd0H
%"B#<sk'F5Enb-!VRKe-+NUHS6RuOLaU[^R^BeiNNrCftuL6\@Vc"GOF4L;6T?V*@npbJ^pj10-kc$'9Y9V[mEdh*-\6t7jof!c0q
%^+Du<7FlE2HG5_+\`kADgLsBJ85Qq!am&NN:8?V:Sj's#j4=(5(u4239ocEn>LSb)98!4Wgci"NgmKR9PBSoF\cra+U]'.PH_WB6
%PHoXA(K?T8>g2lrlqYgKe"5$Zl.#S<^W]4:i-(T?XZ-$>g]-U-mSB+SdbW=34@pG&N&nZ3[ja,+=70dC8DIo30^%V+%h^k81q0>N
%5X0o]GL6SdR:n93"$0+43)r,rF!D__OLB#a;^cN*]X7k%CTsqo=]YOY)tZ3j3Pb4:Al@#M.XHTDBI4FaThtAI9_bM:Y<GZ6o2@@(
%?[t,tM^eTuQ*L4=X99!@W4154^YU"e]pao=-kspoN$3SX0cUq#E$f(NhFS`4HW6Un)2!FgdX,tc>MI'`G\=M7W49aUg*<)VVPeon
%lug?EgYF)sa4]U"7[mnO"`9\Tf3t.YP;19>a,dtq2AsE>DiW)oWS,"1<r:l*<VpK6^1M`P^U#lEM@E>.,e:.u#1*$UEC$\F1PX3f
%%%iGX;uFScHqq,l:PVSb+`"g:33s^UT[=\e+1I/GVp2?G]qX?Cc>_VUEPLW"5DT3u>#$+jJ"3C>b\lWm(Ab#f[I+jo*$#]PG"srt
%WELW4/EGica@@$]nSrQ3ihkucH@JE(gdQa(bVbLEVOirjr_5bfiB4YYafn_:h1$!6i@1RkWLn#D0!anN5+coS,f.F<TUqd&1A+VK
%#9QR*52GOmqGk@M;OmPfb1"lWeKFU)p*#u=@mpaIo3o6qg3Q!1mmYr<nR-esT#YSip^(%g:<WRhmr(=8T:%HPY;_jqkJGdfZl4/t
%38bV%B$@@4e[-o&Qt5r(P=uuVC!1;:VV+J.ArF!0VUNb]/S<7>g%dCOS5,N@HK"5-=[,ZPgi>"U+#9il6\><heq81'&Zr_aSm\8D
%]D1jU/:oBJ47B(eXe"%6o,Wn!,"S%9*r+T]Q2[X2L;^M;9lI`boUcmPJL$jJD-uXGGPfq*r9+*ogZ.0Hq:jBTIdukS/9Ok'bD"3W
%HDe/1g`Ppj*k2%6mEVs/A@U;1?9RP6/c"^1]@Z@db:]GnT+;.>)m-WX2kFrip=eOG='P9B$cQu7Dr;iKk(l+94dYnbPn?6#nIM@?
%ErNiQoAT-rQbP*\a(mqVO,?O)D1D%VT>0n0>j2,B)R\JX?Rrjlmu";>->r>_rRl1]DG[Fgmr+LlZ*#YF[(H:&FBR.o<uAjbm;r6q
%_q)ipNOL8T[b)XD2epAA#B)]E*u+42hNOXVSm2V[_%"E13ZE]\&oI3CdS\%eM7EEPTE"h]f6UQsoR#!Z=3L>AO'AeoH`bQm'RtLb
%58O:T`;/r"[#3E)9''=G1Fb#;n#1BhBmVg'FBhIkroSZRI+47<58^.YiAhr@rhA^f0fN<<IMd3.rp99LChd6"S@Eqr:PqgDd)Y^g
%fm6i'Dk1>:WWoD%6e#H<o4\iZ+8Ad)k1P-PA5R+p%[(Wlp!VHo4^@[pce4q<cL0OanWa'e#Na3cTpJ2>bFA6h/BiP?&>su/$dL-)
%QY49e1V\/ck`b+jmq8aEg],,h3W9UBp,`/spN]4eG_UG;Q7AXX:N>_TMIT]dmVM7MB&o"R[;TM_>:cS)eor.GD*I3<m29PKi2(.m
%jimU9OQN7LTD9`=dKlsh*#,`a1+="d-`(1_7_a2-R)m79N$_l,s.L4IJ+8rF?BU%W0qod"Z6[6;lM4bXo?fts+H#,IU!I&a(EF4I
%o$NN<^Gq9$8W$qdoO1uU@$scVY]qEBQEE4;dUHoDk"Ul.Nd2tfr'blVBpN^UbXXs\HEfXH5KeWi?Vp+.`K,6h`TeM?a#oN(5.E#e
%,YQ$/_m0jjhbBQ/3%uH=?<;M\5o_!</><[N+Pq)m5KhA(9]?U*<Z$T`a9BZ6eTj?CGuQo\6Cpf[2LECM'HH^$5O,WPi'Kab`/c8m
%SEjl$-Xi>$eV@HJ-am/JZMtWF#-0H/*%X6=Ia!I9cImjVin98MF@JYqQ=94gME.?Y+h#WT.7?-J%rmh\a"7hdH(,9Cb%*Jm>5A'J
%.V@Do@G9_hc>ZVDLu3<`G74sCV+TdIk2utQl&I]@nc`&(^N)`_q0$tcGckN./@p&l#p41QdI2@)h!;W%)HsPWQMuKtmV&fUr^VFN
%HAnL=H\'Lc2,CN>5BoHod6@;P20*tt/@.6W$Rm]ar1#S<oW)j!,bK55`<rirhhHo8=:+PWm;L2(ilU`8aUpAno75rJ?L_H_T(EQm
%kujp/*lUNr5,_iP)(%nh1D6TS?G?Md:A:B^s8K+0jdWC+UHN<tgo/r2Mt(-$='N3k)p*[.T")9+K<V-,T8ttec<`a3bVlgf4-L]P
%?^4mV^n['_k'<KfLY24g(&8Fm"V>7pShg,ZEF2\8(!"&;p[h<_7@F1=N</YGcG?pX6*Ia^)DdOb^@QR3nF`u.L2u67rXD7RbBJ<h
%h3uCTp\oDu%<F5]'M>0E*,LVSVt^<WV,b9AC%qDc\="0\6'cnO[69nZmH8Y0%qmU[:TE`qkS-+lCMRo1T7_2H(:.qcgF9"Qms/rC
%F*[#"P^b?(j7(%,p\#AOKUItJ-H8QJ(kLK)\XF?)8(;n3hF-mBhf+s2i"u:tRQ)?(o"cm&B,9[Z1sW!6*#e'o#bNM^c10[t.h(HS
%5)l;2=-i%6I-Q(S-P5P&q+4<d\X*Q\_oqX<p[r*Lc"BW<Is=)^kamjAR(Y!'g\\\SlfrN!f%o0JQ-5S568d#JYN(8&q$nFMDsrb2
%f\-TJNOdKpXMeS>*7Xekh<PasUC?2IHLq$Jo'0@t4:Mh?UO7KT:Z0:niQ9XMn=T`-\oHA$](2#\7eP)%T2qHQX]YGm5i'bY%,:aJ
%cLoaaSR-7(f@A$_%bo)Q]>)6H4M0X]mMGn-]]888:D_4;m@NV-U1YP_O0(>5C/JSu3>!aQDCsB3i,"Kr^LNM3n&Z['rn1R!oPgi1
%<t4)ZBKbVf3ni]3`r9j!F"OlA`KRt,k(YbOPJXN2!;iLa'$u-mbt0)VQel!CHrEgc;Cqhk(HX\1^?Fq#mGHm"G!"aXAhi:Z\u.c$
%fiTmC[*JHbeA2f*ba$BMd@9-SUK]+C=VRFsLNg:@dq<Z"El+Y3a(AVe"%W#k5O,S)s$si\m;Ec\T1na=$Q%FmN[LIAa'ZNrl\>nW
%5Nn`0a]%it%6!'d:+WVp7YA(;qfaC?fmIMS-3E/A6f)^E6/<Ng+bjG*33/>1k+>R5YM@qSp>o\P)uHE#@/#jiUYg9mT(VWOr_c3i
%Ism]FUH$XK3Fbha`-^="Mm_8Z7$9mK#SZ"j0=RA4>\lo:ormfGagK=<BHl]S*V)1ZN,5E@V#:*-%F&eYOKm%f);L(1gG9c"5DKa5
%jRJa2*^6X4m*P:tAmRT?4R7W>Z2$WLClP%q]A"\\]:[L?%c6=q[EfqCI"((MX4TV=fB2j;YLD1C,CNFW&C)E3nA+d&G%g2Y^X,^[
%qr?9$E3R*$I,F@*cte\(X``9'/HVg#4)aMopH$4CW4T\!.g%6CM1@3g!"\hX6PL7a0&,25])V6?8Jid4XM+>ik2[h4gS;6AD54e\
%Gd=I-le:u&m9V^F](=VkC"((p2_6'?_LpFVrcle9efKf4_t"lIb$`r@nbSnAgh^i#(l<ElK.+g$m*lB"-g9F1M1)jg*B,EBlo]BI
%AeN-mHurH)H4MCsXkpsPS]cBLP;!AM=0qiW[JPH^7r,Nq=da/'LRh:Tph-Mt]^tm-[BeI+\(A7*mar<KEZJY6B2L5P_u2_&*0!&Y
%@Lhrkj&X./:duuN\,Efmg2V%s;ml;";bZ]Zb,h]cn77$]=*uAC+/6Y9G]/YsrU'RWG,P"TYZLeS.UVT7_-Zf0F[<V5H\;!7moa:A
%^Ge47rcmccD!9EEbB`@XDq9fL642i`2@j"*][iBqFN&RQlh3EBEUa5Cl'bS_[eo*&X8'9[p3Bs6UNpdlate=Un6gCRf<^8&U,0_!
%MSC2]6e3(K[8-1[p:**[d9ra*_ttFY_r9@$lWjq41OQE3lWa>bF')(Sl%T^Y7"=T;@`?.,coHltI_Xd[<,Fe`r7U>f9?c1<H<Q8U
%Y<thUrF4`4_cO;;p\:[UI$)$ND+5Ln19C87k;m]Q)nkZGn[66<nosW3DAUWJFE%(WNu2occi%!OXn]hmRFl,^SHE5;op@o>NX(&W
%L3mkMPUb@GW_7;?"rqS"Q4s'kE>o:sgcS\&FCo",`fs`DPUuPW^Ucr.#N\+V\pZaL"hbon;1LGTiINTF"++'q?jHNldHRr;RkEPp
%h4Bt*=;k8T=7hWOk/IdSlALj%^"2r"j?pZPl>^IC]>%QQU0_2t=?BTUY+;q-<ZWi=TC?[iS.2*WF?]MOeb^BW`2$>L8#Bo]rA3K?
%544Q(1mQ7jh'`H])nup7kP"s'K!04SFq=5_*OgC/'=s1[G5'RGiP1rYZ7#MYMj8$:l3mqd3kfC7_*e2`YRaP'1Pt$HUTn;YAfI!>
%n<#mSX?Yoe%9f%YqP4@Ee0*>Sj4uWEVB`PGCB)!7h7*"A=GR2d>P"ShQkXXQs5!D<mH?h8_o?%JrVi`olq1OVbPA+)iRZ2tqMc<I
%c-G7ej$=gtFfNorH:kiE%\HC*:*+TGdC;-M.4=:/E%h7\o:ikjX([I4o\J9W/`_js^\M1%D4YuQ0kcn:%su?DHUI1EgljBPl#giM
%c/\UR3:s$_IB.Oa/Fquq,CA"c._\+XEW,Buh;.(CTC3MaG4XSNJVfA+QCc`U=Lj\Jo]G0YmooS>-L@",l4qM0Ao%@;f(-&,0nr1l
%3?6p@7*)N*bK5NaFKaC#4Q^/V/P($4kpH9JQj`7MSb.TsDmM7bDYF[jC(FV"f%#G"loEa?Ygr,`RWNA,AG&!'"g5V$K1#&9kBC]V
%^nG$l#6!PhO.f>k2\'qPo$f]&G)kfLgmfGp&Vo+)6u/7X\Q&nJ4+lMl8p0@EDNs!Q=NfgCg[iJ35j`)W2;^L$)p9hCZ^ob=cP&c/
%g=Y_.r,^)F-(QsjULWJ-d:li6b>m<@&Ygm`=KfEii,NGNis*;YXODqkFmRP8DBft,GLQb-2d+!J+3$$`M]"`KVO(R,k_GpVk@2ts
%'KNE6*O@Vqe7iDPfK6&C7([=[^RWel=G`n:n[d*/fA"3jEA+OK@8urh#//'0""&o#4'/n[#,4uV:)`aWn"`84lCApg*GtJio:*E,
%<^5iU2r#>DO'VV/Dm[:I^<,lK[l#Xi>?V+='h:`I=:.Xn\<fCJmru4.R!3p2BX<D;4$$d[TjtA#oM7GNcc>k8DLdMGF%+-s::njq
%3laB8o]hBD+`LS;Hle'7Dk^H^f\6B"hL+,p_:q&Qg[Ka/n&Iq?h*+Lk338lmNtinm@ILYk-jHI\](W_UXX6II(u3hf"oO1JK>!9)
%<ZLfM*V]E`@roDQE]e@"#nfe&*0(s()!n]=hqpD2Z:H@nak_V1r6Es(h=!E9_(jb@e06eoX&@H4+6M2;Tr>Ab#)/AUg%sgQg<1j>
%J%=;01H8!2gF_KtWq:MR<Qp]9Z29U(<elO'78IT1h>XZ'6@$/YGc+J]G;t"t_>74jm],Lu/oB?=]75$N:HQIr:>%G+=O+ltEo41+
%gAOaR]ha)hQ*nSkH3AlH_GH8e5N'=SokTCmkL:<3_\ueIeE6_0Y@s[1?G#ZL"jN-X]"G%$,mZA\]s1\bl5$=RKD!e/q,>i7PbrR*
%@^Xs!cB_&nnQOg!(,m#@Ali,;>C,c]MjHLEn3,g8dFV/H^UeUcjde&C[=>jg0YI<oDXlTQrpJ(VmJ^`/=$O<GjiaK<H[bTUo#!C:
%albVOrG_f)j65fuO+-oqn\*o\7_6/D4O,ST;=qE^NL#'$hS/E+EUVJ^o3^=cI=6$UDtImcUU\O]>E:re>-E_A`U.TXIrt.&e6-#@
%hRU8'4?rl-p47!BgAIq[@(O!sl"9e`rUKIIY8<t+kH6K)%N^TF*it?FY2)f9hd9ZL^3I3`Hgf.E`FY@E]SGg.T'_Fmhb%7's6>r)
%k=bD"NkT89hp'dIDSKJ*IIH<3IeVReoh51_=71!E'pmnN>5dj5PPsUFf.YUlhS%d,2n'QH`_/DXc[P8<r-!@2_gh=!^"ZnDq,0se
%h"5:EfBloM`D;j#=FRLMi3UD5m.W.Kf&f0bb>%oehV9b:PQ-*ng;_9)r;DnWS`n>#gC'@bbL[NE]DgQmHV7`FYe&?;s6B$1LS+%j
%g=U)R`D><*.pJ'XjO1bdUR_n,?i5)Rqs2/E`SRGp^RQ6Lqdk99dG!\H0S$4uDEZb]Mp!BT?G+"]d,4V=pY)1Y[r/"R^YJ(Nl&F(k
%\1l]_i*UhXds%_F=FN5U;*;D]b>.mhoJUW2QYs0gQg?rNF(OccB<ddeh3B_mo]X`:V$FIoJ%9S_O-.hqr8:TGq;$.,nE[L:0/d1n
%%+[Xmc1BfZ?RgeP2u2`[]TuX@bN/Oa*nB)c[o\bRSY.Vo+*mkOcQ=gtB]$P:qUr9KLU^$05Q&[1YY/sRDuIE],5uWMmcnZfl1W;c
%Dl*K^op+FqCr&o`K45&bkZtfIGNF.Tr:Tb(4jhG7[r6-_rnXc*S*l;po0$68m4q,6`J<js?C/.Z?b,b:]fHb[im/C,hsbV=G=Gq0
%aj8)t)[juYJ%rG)FlV4@<ncpo^K=1\J+u3WHKiHl(7m'/5$d#Kli(nmO4Q>"Mp!Y@5<XK@&+o$qoB2Atrj<Q#d>nZ2<gS;cq.?W'
%HZJ/tf']C%eYTCOr8JUNr@La9D%=\rAnun_I_5+1d9#5./mmH4<h>=7C\\)e"ibo\hd?9W7JdT5dbQ0ahn/Q/r834k&'+PP#<20l
%.o4#g`fJ$`lr7c>(\D5E3@l[FDdM--I_5ROZFB\R]o_jDp2@EAQ]!lpeb*^9KDa?CpJl^QeX(&)6`/2]4/73f-]Fr!W#e.6^[UBZ
%cZsU/g>8sh<j-=f429_0If=D-oo!0qbFR.T8@&7Hn#Tj+]Q\L4-[GE/jk?L*eT/A>hn`(j/iIJqS!^/KMQ^giE\Y)MY:a\\XGkS3
%)a?Gh8:M+U:;2L]ht17):B'/J.s'=oo>=m-rjMFc;K8+YkDqR*'oU>mI!P80:N$cU?ZrRD]Dkg@<I?nZJJ[+&*Zpn9j/8qZTD!0)
%0#p0]fC%Mq%9YmVd#)g[Cosika6@%gpZ)M0SpC@*(Y<r_jVtu%IC8kIG]S)6f7,MWGeWe0(WADK^#i(o[rQod?*JX#/q(.sChr4W
%iiq%$(R&WqG')u]]"I^t2bA#(K,n)-='kh"NNME`'u#+p4C#S/IHO,%pV/;`7lr@?I^la>WqX-<nEftO?M8_amP\.UEaQUnaps&Z
%hX/:k=8'5+\*s2q.SK`dcb=-q+%rlJ<0hFZ>MieuEp&LMjj#[P=%qg.j)hoC_9Ubc%bYdPDEShR($kV6kOG:]hg;c8p=mJ2rG0.:
%gV)A!/Bnu:IX=qn#ELJjqEOG`=]jF.*gM4dB<5f9bO3(&`m)]tb,QQKNLt*<rFDn"524f*iiiCY_a8VDZS,?5[?pgg998N"Vn:g'
%qu.V>Z[VL]s8&"WY?fo=nqc9\AQLeMf0ud!90ABP->SZon+#!kEk#C`$#PT@[Y<IWX(a]*r%**aoA0hcgh(3s\m/L[h;BK'I93"2
%/qXP_cZ.:er`s`d/U"tt4QS`:!AEq;MT]t711o<BqXg8tcd?ooB.GXQF%ebD]BRG<nlL%L27nf/S-Rk:#7fh\nnGBoDbqKcJ,@gk
%mNJ\%Oh/`kSp5[N!qj$FaSUC@QSJ"WlnWSmSl^2X%YTnCr^?0n>ii.OS%J=k6Z1o?iM3r1nnXAWk"kE0En1#i1,lEL*&Tm>S/^\i
%aGm6j08D_ErW*]/i:FN)_rV\F:ZP82C34oFfQ3VYADK&SUCV3NUjO^Plf\&SIQL3jdPA3XY0,&Of7sZ<^9ZIn]j"6<p;b'Q396:6
%j_jUf>=N/'ndi/9n@YZKgrE2/5'9%[T%R`0@B1OVkJ#?m9h'C[mT\,9PBZgRao&28pli>l%"u*NJ,NW=$,9Ygro2]3lFei4cO2mD
%/#_kXq*MjK4guN8rq?,bS#`00232S`6d&.)R/<V>B9qH3HhmIJgIp@0hqVGhGl,Nmg"Ru37Qc-G[(92$7BX>"\cZfOY4;!^Qac.\
%IP!>6dg&s(.6"r/53@9Bn&:VpnthoUB0S&!qs>J`eKHNYkq"s_00d"Vp?QZ<_JSbuY$\rf26%EN^[lbiDU89i3gfj2NW3=5<@Fk#
%p/X)S5JOIj>S#sHWhmJ?^:i=tC?:p_jIuYIE'H"JNCmiuA5=]/>ue0YoN*HVH#Ii0-">V['Dr[^LWp9G4F["I!cADJ<$BH*5JN9M
%dQhlI!;2r+9*<GX`'H=Zk:ekmXD8aFYA[&C-L8ne^X;fF_kjgl2Z<DiOV2R-W6/%E35pOH[V9"(r3H7f@e+)MKraNthqreRe`-=i
%?B6NbA(=*\GuRdDKsUeso'QAGKAY.$q;e2ni8NoN=Qk6u^?@_+^@:3=Di8=:I&8Yhb<%^VkE&2[2bC`(hnf91?F'Ne\j:>(;E[!a
%X.:W]pYT<B']7U<[pf9g."8`k^;'F"ofU!4/,HDthFC*"0XngH`TI0:>4:=Uipc>"r/G>r57-cVn6)pZm.7DA`UeBpSR<ECIX_1i
%d`sM<h(8!hbo<,RYNLfEcXR\lI/E\BTr:*0MVNu-'7.R"Mf450T9XnFF5FO>\_H`FWZK_Jl""f,p<#&[mO[VfYHP_;I!):#O3]Vl
%Pj`3>^TN'+j&MC_4F4O4rR6,4md\coGC$=e5@%Ifrk#QS:s&)807ON*0b5m`l.c10Vr"2^q;2(tPKn.,de7r]>l@#s]"!]gRB-(:
%_jqmDRu^p*bq%T?^:s7Z'Yl#5.pmU!3VelP`GZNerC,&Irkms+g3\);lU$'dgH#"`kKtCCh$)3W<j(=!rqGA1X']/G*Yh?"b<c6@
%^=b0JX(SK6Dm"PtK<^1*DQj)o^\@<rCR8u->[-M0]4(\#VgE!W5%*[NAo@G'n>kGgVB)0cT<6n6Y3nrcSZURX*$boY\L#[9F4-Bp
%Q?LF25NBnWi%m!m`PL,'GLT?#I[GKTb^6kja3qmT)d!1lkPbCd@PbL>3%T`ODgUhke'C417^.43Vl/R/Dh%=:j^$a=p:JT2c/&</
%9u/@[/_'U"^#c)/5*sN.DXc?8Gqg.l[I*(Hph&]ub8l"1h`STWfUIBQ(FNMS;\gf7,M2k]L[=]VRpRh^.W0b5Z[70Qrd)P#@68B#
%'l.dZ`MMR&j:AI"D6L%uppjUqCq+r/U5H-YpnM[3;!H0DHY`<Q>e6fA_j/NiY><a,'GAS@X?Bch=#R4,^FVcSo'_L5n7<s;JR1S=
%r8-hEJ%3/h@(6#J0n/ZQr5/284l'FhpA>gCO8G:3^J5U&qO>C&!$`H,SK#`_?9S,l'$)kP.G!e=CPU_ppAFItCTDA;^\lRO<q491
%IrB8ZACZgCNIL>PrX[O#_1qO'GqDD<'Er'shOa8im/\",`hi_lSA+s`rq8:C8'5)Z>oQJ0pVr1+iBoi;Fq.-@Uf9t/X7tf//mS:o
%\b"utnuP`>k/H0.J$5BI]Q38^CL@(PUXrVul5*7!^\q3IA+^knld8L0J%Y@FCJUSrXuCKkn,=n'h&LhDL/']%0+NJYo5E*;Isu?>
%gZU,RIbg'7]6!/kHZ+B4EOGHl*#r8]m_cMW9lB_Y]j87\oY\Rrrp*![IJm4BjS70$>G#.]q=4COoXhg6ak]VaY$ZGK]rPTt\UuQa
%d17=h5(2`kI.ph]2J7:!eL+A+I/L%42t,pJ5</T%nE]hX(e!gV*rkW"eYN3)Mn7><r\.rZ2Dsl'$@d]^41mf2Yn$YRUOJI!hiId3
%nFF!aS$X*T\r].jqR:6a^ARfciOr<!99m9PV[!ah]CBhV,B7S9H_3JaI^FKMk8ed9l+>P3\oR'#,AWV2fIif.o(_58$kiEZ62BL5
%-eIc;5JM:<qidprClri8mI?Z)X"Ei$G6\Y.rU_ZQD.K&P7Ibm,CE7jEf)%B7X1\3$*-Q>Do)$8rRg3O#K(e8$fC"%c"A2jnL5u#G
%=-!h%I^j`HGie?0+27GmGN3(VkP'VbT,bN:gQes\hRI]Mq:\b'S19k4IHAV`hjiK81-^*_'4%"f\uB>V\%#b0QTk<>A`kQ:hq6*5
%&+4ppqY#9tK+FYorqQK@GC?kcQ($<s^r?>!jcSHW\FT<`S'Odgn)]$]]=.aYm>G'&rT(HFNTFLHF#1ROo\`QLDYh*Gj+'YTX/Ar>
%%SQ<RrHE]Rq=3W;mZV<5o&6LmY'p**P:+s7r,QoXo(gmDs/L,#GCNj\rUddFQ>&O4V5glZ^S_*TadoJ!0>:b0\=;ql]6!R`4V(;3
%:<chPn`5It5C!.jD]`81r9B>=YMFL!G^ftU/ldth4cdd[DiYCs]H>^AeBU"W(^f'-@X9'.p?cem-D,bep"BZ>]m`lHN[9VHpA!tB
%TCd:[*M'f^q\pM?rrm-,mBr/$5N3gUm-XJ)fWU.K>Na;Xl1(TgWj234D[2oGX.c-)huEYtjnBh0C,]_1Np=As^LIO04h:'1Ida=^
%r?,DDk];Og\"amk`M*9UjDXHc;Qh'W*aCp)%r0]4pWr<$f:*$,bE%_L3dg\T_8CmekFU-sV>a!Vo@c0*NN272]-"d.Wc#NG`nt*;
%b7<=2C\,1Jd/E[ee%2)g4uer-qa[8[f(s['If/$^FR@5+O8`f7?[)iD0+0^enD0B,]RFZDa4l+Da7oTf"KH5#LTC0mQ.L9/cjS6[
%Ru-^e1Ph&EhS"0so&Do8l`9gU_t2@-qtD32]QMLYS7Yar0@t]A0#),fHYkO]*tI_r3l.B,X17Ma%_d1tH$\kpVgmK>#1W+fqQL3Q
%_f">@If)h;Tq6B*pA!kJr5FHG(<@R>I^.jOqU1q`2r:L2qqpsZ,42TA5-FJRqE>]8h7UPM\Fe&=[m,<4m7P8<0>?Y^pHGbWnY=]N
%f15_M\usl]hS6UAq>SceCS5UTp>tm)+SP@JLS%gYI\q^Bqn4B70<:b!kesS%IdZh!hr+_0aZK6'IJ:&$]'ZPnTC0IXX2)sRYEWto
%?9afAGk)ObknfE+rSunhL[M4l-^RTbIH.][qMXsRlhCB<V0PW=rVl?/-p!t@beH9OCGZ15n+WI3qQLlh&#W'ESt/"#(;pa@](V0[
%7DE=ZkJ5:2LKhKo`qYlj7p#+ZB)hGTc.d`n`gJ2a;?EbLO"1`hj/\;_q;[)\03kJlF8)dA6T=)Rlc7=Xq<;;$\Gln0`Os0#<BiW+
%\Jft4I62rWeIQ$5jo*(-%tFQ@m8n60Hf`E3cbkgq55OL6/,e=Mqe*.^Nc)OMrQ:rY^8_r_q>BX%?hiZk$N9FCYA3jXUOt5fVf)d%
%I-]N;:X4Ieb-d<0&M!OiHM,Z<l.U^h55W(Lr9;l:\F%"Xp$hG%m\]p)jU9E6FYCN(a'70]1$Pf)N\2Co.oUUoe\tK$:FahbkaCJ;
%2r=Q2Q1E'T"s_W[r,>cP]`%=T9_CoZrHN>TLq\65p@6COrN3Om]6aLO]D9:PhgbNrY0GFrX8bsZq;fS'SfRe-_m<\^_=8i_:DY*X
%\/DgoG/5OA99^1%o?P<nlKWkAmbko7GFrt;2`1?*5G_C;E>q9W?WXl5a(LZlhn<>bgum#7^FH.0F)^`OEcWPao)"^02KeSgh[FBt
%;#9?nWm5oI4ZSl^J+CZ?;G"'mDdL/'mB(a(*+-GLh+(NWjpO,phAc2C)t)Et-U!OeD1U4/]3]?UX2bI;Ie4fO?134I9))ggT>+9H
%`Q:=th>69mD`HajF8`T"O01,Hmp5t`gL%^qZKL4k421_TJ+`%jIoBd^3Vq?K)a?C`o[:YCa8(+oqXOCQpWA+-T>/VQqmII@o4eY\
%I.V%4lIWbbIdt&Gma_),\7f"&hN&K@*o+F%jK8@#8%7@THTaZeX/E/EDX=U:neUY30)bA/msi+G_nGMF2=/m5ipjeKT[W)3&O&GW
%oucZ[f5BA.r+=+\R/H.IHM-LW7os?)c"Gp@G\BW%GgLMu&bg66:"Om*Gs/9=Ep3@H(_\"JVPh$d;ncW&Ic3jZ9XdOlbe)JFrVYE(
%K*UlFmB`R[ci)e,.K4JW++LmYXTNC!s7G?J)kVTS7=P!cYC<IW3B:!lYqhilNIOW@&B"K/?[MR7p%.?j?iAr[U6a6ue(`J=IXA'+
%n*LL*0AV"rrV4&:CK"TRn`[CBX6]e5D7TNQ:==9$+2Xqjs5Ur??]UggPlL3!CF&!YIs6n&5[Q!Zn_?@R.mJBX1@\#8qsB:;7(hMl
%f8b<kq=rh2`s@r[M/PVjFnat:OL9$cp9oD(MANqt[o[FLfo&>i`Q;CIi*?r#mF+F^Hp;lR_DI$V*+,(TJTEc"4aD(RGO+e@hU>h-
%p,#'Sn&`[M<474\p[;Hb*pc&#oflQ5>7^G3:?VGb[T\LJh7N=_IpD"o>PXN^]s"$3iVMFZo"1USs#b\;pZR))l,*aQ-b&R'0-#^'
%H5Dk<mlccim26\MYZEpS%6URfg3`Z-%3;)-h.(d.XhFV@jELViTpJuE*o4ST/EJCR4?NNW"2=<`)O&q,`h[87Y>Xjm*VI<3l[\Cd
%fmEGNGLY$sIh$C+'7e<7jl=DU*rSYmI9Vr2>>Li>F7RN+pJ1_d&h>T"DXR0Ck8/R$Zb9^T'J,JgF\&[gorXQ4<@PMF4PB[E,UG:\
%pSF:!A!02d0S1sMhKj/<f&Jt4!^Dqo-7FlDi9=keH4J'efu(rFs089FcR$iV%j*nrAo6gKFn):jkLlNp(Prld4uYTO?.f,FefuX:
%Epr(CBcm@LEJg;i*lBc50;l(5%NjMRE;OI!q=s9B/L9q^^-?jilT^/?RZA4)Gu9T$hZV/X4fZE&6Ls"E+9+OG@A!+_;<qiU(_]XC
%*:!Mp0q%4KmE_i9]SNt\SSpVMY'a6K1@Xpo7FZC%7AG`i%MS9iTc;(K55=5JcdM[YQ=Epg0=-?BNZUL`jjqo*XoFnRhC_Ln@\,I4
%A!lu/1BlCD@%o=*b`ta!+*"C4fIsS4GVOp*_)H8`jh5m$?I*nB#r[/sWLOc_QB>9^G5%WsZeZ#]?fYU;L"_Fu8RdOY$^%#2UL'fY
%et4Si:;IcS82bGN$[D#`WP.'Km5HEm>:+V%5uS5]Wi\gVs$F_m?[_KX'f=W_oQ?/nQll6MHfZO_#j"$V.@uZl00CCK71`;nk$"5C
%3PTfIeZ]kWLFm@UGj0oC&foeSH?/W/B;`L,\979>b8beLZeRAP$=CXOXEH`UERSOV^K?h3:0XaJ^!Q-Bo%>Zug4p31IK:L98L%ZQ
%C%<WAW7q5IE3C<rl^pRk*;0Kt8sbhXpuSXX3Vg0+R-rMm%^sOUr,8V.<3uT'PGe;u&"e!6]k&YLGjtSO*[,f(HK*54*8J=/jTu-0
%C@Ro:Lj<6<lg^.inb`\+p\np!:nd0>Vg?o1BJ-m01@P%'nGfB!"Ea7Y?iP.!L\#k^#Gaj1eumHC?er5Ha&@KaImX.6IOt)]I]?b)
%eI.sWLd0jH)a5YAmD&\tQY./O_5$]rdJi,mR1c*Onik'PpAq26\VOm9>b2S"\XD_!1EN*-dkX_oPQ,PCQpR3Ked=U[L]#anT)[Kb
%+8\:VhsPHbDa!.E+74A(aN([VVc\cmb>Li74Beqpf_9Zji9^3):h>KEIbtf0F`JUK=R%7[""O0kQEk^>Ii.`?8PmfGhp(gViIg#`
%o+ER\@.ko7GsCbQaa4-K[m'270Ri3ZCC=sZpo.5cOuDico=ViV`Uekf2OB#GY1/SYQhQ]-mg:ILgN%"Xno`l\6A`&H1@1nU33Th6
%k)+KJnYl+3F"_V('ls2*c.AeP[3P\!m8#>`h:tttcb$dDBh#"sG)BA^/JRrG3Qa`k1t?RuDT5j_1tLp:C!Umal8gonf!-L0n"S.V
%?6=2mp-WH4F^feC<;,K9nHr\-R8C'D3un_.m6UEf$$B\HgNh\/T.:W@:ZapRa1N+;>]GZQR,>qWBbg8BJ3)W"KU'RD_[3Hh=uV7b
%K)*WKrNNS&/lS"s'O'dBBE#=L4pDmF`,sfZ'3R"$n7tS?#mFc<gOZWmS:u,@e-0Ub\WAG/aR_M1P.mYC6q,42+mmU4j%EdBGpX6K
%YS_2\;Jh^(lOG?IUQ54#cVYH,09o+WW.^]'U?bjCE*l%^A04qM(q<Z4(Ib"N:n:d/Q'Jo+lI6Rs.urmmA<i%K"W[!s5MQr("UsK-
%ihGQ5\bL_TFk(Nn%]rP3=&h8hT0il>O=<mZ?luD)834DNVa\%-iO2@'8$>Mt5gHdZk2^*m]rP(9KMJ4Y(c'X)@h]hWUiD*/Ld@[o
%(YR[\%9"g`4F%F)+1e[qFWlkEJE5G#*8=7(/P5$NAjistWO37Q?D0Y,9UTI>g7jV=U.YOon=1[=Xbq^n]MK_j]2Xn)6ca,Vb`Vd6
%Y"[dK@3t+]64'HV+t6l(;Y`,&jI9s:_5Ti*b`?Wlo2gY[.(_2"[0A(dKTPPEQ-H1rUHgHm64St_[gNC!l]<VI0:j,X:;g'X@:o_H
%e#,aRSoPN;Q#sENh5+`uM^YC1^(QE)[p^S_Q^+O7'#h2/V)!4*[49*5c_6mheV1h<Q'l"(@&bJ6EN/SLN\dX2Wm\,#=K+1^-fTRJ
%&8k.ZK_aB6oMqF(Dl\o@gr39#7-M7_K8Pk\chh_!k,eSR`<FXZe!rf3en1X/6XBXqbtqb/RkcGL2&QTZ:DUfc.g`18c%hQ$3JmU3
%dj8dq\hqmCaAD#rBaYV?(3#_XLUdbA[fi,Q>jBh=K!$pB'q/0kT:m:3P,5Tl2dWY:Sf?:</C,GAC.t._r@@/R:9skumP:F#:(9#q
%9%GjU:_[u%5OGCLHNoJP;!8!jK2TKPb#G1\;+4(tU<Y!'XXLVMJl,EY`pHg#C'r0X+pmCnU1fIbhdfM^>#h=LLt\U8XRr<YUTUS2
%E@0XmiR"UU$e$YRU/9c!WqI3iTTZ&;JjJe+$Z=MO*;a[OLThLAA^DDbq2BG)WdfGe6inpd"&<uIQ1SJQ3iX;pZu3<5H*VWsP3U'R
%FLH=-puKC2JG-kj$?c?J5]TQRB@UTo&dRSg>@@1W@['h0SKYH=(52tc<TP&cfCaC?p6P+7p9&rV<V;0raMM,Y"'@uc,=ID\&BZ7`
%gaDGO5_#!!F^Lq52$lbQ83*C/)qk(QdW6_05h!$[Eh]e5QOiDpTtdk-SKJRt`@CWI68u%5@r?'"MGSe"2.$M_*LtZiQ4JoeY+fa(
%;m@ER4/KA2R9"-hJQ9QUl.;a_Mck7,SD%Xsn2#bfWhN)I^]Ac6S":Q[Tml-u6DLj[6Ir.^a;"OUqbIWfd+GlA0de8&[fV$uj9/<2
%@LBM!!%s+f:`#'?h*@5?n5]?si)jaoH)Y&`):9qEbG8V[Mm?5jSoneNC3,Y,I3)D-0.D_^=:.#0oFmcZo@*c_K4OA!F329_qH6%^
%FN^[:X0@Yj)a/$s)Z)!<BC#[L").Ik_qrP;YRR65%$Km&o<N/X0`%^N-gZRas&Kcs4Y%nN%VWj%4\\qLdIXRuT[ic.S6;85gOV]L
%'i>7:dtpEA9R.#JRQ`?uXt-&OoFn@(6_T<)DpX)nb1=!gk[9k^5aYBPV4NJ%<&l<plPEQ9CnUmU;M0F@oAZHGcCcqmU\OsG?>YUT
%Ah(_"XR[RAdFnTo19"9XA6U'Se_sDi_`Q4'JbqMFCg>QT6SgjiV`[5:NbGhk8f]IU+@in'$-,Q+We:l8bH]tB^NDC4.i?)&phmq\
%KiCUKJ#ZdVbonS1>\"?>Bg'd:M97VU5)/3u>-n3rL12GEjZmDM]$Y,$+Wc@5gY2$=a':!)Uag^@VhbLYG8RE:C6[7<`(!\(rjKt4
%b*4=oF>KSU,p:$P0$cu2R\2SUVnA#?DaQ?(`a6'E1),aA<N9-*O]A`r@r-6e$:M];pa3SP*G69q<Rp4oiKn]'r1p?9c;#0edPFVJ
%X#-c[9NfC?o;MX#lWI:[:Ina%A)RTpV]cSGd5"3+e[:$fN`R6Y"lhB.Y8m?%Lt60G:1;^JLZ8A"dWj0]Wq=4:Nc#K%MWgNZ]CneG
%m.FJK?tP#g;ecP86K;N6FBn0Edu=_pT^_/aX#2`^s"X,_C'2dBaN-/SRI'#cNkA94nT]_(KYsE.7(#Fq97&`KG'm=/UT5M9Y/6dA
%)g&24>aNqZF<bIa:lCug-NKn0LDhGgp"L.t;kU]6]XT][Ki)tm<CGhZ4;IDe'="_jYE_M"$4OsXp(br#*h`-sGYl$=M=8H`l!L<&
%-A$AuG]B`YlXHZa0kWZ#A6;_dGK'#O\":W"!DVRiBY+kkXX^'Jjh*P=;6Yp]<H^<%Ra9.s[nn%UP2G!T&]^#sXm3F2EuBo;8Y8c:
%_5=L=h%![83^G0LlAi&;[']:@5+T10.Y7c!=GC8M;Zg$\2VAIO&f5!*G#TbsA7mU[6K8+q*C]&*#rXZ6C=>T45mdnaA8rBX@B_&-
%>6S]3ok:^o)rS[`M],jD![1Md2c9%[#"rtXU%&kf$4bas'p:@V2<jBK"E7+3<6^[oX*Rp]61=7fm1,U3q'`m2fIW<_F^NCnKW@\[
%hkhi[)n-G'c"1T+gbo9km'Hf#m'4?G4/M,7L;D;;79u%.QpG$?&Wb+(K,J&3Y"j+?rA6)HXl;irV/G>'L"^-+4]mLgg5R"ghEe<,
%W2Z^_:#m5:J'\ja;R+.rSPeu"TY-'g\CriCe5UBt(VV<Rm?=P)4h7X(0aADSP,GTX=ot.Nl5VR<Oil+*XIU5hA'o-lTf+T7TuCoJ
%[,+-oI-[Im*!FSTD$s>u9jN;-%)Pf2SAVg433e&Vh5@f,$YWCmFko4MQR+U0I*bf2$0$lHA?-u4l8tn_9&^4Us"3'k.H:E!e/dmf
%E@(d)a%j-;BDf2o0GgGk1frs<D09I<i]p.Y\cI&!:Y7FjS$Xek_'ol@,.9l!MW:8?Z80m1Em+(AmD&WHn!uPTp['p%%d;B4=$UmY
%M/t^XjgqD-K-qg0QrLF*%L:gLTV?cGhOVMd(LDo/L>9\%oi1;abnD?`TVcD]ABPkQ%/NQb[D9tO@0e,`CLjqjTU'32Xq't="n1!K
%$m,[%o,rHl?GIC+bFOS5q@rUfr\t=&#.,FVBF;m2+,<JTiJFHu=?kHG%H0,je`Qh:F^i1D2.n=6RtosI/AuThp/IfoC<)k.Xq;0L
%+R3fiE&)6S5Wg<J#=k5OM]A>Id=FBF>u%f>4[K=4Bo[d?J-o#/$Na>_Zk#Mc`<?DCAkSsMDB]^84KfdLe.kkb<[5Wq+0#d//ddj!
%MYPUQg,`89L5Kq+J9<[.krQ6p3T+VFa\I;XXk43XKgcNkeN^*URR/81=*d@l@Fg`a.<@Vu%/^?;f*Kb-EHX-s2I^Xp(D]Xo*7iN<
%o+hcKS?Q-%6OgLKPqWn00Ut31So(Cq'i`>K"5Nu=AI^!\JM9&dHV[CQ?hkhb,.'1d5jj+#'uUjo[@@%/_uuD&YJB`>N0e[QB?=T-
%./:W1?J1h"1Q"W+9r]<AomAVM7CW4(&T:ij&4VP,VZEp;XoE@V2J40"Q_a&JLR=)ol]/i9iBl3b-TkP@*PTsJPli#3DK5ViSJO24
%ja;]f,sU0VQ2<YU6?-$:*m>/[\l1o<4D.+KEG]WIGiSt&lcFK]o)I?MY%Q1r!98KI:<(=IZN->aT1(_=b<SgHM2#.IFG@[7OBeS,
%E!EK2k`SMX\q*AODFj^^SM!ap^9m?K""$>DCK>X3`j18l*>]`:h2Nk(C/Gs*)aS+<FF$pSJFYgJJP*p+dO-*AJ^@kV")eYRh$@31
%!K6o%KgP>+o,6rr$UOT"hc`u95S5TQ[CDqt0gn_)-@up;FZ$,9)oY.Or+Z*fMXa$'lc&>!\m<r24@LKZj4rBd[*"?iGoomiFI;d,
%"dZ/#3//_j"6h:k&%86<cq1FYet;!6VHPrK_cmBf@<"kAF:k.$i<\o5.(s*q=P8:kS:aFK\0auTUo12EAg&Y`i63(4OMjnuX/i>5
%fg]s0\%L_=SH:2mg`?nc(AB>'j,/#XC^Kgun/`n(\+KbL_Q7&4[eEmOR67EK'Zts\W61MS;]<s@[C&h;`MPq0f/^p.b)S2f6`RYb
%I"E@+,4dEi<I!OQ$\c9PV1>o"LU;XP!Gf_n"bG#)&a>!jmKaQ@D_\3HB*0X\$jO2=aT)t4rXV&`n$APV6Eoi5S3O;pT2X/c]?LPY
%DmL14mdL-aMomqFo5<2ZAdERLJV]9W(q*S`4^)+WcOh!:ehnY9^d0JKp[fZ=(+TZ6JL(t%eJ(2Ml>J>Gh-fOMRLQ\X@,i0,JFdMb
%n4%hZkc/P/-n#d;rDR&gfCk6"<^IlA=jFpVL,@2cHS=&;,K1QnMA6^=k3%QJRUsMuH"3N&UJrc_jf"$u_QoP7@Ce>nj:&G>m#sD/
%aV*cQX<l58afX$0<\9+B8S-4MO"4bc`tc#UUHt@M\Nh&n@n:YpU6/LbP.oTq7/IkgUFlPTOO](BW%fJ*g8mhe_6_3Dh&UUBSo.`L
%o4%'_dh,Td02>ArL0!?]Ztukc"]rMB)A"ENTFk[&)TZ$C.r)3-(%#&_Jn9hZ5Vs0^m77YsEd"g^opMd"Bb4cEm\%`USuWQrj]H<b
%8>+sGmWRXsajgE@bGZh)8<,:MOGq_/i2t(884MAj0!e_/c&r2JM_@P+o>@Q\Nfj18M.?76pm/.+Go[""WZmMoIF/&-DFn:kb>_Zk
%70i3:Pf]AW5ca:R&s9&%$lXu1g4Fis;]&Fg+sq*22WI9B8fqhk!Xd=*?"ll6BXK)pC,F_%$H3Qg3Ah_og&s'a3lSauWH=$V8hm24
%0j[Dm=Z*:)N[rUYS3`,\3MKJmVZ!Be3/0O4Qb!H?o(GF'6F@5s\%ef>9ImdoOqq418W0TV2[n(BaW4U$MAN@(MFPCRl8k6MLi]m4
%c&`p=Ak:Xp>n+mfjmA(:'t"/FjZJohS7HJaDY@Kp,_;7p_-#<,nmW_V(BO%CFHdV01*U=1NjHul`"GTtG;gd!Zl5)C<C7DDGt'?.
%;B\/F=[iR?QHZso<CUeJ;9h??+Sr2%)u`q!dKM*'J>5%C:bri3>:=,76pqg(#(fZEK$g"0/#G'^KtnIS(r<^K]I9c8V-lOC#V%cL
%ld(b)_K:rmgsO5GFGJj^AkEc(MhDTr/9VYUOVd]4aIRV5SfH,0cJh0E$C.tT+u)J<X_2VX'KP]&Lch?phrVn)Y36<=Ca)=8\]]E>
%oXN8<D#L@EQ[5siPO(D<B._dX%H72e'$K]j/em`AXW>%d0_-E4rH1TBZW"W)`&cgCUbjgEfs&;-qr_*b,\#"VK).U/dU>s`UlCd`
%j/Zo*`'s^XiAMe7[hk)oDcMrNE`rO2nuc9R%uHmENIZ&-P'iSm<;Tse5dl+TZU10P'mmfc$>ottKaZXbSIsX(HFNQU^65`X6>&#^
%i<5e-D(!5pYTZ"A"`nj%i((?HXN%`1E=7qVNrIeNS]'3ha(_&Ikl;(9=b@b7\.OgH5[CV<WUbL8]g,eD5h])QTN76dW+aTsEW4ef
%5Wi/Q[KeGE718=J,.)SeD<K,Ki-%gU5[BSVBN#V7D3QCqag[[qS['(/^E^d>OY0`*Q<K)+>CF3[D+3#c!0&B7\UIMbW7fi+.[khR
%U[QHM/9Y[0Meolr'"7Kq&D`egNreN-gRpUsqqENi7;F!)$>9-No]X25&2"W]K3RP_OV7=j>5jNIj_!R("-!jPm9&eMgW<kBDPpR#
%Es8qHkR9mRpP,89bCr4jQC^>ZC1r'&BB-o_ka`,Y$Oa;>&p1I>P+\UHR*CcN$tc>LR_"/ZGr"?7@Ta=oWWq:q,LUb>6+t8^D73;F
%Uk"m;5=qM37j;E@6,sTAY_85Lb5'W+KNKQ!k6V)k]`(#:6t:lW:.rXugP1"\eD>#:4<N9P]Yl1=1lUhhcq)'/%RfZu2K\G/V`@(:
%?^-QpNsGcsRr,OJhHB`SaGf>$6cB6M&"?!RAX\\b'ThfAcX#):0aQ"dkZW$7lL)3t"j/HMEBaW7@"o,;r:2f(of-"F,-s&2bB6@[
%1HZX;E/lOV*1FB4',!5%S:*\$B;kBtp4fVgKS.k993oWuJct&)2?tE_DQ,NK,7?hm<eo;3i5-.j2e;nSOCaTBWdom>LBD_U:R,sB
%U+c9Hqgd?$hZO"@-<t,(kZFQUlOG>\LCr+"(MKhc7W)i#fh2j7"4ZY))2Y=\p#;l%h6KEd@&`1]90P_b")5;$E$[;L]qX%8a,L7-
%a`>)s!I0+q<,!A,;C./Cc#DIWF)H+##kailRqu-`MLeRO+AAaDh>8efKFi[(>C:?V-^!t8+*CdeiL9+@!4D^953RqR7COWXK.b8=
%WW-.b:]NPh6<PM%No_a+c7i'N0A$XbY<6iT*$BQkjYDM23eV_be!m^u=4\<+rAYs>*I3)8PS3H%g4FO)^P2&ZSGf\_cceXLF>Cfd
%HmU;P**nY&<A7t/10a,2qKK.qj!KEZofTcTrm")L=.D\5P=ZuoV'%NPo1%)[KFjjl97S47/:`Bu&UYC*Ek31CiY5T])+cq6\$-3)
%PlQqCb^J/$@0<GRmpXj)Nmo21=R1JSc4%e?%AF;%$8S:,$Q?faJG_1KQ3rBC$LtT:p]_TAA^Qef(G4SU>G2bceS3I!A"XefH!h+C
%HfeZ9b":5pBr=@Loq+gTPdi$77Wa0t$m,VE/Y3o/RY:Tb_o>Cp)oJ^%W4Ua)%e>'?>>Pg4s&Mub"QMbW),^/AU9pki@.,;Her0ge
%4>`JRLQ*elj<S\b;']\61E21dUGAKW#B^)CDK^Ue<<Z2-=lg+30Hcs]JCO2UdNg)*2ZY[LN1p9c"G%36SZQj283*M?1>DfeU00C)
%Jm:0-icgZmQ.QpQ1.2.4\Kc+ZI-:F<l`mFVL/DVtc+;HN.$u_a&>&hgh[S1L?K>/,TN/NX(h#^d[r:p#4l_,6N^fg9e+/%/3NDeQ
%\druga@04DLj0-$!ckFXd07aYjV8Fq!jeWn8d$JIq(.tg#s/.k!Z9#[LaeMbD3c1j\dH&2bRg#F[i15<8(g4T[3]N#k!Q&512Ms`
%\1AQA6e*!2?F/1I?.rs/q2?hqH'oJ:#/^IeM)6eN!BM4q;`I&)/1:V6!(klaH&UGg.@bJ>@dg_VUuBO"TsR'kPSS]U%Zm/f"2X#[
%QhFWPXm.\j+t'Ucd7I5mbT%^b-"i>_lU[Bt-'GO5!`">M9$e$k4i-c9Ka&R'@&k<k`L:>-!3J<%ac0bM8b>e25q^_h]uS2`Y1P!+
%r1`omDPUl4OY0\VXfFVK4Tsm^Ob<VM/;Y7m*#t."Z3&E)qK>^RaqU#7UWEuX:okue\iPaN"PbS/&-15_;JJ9\d^VRZ\srfKIjAJF
%%O>jIfs78j[4C">>ZJ^`PLHknhru297-6q@JTP=]GA_C6q&YpB(u&tJ$ZN\:MJrb_Ebg%P:g1pC@)aaPcpCT\-63k3Pdt/!7Cf:Q
%D1O#Le,Zj.9Lb2P.VSZe\Z9"nWh!eYe[0-m4%h7Q(Y.bo]S`:(r>QqQf!'d(`%r[6F2Nb]$'BhJL4'8O+K<]:`_4\k]DXF-j!!?m
%8bTX;JJ&CA(`#Q-frkf(iiMjqN'(l@3:"Y/@t5OE%Mh`T,%UuF#c(GC8kb9&'j;tMkh@2Q&sdtg:$#)UTQ8hHB`/\a]c9[YHC'c5
%J4c+@8!(+<:''6/,r4UR]eDD:*>^`/nNs^3L\P'j/q+[%K[H!Q:?6G*CWcGqLrWkjXRuU:mtI[(B43:.3=h5;73$KTr/Q^=,\&F2
%.1aFcSdsrul2TWH.!LUcUf/LXbKb,Q9/K;MCY/%Yp$0M*E(n_`O.U'`@%sJ9]sDh!F]M?07r7oMfS30YL`G7X;YGCL?^clKOTuS_
%N(*)%0<sj_9bJ,]J@j@A1f,qm7hicR[%Yi3OM!3A\M<bbm*$hOjOoOd3S`N&>2u(Bc@rEA/GasG\C2&_U@`]n_Yg6F`Q<Nf1RWs;
%R<mlHSI84\'s*k>7p`_sYZU"dq?-MFEO9emJP/3iZ"OMD14eR*f+/.cU=U(.@\j+^W_?_*R#iN4bElA+>)72pZ##C58o"b=Z4t_4
%bpgTg,6+<\K5LnC1.B8.24fF197kM]>YT.1=`V_ePaN0UUd&KSG[tKeW4V_))gRfo=jVsM671%EE@ApN6-#3X)-;`kh+b*r9P?pp
%YR5IFQZcQohWL>&:=!W#9W9UY(Z(=qC,i"!!#8%JY`c^!7Em+8oH[]JV^"5oE$&]+bXo457$khpo2.mVAmI<SIhC5+WI7IQ'pXLB
%5:P:DMh-Ttn*%:@'67$;0WsDkeuiIU#3C*j-s0OZG<6eRT2blg.4gHYQc47+8[./))/u:QGCs,l3o2$>;7&`PB\7N<VF8!8j;auZ
%7aPmIkb6$A]q3iif\N:6MAM'OOjcr;^;KoQ'0fMcaY-m-7]EIT,FsrVJ=&/[-m^n9`nYIgkbCLS)O%4SN%^(k&!3E9HHN+ljRueL
%3<I>2;F$Ee%Z7'4iAPsY=./JJo'E+@0#LFQ`jV?$Aks2p!\SAcMai(&/X.O&LngV+]+DuN`&/s$IZY4EOc.DIV.'ts:3Q#Ra_P)P
%Le\l/bSH@c*T[HKPJA_C!/99p*Y@j.KADilS#7C13%5Nl3G!Z<[KDm.B2q2j3X*CCAGT6&k&&r;aEp>SPfR\hT)fP]*GmMY`Z7lV
%>SF_$"o46M7^7j`859Fsd+.rd^L^GN#Oh,WlOK*^[m(K+170V323qiGnE*0CcGYSE?$pb.Tb;WE'\C&DCA@s3MgTn)3cGr(eS$+c
%BXRe+S!B%\45i'\%W'N*FYPbN,mbJ_(fB$=DAmOFrctGRk8bfe$-TC>XK"M$21-mH,]J?/oL8qGYWG,!7&Xd1$uhK`gbVFqM((RG
%$DhK)-8m13K7Z,kM!^R%4%2$X5klCsbr@ElP0;ka1FStbeFJuPr@rn9[YubI!8MWldfB:`?57mCQ,52F?La()_M(Y4P;39*>[T-T
%oJJG%jDnsll6N!tXq@Fah:tbH#bL*r>a_'r`5NX(h%ojK5br]cPi#MOFG[TV(r-A)GDA]J:EeJiU1WU7_66+VG:Gm\EXNF+9GJlV
%8LVr"3T>9"Rr&(R]gtJC%&8La$MT+N:;tbo0M/#npJ5Rl^oo;0(SR[-,![[k,S5D7.*_BmiO:GNmQ;56U0lIST?33`Q+L]="kIk6
%dW\6c3Mbl6q%*j?7>F%$npu@RM4!tWAl((eYSkh4WTEK"0c:-$1%8LX1eorXK@GT+f4XDnI;T(nJ%W6Y5h)a])!Q]]*Zk'-HE]q=
%]!;<UHruP'mPF@_U-:6PbYQY2X)2\VALT@.]Y6p>j.&+HoZWBWkS3/#)IRnu,b0bF<@&B2PUn<o'N1sZU,=$q(LUYe=_+3WHXOKN
%_`C487:]60aK7!Sac&\B^.<2Oq1C[5*RY\%MD#D\-HT^Cb:k^,&.h"3KYs(*($5D;#Vcp8a"A6(9t8CF7$FM\K_M_Pp9$hOL6IXQ
%7$,O^qJ1ejOHg=N'm3u_D$IA2.7;nMhIrI.AhhCZ.NrkATk<NG+jI^a6mjs>=/9t2hbOK`GW,"$i%-!3W(3M#[V*[%4Q^cc+lfpg
%G]?I`'_6mg*Rt8V'r:n\BkLUeOBsQZ,$`V^6jRD"Qo<Qif'fjp<^ZJ-o5,GNYjN+7#gj+Y^Q[E0#t4>9,n8b6o:=u:D]rE`_juJ6
%&\\Hf=n/e[;!:nt?l5b0PuU\mJ$u"$N])2hM%h'.A]EFH[fG3%H&9-+P\B]UZIB<EL7Vh(<kDVu`/O:B+MW/,I/63TYJU.E*E$gI
%UeZ&S,Mpsr.Dr?WbFSkM&Mm@r#9?L#N="42B3ig"#\.jU!-Mc5URJ-FWu<Fm#%S51@qo(D%FV9q03<3(h$@2leRF"<aG0scG)oJ#
%a(E^f$4Ug[;5%HMj"=n9#@)cRBq'u+C\a6HMBtoh48\WNfBn6![Ytb<S(aU2#U8uB3sS`]7dgHkmu]=CEA][GIFhBA\>-X`.C<A2
%5=_,@3?<6`@>.NY?uAWNU0`^V=Z1iG7Ins:G)@#%KsdURi6ZF&eYQB:(*I?m#K#)j/VIGpXgJTp!]SjVNGZj'62+T7[\DVnORdH,
%Dgk'=T;>T7qX`BSR`sIlTH^[ppZAGnon>miP[9`OO=a4F&P@@hgolfGk303C6RNHLBPsF%5V-/H3&53#%X6?IQXk_9DpjWfZlZna
%Q@a`0h$E9^0pWM"'N5ZTSD+%kYH%>$%5iKO5\1HY>2@,5,$q]pmD&mj>J9uom7k+j)1F[?<GEIlJGKIT;/F$>>T+h:)\CA*2k(\C
%h1(7*R4#VqfO3+lk2ti11_n3P)K73)=WoVk@KhCg5M?HbK>"G.p1i=+\#uaeI-[eUIKIHF'&7jg9h*36n$c:3P`b^foi:Bm@W!tE
%k'hAa+Gu_bRHUhmcq(R!ZGip8d,sMfR>G2d)5tt8kXE'K-T+]YClu'?3otLlbSE64Z!FX%3-rbjOYKDm0j4LhU<*1@WM@ud[ErZM
%>')Vm%GD4gAo<K1Yo/uM%?!VYMj.fP]XQHS0=7TJ)3;FI+CgU=F>ZZBW`CQApP%[`.A*;nFi1Oh,;3Pc<GKlm7Ul-V%jn5hfiY(E
%O6dfd5HO%3`S.gP@VepEG*CE`@Zdt[ASu-T>+13&`['YrIBofBXI>q#>#!Ec<8#65n;\b+A#i2D]YM'7$,Fd5&^$LZB9V,%)3]/Y
%O?,!<^VkI^dF0A#XJ_lF9D>I`Q>b[B35>'K23@mXlkT]n\!bhoK-1EOaObp4NBKpmPf&\0Wj,)l6'IFfK1/C3*2.,0!f<lnMj!`n
%l$0ZA.;g`$g`[Sg'W?][R@g7;g!hi#r]!6h+LUF5$qF9R#Z"@j!uWGF:*#.H#_!)SZ;a69[%;'fc^fB)<dcqo9ck;'(o/CV18B'A
%1`Ak?:Kn/<e9.k`AJHE!:.j]O5DMm44P@t%239O`/ZLkIEetX/48+Mr5[IarK2,s:=(gnLZT)]\N_$KHm36_#F9L]geZ_h_Rr+=o
%q1Cg;W_)"cCQAO&Q?i6_/uP.!eNWK*aeU7N1Ij_AkF7T+F-KgrISjBCF4<OW3GMDK8"#[e.]eA*H:pKddN+S/-.V!#6"VXjSdNVd
%gP1gk\`W<fKIHDCQdQaS,DUeAD,pp^f4$Q<Jr:MbLt(CLCb1:q#uNkgOrO7*+p1Y"4#E"1(GI#t]+3ud(%THWSOBRa5Y0_i5[E]Q
%1<mZ]?N,RuO]@!i`I%&nH9l>r)EJ#GbZLjpCrT=e@'u8ZN7:+m`g5[TOTN)G=Zc/E>"^e3OVTKZLTM:#[!8M>J7\s.B(2nV^-Zs2
%jt3PEMHgFI;?M$(X4[+.`OI(h80X@;kKReeMWidU-q<(a"J`[c+k256!Q9M!bB6h]Pf4^6%sKerI3W2TYF+u:c0J3.`?8=@-)ble
%R7Jgb!@9O_+&[e`d0:M1@4aR%RL*,K:)^\U[!AeNcfa`)m[`"631<>6Ar#lhNYYnE2jKKMai'^FG3;+'!QoJ)!j>FA4S,J+46a(E
%0]8(KIaugLFdf+honmVi<@:k78LSJi9WD#ZE=G`+dMUL!joH4Q$n.u0E(:EDZb%c'h=koU0r/F6H[pur'j73qjb>XhZPbLN?*OX?
%G64EoH!]i7k#fJlU)U&bJkY=fLS#rrY<rRS#o8sUE^s>=d4PG(<6/u=Bj95K`^g*9njW[7lTSF]5\P/G%u^)YDa=m1rW"Qkl"E0B
%9QZ!oa/]MI[@RRcFXjX<)GXo_!7de9E7#L&0*JM.L>alqOW?H9N`mV;W"PbHP4D/?4rR)TS=?Oa7*\]5I/PcH-mG@/0gH_:[^W!,
%nn(9/RF0"/N'0mI?cQVXQ/r"o2QJ$-W/Rb[M"Rn$XZf!uX03q/BZ)fAMfORd9$L;U9#)E@%`psSRFEiI(#?4sW0i=3j"Ar_5LDtl
%jT,^bZj%Hd`E_&3ULG415,+jNE%l<tgRs[f%3<R#rd:P0PjA8[MCrgGEUF(p!A)o>HeQH?b\`07d.+W&'NN^uR^)lT92)!D8Qf\[
%=s710l6a*WNV4-aW:.;FcYi"-(Bt>9U<@cBY/\q375#f:Hr&jiIH'jc*GmasH*Sji'p3-PO`!Yos!'l#&:=p4<4*hb]sADS]8/i[
%jr+<D$q"XDcEt(^RLrZil/XUuhq-IX%#3K:>$eRYJb2,^&B(*b>+LWTSn:9hKdQI"F]pTFp`M#O3r]E3gGWgkCI`[29G43Q.,kB7
%X][_*7G/<d>-Pg'klGDOi[qPR=@n\rGIb\fH4QV*U?rErq(I+CKV_?\_I'$J&2&:\c[lokB3PtB$]c\i?Ae!6:<P-F%0iDdGU8?i
%/btK>QI_Gd^F4d1%RB]WRbD]A3=Mc$VcfU&&1^AEV.&bm-n.'-dNZeKXD11p0,=Mmj,5Q'lccE!_X*ITT;h/'TqqM')4#/12^=3X
%A$j\@b0^<KpDi+NlR3EBP2jjrOuo!2;?f7L;#c8*F>*$Lk5&+<]9<`8&S7T.#!4K!1&G4](,!i%XQ,1iYjr2HY4hG)b(V@!Z"r]Z
%6+L$Bf<<G5P)AX.TokNXWknC-'#)>S="L)22,p3E":L*VT[F^s'%.AiUbT&td?S;+;'n+B[p*=rEJ21j:<Y;TpY(^s(&6Ko.a?nV
%-nNR)6(pT09;T3mM\9L`@tYH#"u%tN')Nm1W(>o>lNhj^>*?mQ=![fM)oFjATjbl.D]/^fm'=9V&Y7ruU$<s2nP1Vo*:Q#UU9XH?
%<u!oG&Q&6VB$G1%X:"Nn+>>(pQ"c[jg^S@9aX8Vi$e%QUZWXfR8K8D9qr,pba?'ao,``jm.A\Fqi35a1Vr9gU5@e?-d,@a^h&+^L
%KdH``jHU!E:0uc?W"Ia.82ETZ)CWe*bjch3_:hg'7FR^CP6o=41]8fA+<I^hXldMR-[Kh<1Ar,u%F?r`VK$dnLHDJdKe")?ZOXaD
%As.G&@\*dunQimOocN%*./FA&J5-EuG,ki.K5?H)3Y5/9F.'LZ+@=PoS?38p8]B^NOTlh``*u49MJa-i;l/g+!R5]@K)"EIf]"B=
%9T-EgO;N&5$&<S4o<NHmCE840&^NS$WMu;+YH#Z3ier@"I82m;i`![ODKB6/aJdtp^9\@#G=L(,*&QrE8f`&qo5Ld!QSe']i<#'P
%3$R*R,@H5TmGSC=K$9".4FLpI;l'/6-pBnJI=UT"A:e&T[AX1ROS]m-G?:V`/"Hp+(8Oej\'@]s0L>IXhqLMlZIg4R+9hS<1VD:)
%`+<K9@eYm=PP??Zog;Iu4mS%S`u6Z]Pt>4id3M72aYf#UX7b'>)L$np/-P]C"mN@ol>Mb>S5V_PBOeQklfOUITCr[(p(g_A[4S,u
%2e/#+(6RE/q]P*S93%:9B3tSKC!Z3bZhKk2`"t6J4c-QDdkbZ1XZQE^U67=d;8*Df7M=TdPC,'(0![,/[$KX>(>76bhQu9q$&t(F
%'T0Dge<iXD&/ShT8T^X>XboX^V5-@5K40tiKN&\`8TNIk>F#a*F@!2$T5S<EV;@r7;m]13;6A/7Ib(]S-H&Fi'X,)1M-+4jX*PSF
%^'2i\!Z[a88[BP\SI;lj'K+:k=/Dio7F?g`"EkpmFem)X%F)?ta,5*s.MXK_>r5T%6rVKhO#,[2"sl!sWt8=]S?GcR_Tg&WF?CB'
%j4=#5lfurl?P:O8N;<_5]54G_HG$,ZV-[Qfa'uFa*]+5\C6odg_>pW[_0^o]D9,C%C2f9.5_GN!1"1kpkXIl]-&?@83AP3(r&eXU
%*<W,q-Hr,cC0T?QMAB5Hr@0Xq3Z:&N3Y83jVa.#r$n<$YoF='HG7TtFl?ItZh'2*QPfc"tI[(XFJ4$F$N9i\%Y?4jaGV(UFL`YkJ
%M07=cfPHn%*Q57W#WiNr'#*TTR\i9!Fc$Qi%]MqZ"*!tOTKu"^F"='B*m4GBJ>3kfqM&+fe+-$8k@G0r\V#c_OVN'fWPKP3QceU>
%n`ic@G'>6((]]b:5sRWa")T?H*b<iFA\<*cK9o-"fG&@!6n+A5KUo(:_Wr>&qVmn8`!.*'4s@-SY\9ldX_0T)'cT\NBB>3":)]nN
%pZDrDi^$%'Cofa7+N)t=D7dS?fCk*d=.s+e-N!>FX;1.tCF`r-?-tjMhHHPiRFr&o'NptH3=>EpXV]CMFu410=3],'D?\_,8/#6$
%0!(YL66=Hp07B@J3g&F127u03Q9F!'6DIQ7;"!L<e%1Cq6,JH-*u8,>A&A[6R9;^>3LP-q)Df@4G20d4F,'0)8bN;*Wb/>"c]TQi
%X&D?q:ECkn]Zp_N_PWK+0!;PD,`gm+:#$j"3]^BM*F3MY]T^DA+BCk;mtJTPFlNG/hkA9<<bi-_9\PL:dJt[K"u$iCI/5&Z[''d>
%kZ6QP$d>2WNraS6lm'>KkDo((9ZdP;_`S75Us:bsM'bS7/#1S/+Aumd9'hXb7LAoZ45Z?8%SgEf@8.<R,)\r%(SGi2ZMq5(=&qK%
%k13^(*]m``_]P:KUMm^jeq`N=+*;(ZDF0r`UK5d_6r6-r>u:!uWo<,P9Ei]i5/Jd#`X#,fEP07_1;j+J0O,1+9s^!6k3h7pQiJqc
%=3*'t8)8b+(OP.j6W!t=b+P(\OhlY+l_6KB9;Qf&m89ja]RC-UQX5l`3<O!1LLQ=EHc:#m6)3(&XIgU?$g=)>`B%=,RY=`OAMdU>
%+^SAqkj,u=4^Y4cnDSC(E[shf[?t1!DKu;O,)Fe/3-ie2<Knqd*@8W`6@jAIK=V?<AIU\dho[f1d>.lGDn2ekG^`D.Z,#)<K]o^Z
%[l\&("<i=q5&X>SqbHRDKX=L[J_Nn_ltEk7.7rY>(+/R5JR5tYdU!$q*=!\a$..:f:6ldmKHb7VVUXNfM,6ciOYTR!QCt;rT,4KV
%.a:E'fF#`#1S:Oc3nZ9&2CG,KVd30\V$g%mMLm$C&A,p'j4jE/mhV`lJhJJE7kt2(FBp.j4)"pRQR<gE,4G)[T]9TLSV:=-NQXKU
%`?7a(^2);$rq$V&q-E^UR;X$*=V00p&f!)e%-8?D/:&mO:,K2@Lr7nD-SLb4j!p6qpIBZn[F5TP[I3c'Vh^VUJV<*olgZZ`/i?Hh
%)p8HdEE0hmq6D_Vht%<BT^SB\C_Br@"e`uZAUbs#,W,fq9J25UFk!=&@XA(d6Y7?PZkccYd89*:OmR0L>kZKXCUr6%@81MnaJ9SM
%'MtN-<KEG41+8A[Ac,kJ+a#JTPnmI''N>/[@98"UWG'?m9$-=lHIU?\Dj*;r#p_KHqhiU])"CAp`hE=[U0*"3KsHFYU"bG'4Y35D
%+6PNpY*BY%\2e.'*=J]+_i'6[V-HZ#B0puJ?(dA7)*jd,k0aJK<P\Egmsb>+K9Os0WCs,HEY#OBUjJd*WXH=*Ul3h[UPpF^,6a:_
%IHo46#*$fo&$),nSUTeak//\Q+f/XX3U/4*FD;bmDN<*+VR?k#$"XV37kIpr[DdKFqJf]TNe/fUngk=LdgQEF."aA+$OQP=[Xj!g
%ER<+LqX!E\0D8/ZW^Hi/+&.M=0YO&Hc%f0RW\_mWBJ;Y43Z&)+D3O4TXA_;US&+dLYF'P]oBc\c$23bb\_+dZWNB3c67f&lQh=eq
%W5A`-W'n06;$tfuDsbJ/%7tC[*DAtXq_%JG]A,0DXcR^QW:sTWqJ/IR%-Ta=ohqp<GagJCp.h?)1-rf0Z'BVIhg.d==G6Mb[FK><
%"/J-K6T$u^3b6N^*NDDFX'.?!66,du(X&kdd<%o:[%jL$5:jAjf@EtjHTb??J/bs,E&3#m,-:r'h(s0+f(WX9>,jme75AOp#"k%f
%N.&O(=:mp,#0PlCcXfAc1%)12P7B,se-FDF<Nf;aa*cN!Z8^>8mIF)<X0@JXf*_43[._a4cVS.FiC^cE5VK$86qoJa<?aa+iY]a5
%XJ5la)78p&mpp"$5+7&GTT719N_hA#I]q!6aRE>&#Jq@c:Sr8DVL4+VQ?#0H).,V-T?/VM9U+IDZ(mF"%/ST9M>73'_E^tcR6thi
%K=4)ui6@(pmi:EaY/%[Oa/\[*LDL/n&50m[Ftpt1\,^4o0I;:(QlN'NLQ'qL3c_/Of'&ho2782?@J8;AlAEYbnE-s/F<2Dp7q"^-
%3GMG(V$Dta*2@q"1)B$[]P_pAr<h9C[2I@efVAPnLA]fLZr<qc4C*RQaIq$EC:#a2C*F#,69tYcNX,6:Ek+i'<dc4hb/5P^r@0Y(
%n+FT$^=VLJaRj8p2F,_rS&X.W>&(.*[$DWrD/O9(^%:W^)9@cZTPaJ$\Md%.YG&s^3P9gn/r/'03b!I'?m"4Y<hI9taUVdbHhT'?
%<]=E)Ap"m_c4"4fA^E>[dp/B9l.;#kHPP0$\lWlgD1tZm#&WC)>AKE^453&tG"37hGR(?s[X,"nCA_8:/AZq&*C:4JQpUDC2&*6u
%i];-tNq"DU=pJ/^7L*&qE:nDIjpYes?-tjO[CLDuBBC_o=>,20d.8AKI_.&ok^&l^JqdZ:895E)mDY9A45B?oe!l!M47Mg>pY2A"
%ilQT#/sOrL<ljuMco/\I\NZ"Zo<!\Uq?rHrc@,Qaeq:R^(\YR)\UXY<^X)?lQo:g)=8rg2PlG'lm,L^lpL.4uepeft2?hMqs2DT+
%]E3&WSf":hr3rU,LQn*XaG':o4+;T4`>NTQZH?l]6)&%q@\UrN^gU4Bs3#P5[<@O53akh`]B`NH#/KMd*nbB!8mg[C%4WO[ej]T<
%NaDuO"Y#Ap0u?q\^Z8*:LsuA'fjE12c78Z#H%Lil^&%:f@MUO90+Jd(*ksni?%2IH8_NpSYEn<RH@`%'nBW=h[uSq4q?7Q')n6Ka
%9[%m!-m/sN#8B:_.#GsRSb1pF!6V4mLuRF7;\nq4+-c+\-+jgV!V&PQAHS.G(Z0&(XAa#K8Fkno*=L;Ijo/6!lkQ)G1tp.tHSu"_
%I4,K06-WIJ$&[q=)*re_BaI]9&pXlk-jYK&)NcIA%&)8;n6ckIg-?7[45oQ4`l\DACI],&dZb4"&#3C@O5JKocI1E=dTVOPBoQ:O
%<.CA^$[5(BdKt_d:P;t>l1QR7EbNknU4@hNeMTD8<RMj##*?l\)TV2GC1'P[Q^Y[3njWTc`=&P(KkamS>r"Sc=KQ"SCitP-!)K5/
%U?H2WEtp-e,%heIU/(FNM?;4M"AkZ"mZK/8(4VPPE="A]4kj/p$"s!pBHkckm7cub]TME&.OZCu=]%FfA-.nVBaY8'mpl1\MWR0!
%?^hG/95M?MD=MRI[hC&5$^qXG;\OQJ7]*,\@`$((cWY%5<n2&=.p6UE'Zjb'5qTJ_<."gZC?;X]d+jQ&Cn]t7G@qKo,m>]NN1_S=
%#6JS!P=!)1Nc]$&M]H9)75%i"%lK=Wbooi0K[p/+j]E(b<1=B1B9hhh.,NXm#N-jL#dL.u9m-#"90JmB?%72+WRL?u66:*XE5T[r
%<sr+$77;[_9OVr'R7Ya2HU&$YO%2a:6torD\4G=/(08W\n.]Z+pf9-)E#prDPDFl%G;ASU3SMQo#VWo,N"f2IW"m`Xo%bl3H8WnY
%A^Io':/#'ECX:ae"CTVoo@5<(H;bS_qcqN4\@"1MKlO,JgE`^;ZTWe'G"tlMc6C?&8+F>k^EI:u7tJoCap:q@hngQr2+G@>)!+h6
%Wd\_Dq*r+BeNTsMS6HR_,.chYfZuG_lIP5b#1Ts,="(Iup>4^WDJY5Uihl?D6_PigV_O<17`,]Eh+GPX/5Z[IMo=,NYB`-^rS^[*
%r5FIB6Ff[?Q9T7`82:I[br.%I"kA*u[3BKhBQdrAO=G4iEh;T@i57B.Ae9-3-pJ,72"e.X"H/QrA$p/s&6hmSht4cVoHc/HSEODq
%'$Q(Q?#U#h(rh]GdLJo:5]#LQ.mNSJ!K)[:V8AMiHu0=n_#Smd+P]@`6^/q"(h@kB$`R,.)G<H1GcBN@i9\%P<i7ItGYQ=327,.Y
%P>[7gE>ecA/Ts;u)QXXq/o3H`1s-R^b'O2XMX-aUCG3j8Vi$>;;Is/]R`/LpXKV;frDq<lGd]"CSK+:B6uVnNMN5uG^;G_P;k[4P
%AG.9+8CX7eg4tJ"17?+(U[!*gq4Dal&mC/.ksR3eIp1Pk\g#J6,[B<W.ibaoDNTP-S8+4HV3(\>)g)"^kbci@%oLaAX&f.K>'eWV
%Z/cNAF40,Ih,S]'0",f8^(Z>6kR!C$#Ult.M!?8C=rWabA4i1,M&e`*>:<JKB'6WBWrofG->=2PB-[m,kmCI1,On>r@3th&A^%7t
%R&(ku#d)=cU3RU#MW4PBqZ)+@E>VC;p"ZVaamt[cSQhDm$UY"b]&CF<7RM<20;XWBjp=mR'WoUli]K2f'ePT.B:D7&X?s$rKuUGd
%6T<b54ZeSU2<r>YYa@cW(,SC0p<m]`Z()/SVB,l&3L?1>7S$?QC!ARUBtR$']9bch6-?L8Xua_$2`^MhBFl5/Xlq+'ClA_ciu!Z\
%'A2[-eot;`f=&+Sm.O8)gZnN:NTKfgB@IXSA(uPfCs?]?02N,uN0`frYpb%0&hiRI?GM`-HqnWTbZa(n"`C90VQ$gk3s"kodO'_D
%3#Yhng".e*&"loSRsS6Q1_u8\AET)=&;d<=bhA@G]A]7/TNtk41S"m,,Za(s'Z!Eea0(M8D2ZOX0[7"r@es*g=SaUBX)"UT3m",&
%buq">CX=t)dp/B^g%cQV3OKL8&[)t?8u&L,SYCH(QDg+0ZM3,sQeVkGn#Qu)UF\fHS(!]\Cqg<o)4ued0TX]2.X[sIMW_=&\QP"B
%q[99?^3.l\1'&<#RZ*T]F+@/QncnZ*)3>JCXl#V24KD&C=2,B#REm]MXgOI>KZfh6A&WsaNR^(a1c,5uclhUJZNlH>$8a$#[Q]r6
%+k)s8Rc/!X,6n?gEe(?ZMG(d$ND!;(AA;FX+sBN%ju+-gL'>_4@5&AfMZnOY"AkOj^#4#[GUq7BA7=U7W4sU]7H!CP_il$ZdFE*A
%0tG)'=%G[j_$7$9@HZ)qCu4MG49t/9dufi;Wh@$&XWS0.IQns:D1l/-hN:dK7uua<A2pZ<bXhW0PtL9/#=KM.k$.HeBm:7WUFY4*
%"4V]?\29"UJ?4pukbN-]Cdtdho0fK_dRT`$D?s!-JCI0=T]YO$KjR'gEe@kk>9WB8*BT,g>%U3oUrS@D>Z?P8G8?sA(T0$=q;jY%
%>(%p$o@$2N=kSLXbg]d??+Y*5Fm7`3I5t&[9:[st7=ts.g*3bg3ZqLoJOm(8"5X4#@\GcM<iK[2,`kcRp6o^7;L_Mo$'Bc'TgPl.
%Tsu;/dPbQajd0Xq`E?&N"H@+qfh!5pA"RaU8q3/j!0/Z%2.5M0+rZa\OJaQ/Z"c%+)OmBJ]%MYC!ah-R$O%r3ed78b8K=&Jk$#kW
%TP]3SFsWhndb2djT9&l8<l.bX@M<Q(Mrjb[5[(,9kp+\qC3?dHj0lQR4r;sWi41VgU@_>ulWOfmd0'W#\LV#XXf?5;P4-\Fg<_f`
%-6gl,CPP6F\+qLGoS0)kre)TCV(i`8aif$Q^2[2[c9d$4`CU)6nP6OPTFm7a$.L$Ji#ZaMSTGOG;&JAF4'?'HcZ@#N/6i%'X+T(_
%AnVu"ZTP[Uk2=l;jBPnu/Hei%k]AA'$'23bp+FN\W0,*ETUF%_C$S/DA\2:U7Ft`l$Mfr/oE<]N)&-&?[!8f1BQMDYi>kH_NTi8\
%Ph'Z>FIa'$3$pJi`r[(j9ZZHgbUcR"D86jTJmQ<ge7Nq\a"iFaB7o![0FiA^F<7JcdQ^EhZ^[GG]!EbU7+U8XSD&a?^VG$E,0%,J
%d<hO3C$2+SNo6=J'\\$!jW]Vh:V)VOX<?S^E^&<RLZ6ghBMm4he^0c3M[3<p-`N5dY6rJ3@TKWTa6RD2CqjP1$n(4cfOg/+MjbKM
%]5?LP;#F;><d7`o^^SJ\"(EC?KrjG)khs^mW&c&J-T(S])sj>6d'<LLEl#tTaC/q':MnBDX$a4gKB?K;1E#Su:3haUNG/7p#J#R;
%5cIL</a:naF%bS,YldLPkCn)#V!kO"d3b?"e9emJO\YCTgJ[[H7n1t$iBCuN;!]CTS;#Va@Co<-cAZbLNTt'NV:@Wg1UJn!M/WHP
%qOmW"W@DcBb.&*"'0r370;OYj#)TK*+0S%hpLY?RC'7'DI(^:B=W^7'RQb:l^&<oYJZ_]V#eN2u/\]=')`#"L2CPoq4fi]f9,+.m
%ZTCN+fS[?fUJNI3(74`9#3s]Q+G\f['d$8G<pN)nTNCA5Q4>d;aJrjiLJ7\(X]^=j*i_hSb8.nu:aa]&0[i0P(S`@Spo5L).$IsP
%(oXAQkKUl&O:l@5/UNIjdi6_(j-t0>L:o"5(O8T^ICA>_G\tSINP/BB:hp2V(9Iftf/#g/e664C`DLc@]2CVrj9\ZeJHQmn819pn
%0I"`aeKGRLZbDR6)8I@J&-1Ys-\Q*mgj2.;=qou&ea;d[_&GWq&kN'<er'^Ma2QY%F@b5O/l*6_pLIfWl&GgS!0iG^Da?Droa%^6
%E)&Nj9Of<cpG1F>gqJBt=pH9[-eDrL-!:7oEDKclDlqEqcK5MeRb>?RduLS'(JpAZgCU-BNidKe6edN!c@!s,[dr.Q+G4E85AR9A
%D/)LUQPSsuCQ4`"Ce_=bT\XsT1h[]$VM02QCAP3^3hR4)"(,8JP?WAk1sjFsodd^D>oW'ZmE^;DY256Xr73FRr[hDRXOCN>D&lp\
%EP7hRC;[<TN7t]e'=5CGl*"DTqjI6=etuKdG%jeogY,c%_3q:*Y-)BKW9N/d>t\BGU8un%,Et!ZKil"dfXdD)`On[X[-!7qNj\hO
%?B]YW0:<??J&jIU6FL6Zl2]GubVZcjgBaL>.N*pu4!!&:91RSa)F,iuCa%S2[`BMJW\(kAQfT!uFIRU`jRk-<peIu*L=TC=m<1qq
%pt"U(/@K2<BFFA`XUss`l<jS^qSA0`e+EsT2n/d-o(_35"g4HP^%[$gU6+1BDd6r=TU+jcVnE4To?1M@EfOMq\at0;#IT\dhDoiY
%o\."=VtV5r\FoV]Hg_UEp>aD!2m2P]]-gtc<56/SGOFCDRsqB0f0>h`]7:DFiBN-c4huQ]rV,o<qYFj6m[i3]I-]X;%.rtO>Q8cM
%GO*(tLJMhO4aC$,[!297aciV5+.qm_q=W^]J`'&s#HtmkrR7OVroO.[9W_oZ~>
%AI9_PrivateDataEnd
